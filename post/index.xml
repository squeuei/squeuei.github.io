<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Constellation</title>
    <link>https://squeuei.github.io/post/</link>
    <description>Recent content in Posts on Constellation</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-jp</language>
    <lastBuildDate>Sun, 03 Jan 2021 01:00:00 +0900</lastBuildDate><atom:link href="https://squeuei.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>ニジガクに感じる心地よさと、それが実現し得ないこと</title>
      <link>https://squeuei.github.io/post/2021-01-03/%E3%83%8B%E3%82%B8%E3%82%AC%E3%82%AF%E3%81%AB%E6%84%9F%E3%81%98%E3%82%8B%E5%BF%83%E5%9C%B0%E3%82%88%E3%81%95%E3%81%A8%E3%81%9D%E3%82%8C%E3%81%8C%E5%AE%9F%E7%8F%BE%E3%81%97%E5%BE%97%E3%81%AA%E3%81%84%E3%81%93%E3%81%A8/</link>
      <pubDate>Sun, 03 Jan 2021 01:00:00 +0900</pubDate>
      
      <guid>https://squeuei.github.io/post/2021-01-03/%E3%83%8B%E3%82%B8%E3%82%AC%E3%82%AF%E3%81%AB%E6%84%9F%E3%81%98%E3%82%8B%E5%BF%83%E5%9C%B0%E3%82%88%E3%81%95%E3%81%A8%E3%81%9D%E3%82%8C%E3%81%8C%E5%AE%9F%E7%8F%BE%E3%81%97%E5%BE%97%E3%81%AA%E3%81%84%E3%81%93%E3%81%A8/</guid>
      <description>アニメ『ラブライブ！虹ヶ咲学園スクールアイドル同好会』にあまり関係がないこと。主張内容に妥当性もないこと。言いがかりにも等しいこと。
ラブライブシリーズを熱心に追いかけていたわけではないので、十分な知見を持っていないことが予想される。そう前置きして、少なくとも今の私は前二シリーズを「衰退を前提として、それに抗おうとする形でメンバーが強い動機を持つ物語だ」と認識をしている。以降はこの認識を前提とする。
Do we really need new maps? ニジガクの舞台は豊洲～東雲～有明～お台場界隈の、いわゆる臨海副都心だ。虹ヶ咲学園は東京ビッグサイトをそのまま学校へと置き換えた形で描写される。SIFがらみの描写がわかりやすいけど、高校は他にもあって、そこにもたくさんの生徒がいて、学生以外にも若い人々で街があふれている。そういう世界。
これは私の認識する現状とは大きく異なっている。
ニジガクの臨海副都心は過剰に新しくきれいに描かれている。だけど基底現実の街並みはそんな新しいものではない。開発が始まったのが1989年、ビッグサイトやフジテレビ本社ビルなどがオープンしたのも20世紀のうちだ。すでにいろいろなところが陳腐化し、汚れ、綻び始めている。
私の言葉で表現するなら、バブル期の空気をまとった時代の末期に生まれた街だ。みなとみらい21とか、タカシマヤタイムズスクエアも似た位置にある。開発の背景も近いから、当然とは言えるけど。
私たちに新しい地図が必要になることはもうない。
現実の日本で、新しい街が生まれることはもうない。更新や大規模な再開発だって、行われるのは都心部だけだ。
多くの街では、今の古ぼけた建物を維持したまま、極力コストを抑えて、表面だけきれいにして、店が入れ替わるだけだ。なぜなら、大きな投資をするだけのリターンが期待できないから。
若い人ばかりいる活気にあふれた街というのも、これから先はどんどん細っていく一方だ。これは人口動態が簡単に証明してくれる。私自身も到底若者とは呼べない。 私たちはみんな揃って、旧い世界の重力に魂を引かれて、そこから一歩も動けずに死んでいくんだ。
物語と現実が常に一致を見ていなければならない、なんてことは思っていないけれども、一度認識してしまうと、まるで刺さったとげのようにいろいろなことが気になりだしてしまう。
（とはいえ私の 現状 もまた人口統計から見て否定されるものであって、実際に臨海部は子供の数が多くて幼稚園保育園や学校のキャパシティが問題となっているらしいけど）
Easy way out みんながときめくことをして、楽しく好きなことをして、そこで何かが生まれる。全国大会としてのラブライブを目指さない、そして誰のスクールアイドル像も否定しない場としてのスクールアイドルフェスティバル。こういった自由な空気は作品を貫く心地よさに貢献している。 しかしここでも要らぬ疑念がわいてしまう。
優劣が明確につく競技の場で勝ち進むことは、衰退していく一途の基底現実ではかなわないことであるから、その辛さから目を背ける、夢想的な楽しみに耽る行為なのではないか。物語の構造が、現実逃避としての性質を強くしているのではないか。 そして、その割に、私的な願い、好き、ときめきに基づいて行われた行動が、なぜか強い力を持っているように描写される。地域を巻き込んだお祭り騒ぎにまで発展できる。このアンバランス。
東京都心で生きてる、豊かで才能あふれた人々の物語。
次のステージに進む覚悟を決めた人に向けられた、その水準を満たせない人間をスコープから外すことで初めてできる、高いレベルでの議論。
私には実現することのない、あるいは言葉の向けられることのない、関係のないこと。
……とかとか、いろいろなことが頭の中をぐるぐる回っている。なんというか、新しいジャンルにケチをつけに行く老害のとる典型的な言動にしか見えない。
わかってる。これは純粋にニジガクという作品を見ての感想というよりは、基底現実を生きる視聴者として、受け手としての私が持っている辛さとか苦しさとか劣等感とか、そういうものがごちゃ混ぜになった上で出てきた言いがかりでしかないのだ。
そう思うけど、出てきてしまった言葉をなかったことにはできない。
あるいは、日本の外にも市場があることを考えれば、日本固有の事情に縛られる必要はないし、むしろ可能性を狭めることになる。そういう商売の問題だ、と割り切ってしまうのもありだと思うけど、これもまたすっきりしない。
未来がないから  み‐らい【未来】 の解説
１ 現在のあとに来る時。これから来る時。将来。「未来に向けて羽ばたく」「未来都市」
未来（みらい）の意味 - goo国語辞書
 　 future
 SINGULAR NOUN
The future is the period of time that will come after the present, or the things that will happen then.</description>
    </item>
    
    <item>
      <title>現代文書の構造 (La structure des documents modernes)</title>
      <link>https://squeuei.github.io/post/2020-12-23/%E7%8F%BE%E4%BB%A3%E6%96%87%E6%9B%B8%E3%81%AE%E6%A7%8B%E9%80%A0-la-structure-des-documents-modernes/</link>
      <pubDate>Wed, 23 Dec 2020 23:42:39 +0900</pubDate>
      
      <guid>https://squeuei.github.io/post/2020-12-23/%E7%8F%BE%E4%BB%A3%E6%96%87%E6%9B%B8%E3%81%AE%E6%A7%8B%E9%80%A0-la-structure-des-documents-modernes/</guid>
      <description>文書を記述する際に、構造――ここでは見出しなどを指す――を機械が可読な形で行うことに意味はあるだろうか。
前回の続きといえば続き。
前提 https://scrapbox.io/shokai/markdown%E3%81%AF%E3%83%87%E3%82%AB%E3%82%A4%E6%96%87%E5%AD%97%E3%82%92%E6%9B%B8%E3%81%8F%E3%81%AE%E3%81%AB%E4%BE%BF%E5%88%A9
 使わない文書構造の宣言に意味があるのか？
   「文字が大きくなって格好いい」以上の意味がない 使わないのにせっせと構造を宣言しているの、マジで意味わからん     markdownはとにかくデカイ文字が簡単に書ける事が便利なだけなのでは？ 宣言した文書構造を有意義に使う方法がスクリーンリーダーと索引生成以外に何かあれば教えて欲しい    #で&amp;lt;h1&amp;gt;や&amp;lt;h2&amp;gt;になる文書構造化がしたいと言いつつ、実はデカイ文字を書きたいだけ   反論 markdownが万能でも素晴らしい完全無欠のものでもないというのは理解する。
が、しかし、文字が大きいことと、構造上の意味を持つこととは違う。今価値がないからと言って、将来にわたってそうだ、というのは、言い切れない。
逆に、最小限の認知資源の消費で、見た目を書いたら機械が認識できる構造がついてくるのであれば、みんなうれしいのではないか。
scrapboxで全てが完結する世界に住んでいれば、文字にスタイルのみを設定するやり方でもいいのかもしれない。
だけど、私たちの知的生産活動はscrapboxのみでは完結しない。少なくとも今のところは。 構造を持った文書を作る際に、scrapboxは明らかに適していない。目指してもいない。
なんらかの成果物、インタラクティブ性のないスタティックなメディアとしてその思考をまとめあげる際には、Wordなり、HTMLなり、そういうファイル形式の文書へとまとめあげる必要がある。
再利用性の話をするなら、少なくともmarkdownは他のアプリケーションで利用するときに再利用しやすい。
たしかに、scrapboxの項目についてほかの形式――Wordドキュメントやブログのエントリなど――で再利用が必要になったときは、文字をコピーして改めて構造化すればいいし、あるいは機械的に変換してmarkdownなどへエクスポートすることもできるだろう。
にしても、である。あるスタイルが適用された文字列は、同じ見た目なだけで実は違う意味かもしれないし、変換先のファイル形式へうまくマッピングできるように規約を定めて書くなら、それは最初から構造を作るのと同じことになってしまう。
そもそも「構造を持たせるくらい長い項目なら、それは見出しごとに別の項目にするべきだ、scrapboxのリンクとサジェストはそういう風に設計されている」という話をしているのにもかかわらず、別の項目では構造化された文章になっている。
これは思想を仕組みとして実装することがうまくいっていないことの一つの傍証となるのではないか。
https://scrapbox.io/shokai/%E3%83%95%E3%83%AD%E3%83%BC%E6%83%85%E5%A0%B1%E3%81%A8%E3%82%B9%E3%83%88%E3%83%83%E3%82%AF%E6%83%85%E5%A0%B1%E3%81%A8%E3%81%84%E3%81%86%E8%80%83%E3%81%88%E3%81%AF%E9%96%93%E9%81%95%E3%81%84
人間は金槌を持っているとあらゆるものが釘に見えるので、私も手に持っている情報カードと比較してしまう。
その観点でいえば、scrapboxの項目には文字数の制約がない。見出しを使うような記事は分割しろという思想に従わせるなら、それをencourageするような仕組み、文字数を小さく保つようなUIがあってもいいのではないか。
再反論、あるいは 構造化文書ファイル形式 considered harmful だが、ちょっとまってほしい。こうは考えられないだろうか。
そもそも文書の構造を機械が認識できるものでなければならないとするファイル形式、およびその背後にあるメンタルモデルが、どうしようもない欠陥品なのだ。
敵はmarkdownなんてちんけなものではない。文書構造が機械可読でなければならないという思想そのものなのだ。
私たちは、大きい文字で章番号やらが書いてあれば、文書の構造を読み取ることができる。
というか、原始、ワードプロセッサが発達する前の紙の文書には文字のスタイルしかなかったわけだから、これは自明である。
つまり人間を相手にする限りでは、見た目、文字のスタイルさえ整えられていれば、それで構造化文章として十分解釈できるものになる。
ここで一つ思考実験をしてみよう。先ほどの思想を、そのまま文書ファイル形式に持ち込んでみる。つまり、全ては見た目のスタイルとして表現されるべきだ、とする世界観を想像してみよう。
そこでは何が起きるか。
その世界の文章には、見出し1、見出し2、見出し3とか、引用ブロックとか、そういう機械が認識可能な構造は存在しない。
ただ全てはスタイルを伴った文章によって構築されている。ちょうど、HTMLにおける&amp;lt;p class=&amp;quot;xxx&amp;quot;&amp;gt;とそれに対応するCSSの記述のような。
書体やサイズを規定するスタイルの集合style1, style2と、どのスタイルを適用するかのみが記載された本文。この二つがあれば、文書の見た目は実現できる。
基底現実の世界における規格への適合性と、機械に意図を伝えるという思考とをひとまずおけば、&amp;lt;h1&amp;gt;～&amp;lt;h6&amp;gt;なんて使わずとも、これで十分用が足りる。
つまり、人類に必要なのは構造化ではなく、スタイルなのだ。
そもそも、機械が認識する&amp;lt;h1&amp;gt;～&amp;lt;h6&amp;gt;と、人の意識は必ずしもマッチしていない。
それが嘘だというなら、Wordを考えてみよう。みんながみんなアウトライン表示やスタイルを適用している？
そんなことはまずありえないだろう。タイトルは大きいフォントサイズと太字、見出しは中くらいのそれ。そんな使い方が全くなされていないとは、到底考えられない。そんなにみんなのリテラシーが高ければネ申エクセルなんてものは生まれないはずだ。
人は「章題はこのくらいのサイズで書きたい」と思っているだけであって、それが機械にとって読み取りうるものである必要は、ほとんどない。
文字のスタイルだけで、人間には十分事足りるのだ。
文章の構造を機械に読み取らせて、何か有用性があるのか？
ワードでタイトルっぽいところの文字を大きくする、その使い方でなぜいけない？
お前らの感覚が麻痺しちゃってるんだよ、文書構造化厨に洗脳されてその思想を刷り込まれてさあ！
ではなぜ構造化文書ファイル形式がここまで世にはばかることとなったのかについては想像することしかできないが、おそらくはかつてはたくさんのスタイルを作っておくことが計算機資源の制約上不可能だったのではないか。
用意できるスタイルの数が少ないから、それらに見出しなどの名前を付けた。
だからきっと、どこかでメンタルモデルの変更が必要だった。
文字のスタイルと、構造的な意味とをごっちゃにすべきではなった。十分な数のスタイルを設定できればそれで十分だった。</description>
    </item>
    
    <item>
      <title>文書をつくるという営みについて</title>
      <link>https://squeuei.github.io/post/2020-12-20/%E6%96%87%E6%9B%B8%E3%82%92%E3%81%A4%E3%81%8F%E3%82%8B%E3%81%A8%E3%81%84%E3%81%86%E5%96%B6%E3%81%BF%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6/</link>
      <pubDate>Sun, 20 Dec 2020 15:16:28 +0900</pubDate>
      
      <guid>https://squeuei.github.io/post/2020-12-20/%E6%96%87%E6%9B%B8%E3%82%92%E3%81%A4%E3%81%8F%E3%82%8B%E3%81%A8%E3%81%84%E3%81%86%E5%96%B6%E3%81%BF%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6/</guid>
      <description>Wordで文書を作ることの難しさを考えている。
正確に言うと上の文章は嘘だ。本当は、文章による情報蓄積をどのように行っていくべきなのか、それを考えた上で文書を管理する体系を構築することの難しさを考えている。
例えば、文書の中で強調したい部分があるとする。ふつう の人にとって、第一の手段は B ボタンをクリックする、またはC-bを押すことだろう。
でも、本来的には、標準の太字強調、あるいは、ユーザが作成した強調用のスタイルを適用するべきなのだ。
ある書体が太字やitalicに別のフォントを持っている時には、特に重要になる。
他にも、本文の書体を変更するときは、個別の選択範囲の書体設定を変更するのではなく、デザイン-フォントで文書が使用する書体を指定するほうがいい。
上二つの操作をすることで、後から強調の部分だけ書体やサイズを変えたいだとか、一括して本文書体を変更したいとか、そういうことが楽に行える。
ほかにもモダンなWordでは游ゴシック/游明朝がデフォルトになっているが、この設定だと行間が妙に広くなる。
これはページ設定の行数設定から算出される行送り [pt] におさまらないため、二行に渡って文字が配置されることによる。このことは表示-グリッド線を表示することで容易に理解できる。
インターネットでは段落設定から1ページの行数を指定時に文字を行グリッド線に合わせるのチェックを外すことが推奨されている。
しかしながら、使用する書体に合わせて、収められるだけの余白、行数を設定した文書を作成する、ということのほうが筋が通ると思う。
社内文書にテンプレートが用意されていて、ここにはどんな情報を記入するという形式が罫線やテキストボックス、あるいは表によって実現されているということはよくあるだろう。
こういったヘッダ部を罫線やテキストボックスで作ることはナンセンスだ。確かにレイアウトは固定されるが、その見た目を実現するために様々なものを犠牲にしている。
表を使えば、事態は多少はマシになるだろう。中に収める内容を変更したとしても、多少の柔軟性をもってWordが自動調整してくれる。
しかしながら、表は表だ。表は、見た目を実現するためのものではない。では、見た目はどうやって実現すればいい？
そもそも、枠で囲むとか、そういうテンプレートを作ることがナンセンスだ、そういう、本質的でないことをやめるのが大事だ、と考える。
表は、表だ。表としてあらわすことが適切な関係性だけ、表によって表現するべきだ。その罫線を今すぐやめろ。
それに加えて、ヘッダ部分はあくまでヘッダでしかないのだから、そこに自由度は必要ない。最初に表題とか、作成者とか、種類とか、日付とか、そういう情報をフォームに入力すれば、ヘッダ部分が生成される。そういうシステムを作ることが肝要だろう。
しかしながら、これらをある組織内のユーザ全員に徹底するというのは、求めるリテラシーが高すぎるだろう。私一人が主張してみたところで、単なる独善的なものに過ぎない。
人は意図を書くのではなく、望み通りの見た目を実現したいだけなのだから。
http://kaoriha.org/nikki/archives/000745.html
意図の記述を、予め用意した文書テンプレートの体系へあてはめ、見た目を実現する自動処理。この考えがもう間違っているということになる。 それに、時代は移り変わる。使用するアプリケーションも、そのバージョンも、あるいは文書に求められる情報も、変化し続ける。
その変化が生じる度に、システムを作り変える、 テンプレートを更新し続ける、古いバージョンを変換して維持する。
そんな悠長なことを、一体誰ができるというのだ。
問題解決に使えない、役に立たない、金を産まない 正しさ なんてクソくらえだ、という人は、特にマネジメントに多いだろう。彼らの責務からして、それは圧倒的に正しい。
現に、いまこの記事を書いているときにも悩みながら書いている。
htmlには&amp;lt;p&amp;gt;要素がある。その一方で、日本語には（少なくとも日本の国語教科書的には）“意味段落”と“形式段落”、二つの段落が存在している。English Writingにおけるparagraphに対応するのは“意味段落”の方だろう。
しかしながら、見た目の観点でいえば、原則として全ての“形式段落”に対して、先頭の字下げが行われる。
行頭の字下げは、見た目だ。見た目を実現するために、行頭へ全角スペースを追加するのはナンセンスだ。実際に&amp;lt;p&amp;gt;要素にはCSSを用いて自動でインデントさせることが可能だ。同等の操作がWordでも行える。
では&amp;lt;p&amp;gt;は“形式段落”に対応させるべきなのか。そうとも言い切れない。
paragraph、あるいは“意味段落”の間には空白を設けるものである。この見た目を実現するために、&amp;lt;p&amp;gt;、あるいはWordの段落に対しては、自動的に前後へ空白を追加する機能がある。
しかしながら、先ほど論じた通りに&amp;lt;p&amp;gt;-“形式段落”を対応させていると、この機能を活用できない。“形式段落”ごとに空白が生成されてしまう。できることといえば、空行を追加することで見た目を実現することだけ。
なんと、どちらにせよナンセンスが生じてしまった！
私自身としては、&amp;lt;p&amp;gt;は“意味段落”に対応するものとし、形式段落については改行（Markdownでは半角スペース二つ連続、WordではS-Enter）を使っている。普通のブログでは行頭の字下げを行わず、小説を書くときは正規表現を用いて一括で置換している。が、これは私がそうしているというだけであって、万能の解ではない。
そもそも、西欧言語、もっといえば英語にしか世界には存在しないと思っているような人々が作っているのだから当然だ、という態度も当然ありうる。
だが、地球上のすべての言語をカバーできるような文書構造体系、UnicodeのHTML/Word版というのは、果たして実現しうるものだろうか。
わからない。
何にもわからない。
ということを書店で見かけたこの本のタイトルをみて考えましたとさ（この本を読んだというわけではないです）。
https://www.amazon.co.jp/dp/4297112744/</description>
    </item>
    
    <item>
      <title>Unsearchable Web</title>
      <link>https://squeuei.github.io/post/2020-12-19/unsearchable-web/</link>
      <pubDate>Sat, 19 Dec 2020 21:53:16 +0900</pubDate>
      
      <guid>https://squeuei.github.io/post/2020-12-19/unsearchable-web/</guid>
      <description>TL;DR Web検索（というかGoogle検索）が役に立たない、探しても有用なコンテンツに到達できない時代がもう来ている。
どういうことよ ちょっとメインストリームから外れたモノやコトを検索しても、それに関連する情報が織り込まれたWebページへたどり着けない。 ずらっと並んだ検索結果のリストは、怪しいドメインで公開されているとろけた日本語の――おそらくは自動生成された――Webサイトが大半を占めているだろう。 残りは本物の、しかし目当ての情報は含まれていない、通販サイトだ。
ニッチな情報とは、本質的に求められる機会が少ないからこそ、ニッチと呼ばれる。 しかし、検索してもヒットしない、たどり着けないのであれば、ニッチどころではなく単なる無意味だ。 書かれた情報は、誰の目にも触れることなく、HTMLが動的生成されるのを待ちつづけて終わる。そのサーバの運用が停止されるまで。
ここで、わが身を顧みると、自分でも検索するときの第一選択肢が必ずしもGoogleではなくなってきている。 TwitterやYouTubeをまず検索する、ということが増えた。 Web検索するにしても、BingやDuckduckgoのほうがまともな結果を得られる時も少なくない。
当面の経済的利益のために生成された価値のない情報。 その存在は、未来から2020年を振り返った時、「価値のある活動をしてこなかった無能」だと評価させる理由になってしまうのかもしれない。 きわめて薄い情報しか残さなかった時代として。
何が言いたいかというと このBlogの記事のいくつかはGoogle検索でヒットしません。 自動生成サイトよりもこのブログの価値は低いのだ。 人生は厳しい。</description>
    </item>
    
    <item>
      <title>Microsoft Wordで.docxファイルから追加費用なしでOpenTypeフォントを埋め込んだPDFを作成できるか</title>
      <link>https://squeuei.github.io/post/2020-12-18/microsoft-word%E3%81%A7.docx%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%81%8B%E3%82%89%E8%BF%BD%E5%8A%A0%E8%B2%BB%E7%94%A8%E3%81%AA%E3%81%97%E3%81%A7opentype%E3%83%95%E3%82%A9%E3%83%B3%E3%83%88%E3%82%92%E5%9F%8B%E3%82%81%E8%BE%BC%E3%82%93%E3%81%A0pdf%E3%82%92%E4%BD%9C%E6%88%90%E3%81%A7%E3%81%8D%E3%82%8B%E3%81%8B/</link>
      <pubDate>Fri, 18 Dec 2020 23:30:39 +0900</pubDate>
      
      <guid>https://squeuei.github.io/post/2020-12-18/microsoft-word%E3%81%A7.docx%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%81%8B%E3%82%89%E8%BF%BD%E5%8A%A0%E8%B2%BB%E7%94%A8%E3%81%AA%E3%81%97%E3%81%A7opentype%E3%83%95%E3%82%A9%E3%83%B3%E3%83%88%E3%82%92%E5%9F%8B%E3%82%81%E8%BE%BC%E3%82%93%E3%81%A0pdf%E3%82%92%E4%BD%9C%E6%88%90%E3%81%A7%E3%81%8D%E3%82%8B%E3%81%8B/</guid>
      <description>TL;DR 少なくともこの記事を書いている時点では無理っぽい。
序論 MS OfficeはPDFを作成できるが、その際にOpenTypeフォントを埋め込むことはできない。
https://docs.microsoft.com/en-us/office/troubleshoot/office-suite-issues/fails-embedding-adobe-opentype-font
PDF/Aで出力してもラスタ化されてしまい、フォントが埋め込まれることはない。
もちろん、Adobe Acrobatを持っていればできる。今はクラウド版しかないから、必要になった時だけひと月単位で契約もできる。
https://acrobat.adobe.com/jp/ja/acrobat.html
しかもAdobe Fontsの使用権までついてくる。商用非商用問わずPDFへの埋め込み全部オーケー。すごい。
https://helpx.adobe.com/fonts/user-guide.html/fonts/using/font-licensing.ug.html
しかしながら、無料ではない。いや、もちろんMS Wordだって不自由で邪悪なプロプライエタリ・ソフトウェアであるのだが……。
Microsoft Print to PDF 何を試したか Windows 10に標準？　で入っている仮想PDFプリンタ。Wordの印刷画面からPDF出力。
結果 あらゆるフォントはラスタ化されます。慈悲はない。
clawPDF 何を試したか clawPDFはAGPLでライセンスされたフリーソフトウェアの仮想PDFプリンタである。Wordの印刷画面からPDF出力した。
https://github.com/clawsoftware/clawPDF
結果 すべてのOpenTypeフォントは埋め込めているが、日本語の文章では一部の文字が消えてしまい、使い物にならない。
JUST PDF 2 何を試したか ヒラギノフォントについてきた一太郎プレミアムのインストールメディアから、JUST PDF 2をインストールした。このアプリケーションもまた、仮想PDFプリンタとして動作する。Wordの印刷画面からPDF出力した。
https://www.justsystems.com/jp/products/ichitaro_2012/
https://www.justsystems.com/jp/products/justpdf_2/
なお、最新版はJUST PDF 4である。最新版での動作は未確認である。また、4からはプリフライトチェック機能が付いたようだ。
https://www.justsystems.com/jp/products/justpdf/
結果 一部のOpenTypeフォントは埋め込まれた。が、Source Han Sans/Serifは埋め込まれなかった。Super OTC版を使っているからかもしれない。
Libreoffice Writer 何を試したか LibreOffice Writerで.docxファイルを開き、PDFとしてエクスポートした。
https://ja.libreoffice.org/
結果 すべてのOpenTypeフォントは埋め込まれた。日本語も適切に扱われている。しかし、.docxファイルを開いた時点でレイアウトが崩れている。
結論 人生は厳しい。Adobe税の脱税はできない。
正しくて快適なAdobe Creative Cloudをご利用ください。
Postscript いつのまにか無償で使用可能なPDF/AおよびPDF/Xのプリフライトチェックツールが登場している。
これらのドキュメントが作れる身分になったら試したい（でもそれってAdobe Acrobatが使える状態なのでは？）。
veraPDF EU fundedのプロジェクトからfundされている、PDF/A Validation アプリケーション。</description>
    </item>
    
    <item>
      <title>良いニュースと悪いニュース</title>
      <link>https://squeuei.github.io/post/2020-12-04/%E8%89%AF%E3%81%84%E3%83%8B%E3%83%A5%E3%83%BC%E3%82%B9%E3%81%A8%E6%82%AA%E3%81%84%E3%83%8B%E3%83%A5%E3%83%BC%E3%82%B9/</link>
      <pubDate>Fri, 04 Dec 2020 21:35:22 +0900</pubDate>
      
      <guid>https://squeuei.github.io/post/2020-12-04/%E8%89%AF%E3%81%84%E3%83%8B%E3%83%A5%E3%83%BC%E3%82%B9%E3%81%A8%E6%82%AA%E3%81%84%E3%83%8B%E3%83%A5%E3%83%BC%E3%82%B9/</guid>
      <description>M.2 2242 NVMe SSD Thinkpad T480やGPDシリーズを使っていると、M.2 2242 フォームファクタを採用した NVMe SSDが欲しくなる。とくに、アップグレードとして使える、大容量モデルが。
が、これを手に入れるのは案外面倒である。メジャーメーカのSSDをメジャーな通販サイトで買えるのはTranscendくらいしかなかった。
https://www.amazon.co.jp/dp/B083Y42GMX/
しかしながら、意外なところで解決策を見つけた。Mouserだ。
Mouserは電子部品のディストリビュータだ。業界内では大きいところで、信頼してよいだろう。
このサイトでWD SN520 512GBモデルが購入できることを発見した。
https://www.mouser.jp/ProductDetail/SanDisk/SDAPMUW-512G-1022?qs=w%2Fv1CP2dgqqwQ4VbzqqoVw%3D%3D
URW Type Foundry Core 35 Fontsレポジトリの消失 URW Type Foundryが公開していたCore 35フォントのレポジトリがユーザごと消えていた。
URWTypeFoundry/Core_35 · GitHub
これは2020-05にMonotypeがURW Type Foundryを買収したことが影響しているのではないだろうか。
あくまで憶測でしかないが、Bitstream Inc.の買収に伴う『TrueTypeフォントパーフェクトコレクション』絶版化が連想される。
https://www.monotype.com/jp/node/3006
なお、Artifex Softwareが公開しているレポジトリは以前と変わらず公開されている。Ghostscriptのgitも同じ。
https://github.com/ArtifexSoftware/urw-base35-fonts
では問題ないだろう、と思われる方も多いだろうが、URW Type Foundryが公開していたのは2016年にリリースされたVersion 2.0で、これはフォント例外付AGPL、LPPLおよび OFL にてライセンスされていた。
そして、OFLで入手できたのはおそらくこのレポジトリしかなかった。
ライセンスがライセンスなので、再配布は可能だ。だれかがレポジトリをフォークやクローンしていたならば、それを公開レポジトリにpushしても問題は発生しないだろう。
問題は、それが見つからないことだ……</description>
    </item>
    
    <item>
      <title>harmonized world</title>
      <link>https://squeuei.github.io/post/2020-11-26/harmonized-world/</link>
      <pubDate>Thu, 26 Nov 2020 22:38:39 +0900</pubDate>
      
      <guid>https://squeuei.github.io/post/2020-11-26/harmonized-world/</guid>
      <description>私たちは予めすばらしい新世界にたどり着いている。
ここ数週間でラブコメを読んでつらく感じることが何度かあった。
https://www.amazon.co.jp/dp/4785967978/
https://www.amazon.co.jp/dp/B07V6HB1FV/
といっても、作品自体につらいところは特になくて、むしろ面白いのだけど（おすすめ）。
つらいのは私の自意識だ。
ある程度の年齢に到達すれば、自分の人生の限界なんて見えてくる。自分の将来に見切りをつけていなければいけない。
私は独身だけど、恋愛や婚姻に積極的でなかったのは、まさに自分自身の選択であり、またそれ以外にあり得ない。
同じく、趣味に対して熱心だったり真摯だったりしたこともなければ、仕事へと情熱を注いだこともない。これらもまた、私自身の選択だ。
であるならば、その責任を取るのもまた、自分自身でなければならない。
まあ、今更何を言っても遅い。
先日、あのPaul Grahamが子供を持ったことについての記事を読んで愕然としたのを思い出す。
https://review.foundx.jp/entry/having-kids 私にはパートナーがいないし、肉体的、精神的にも価値や需要が生じるような存在にはならなかった。そうなるためには訓練が必要で、私はそれを怠ったのだ。遺伝的にも劣っているし、医学的にも良い状態にはない。そういう人間が、今から方針を転換しようと試みるのは無理だ。
いや、最初から警報は鳴っていたのだろう。私がそれを無視しただけで。
偉業を成し遂げるような人間なら始めるのに遅すぎるということはないだろうが、凡人未満の私ではそうは行かない。
自業自得、因果応報、自分で考えることをしなかった哀れな人間の末路――
金銭はやりようがあっても、人間関係は再分配できない。パートナーとなる人物は いい子 にしていたボーナスや成功のトロフィーではない。
そもそも、パートナーができたところがスタート地点で、そこに物語で描かれるような幸福感はないし、むしろそのレベルに立ってやっと一段階上の話が始められる、というようなことばかりだ。 趣味や仕事でも同じだ。たとえ才能があったとしても、そのpotentialをkineticなenergyへと変換できなければ、何かを為すことは叶わない。
そこで気づいた。私はすでに物語の中でしかそういった感情を得られなくなっている。
物語には、現実の人間には到底味わえないような感情、喜怒哀楽を想像させる力がある。これはetmlそのものだ。
私（たち）はもはや、現実ではひたすら摩耗し、その分の感情を仮想の世界で摂取して生きる、そういう存在になっているのだ。
ユートピアは予め到来していた。
だから、物語の中の出来事を現実に求めているのは、ばかげていることだ。
みじめな私達も、物語を通じて幸福感を想起できるなら、それで十分だろう。
むしろ、自らのみじめさで物語を汚してはならない。
目の前の作品を純粋に楽しむ機械になりたい。</description>
    </item>
    
    <item>
      <title>Lavie Direct PMのセットアップ</title>
      <link>https://squeuei.github.io/post/2020-11-25/lavie-direct-pm%E3%81%AE%E3%82%BB%E3%83%83%E3%83%88%E3%82%A2%E3%83%83%E3%83%97/</link>
      <pubDate>Wed, 25 Nov 2020 22:00:00 +0900</pubDate>
      
      <guid>https://squeuei.github.io/post/2020-11-25/lavie-direct-pm%E3%81%AE%E3%82%BB%E3%83%83%E3%83%88%E3%82%A2%E3%83%83%E3%83%97/</guid>
      <description>前記事の続き
UEFIでの設定項目 UEFIには起動直後にF2キーを押すことで入ることができる。
FnとCtrlはUEFI上で入れ替えることが可能である。
一時的なブートデバイス選択はF2のUEFI設定画面の中で行うことができる。
Windows 10 のインストール ソフトウェア的な観点において、デフォルトのセットアップは許容しがたい。そのため、OSのクリーンインストールを試みた。
まず、OSについてはMSから提供されているツールを用いて、Windows 10の起動デバイスを作成した。必要なのはWindowsが動くPCとUSBメモリである。isoイメージをダウンロードすることもできるが、たとえばLinuxなどからこのイメージをddしても、なぜかうまく起動できないことがあった。Media Creation Toolを使う方が無難である。
インストールおよびOS自体のセットアップは、ふつうのクリーンインストールと何ら変わらない。オフラインアカウント（MSのいうところの制限付きエクスペリエンスというやつだ）を作成することにこだわること。
Windows 10のライセンスは自動的に認証されるため、問題は生じない。
ドライバのインストール 基本的なドライバについてはWindows Updateを通して入手できる。これはうれしい誤算であった。
デバイスマネージャ基準でドライバが当たらなかった物は3つ。LTEモデム、オーディオ、そして照度センサである。
正常に動作しているか、あるいは省電力設定が適切に行われているか、などには疑問があるが、少なくともデバイスマネージャ上で認識されていないデバイスはなくなった。
Sierra EM7565 LTE Modem ユーザ登録を行うことで、LTEモデムの製造元サイトからダウンロードできる。
https://source.sierrawireless.com/resources/airprime/software/airprime-em_mc-series-windows-drivers-qmi-build-latest-release/
Realtek Audio 下記リンクからダウンロードできる。
https://www.realtek.com/en/component/zoo/category/pc-audio-codecs-high-definition-audio-codecs-software
intel_sensor (Intel integrated sensor solution. ISS Dynamic bus Enumerator) 照度センサ これはIntelのサイトからダウンロードできなかった。 Dellのサイトからダウンロードしたドライバを使用することで、少なくともデバイスマネージャ上ではドライバが当たった。照度自動調整も正常に動作している。
https://www.dell.com/support/home/ja-jp/drivers/driversdetails?driverid=wkrmx
バッテリの持続時間について 上記した通り、比較的Genericなドライバのみが当たった状態である。これはつまり、PCメーカが提供する最適化が適用されていない可能性があるということである。 この状態でのバッテリ持続時間（Wi-Fi ON、軽作業）は10時間程度と推定される。私にとっては十分だし、なによりソフトウェアに問題が少ない（と感じていられる）状態の方がよほど重要だ。なので、私はこのトレードオフを受け入れている。
Linuxに関する参考情報 現状、USBメモリでの確認ではあるが、Ubuntu18.04LTSおよびFedora 33のライブセッションは動作した。WWANも認識されている。問題なく動作できるのではないだろうか。これはうれしい誤算である。
Lavie Direct PMをLinuxで使った場合、システムからバッテリが認識されない。Fedora 33とUbuntu20.10で確認。モバイル用途としての使用は困難であると思われる。
再セットアップディスクに関する参考情報 一度作成した再セットアップディスクは、その内容を単純にコピーしても、少なくとも再セットアップメニューの起動までは行うことができた。</description>
    </item>
    
    <item>
      <title>とある国内メーカ製PC導入時の体験談</title>
      <link>https://squeuei.github.io/post/2020-11-25/%E3%81%A8%E3%81%82%E3%82%8B%E5%9B%BD%E5%86%85%E3%83%A1%E3%83%BC%E3%82%AB%E8%A3%BDpc%E5%B0%8E%E5%85%A5%E6%99%82%E3%81%AE%E4%BD%93%E9%A8%93%E8%AB%87/</link>
      <pubDate>Wed, 25 Nov 2020 21:30:00 +0900</pubDate>
      
      <guid>https://squeuei.github.io/post/2020-11-25/%E3%81%A8%E3%81%82%E3%82%8B%E5%9B%BD%E5%86%85%E3%83%A1%E3%83%BC%E3%82%AB%E8%A3%BDpc%E5%B0%8E%E5%85%A5%E6%99%82%E3%81%AE%E4%BD%93%E9%A8%93%E8%AB%87/</guid>
      <description>はじめに 先日保証が切れたラップトップＰＣを売却した（たいした値段はつかなかった）が、外へ持ち出す端末がなくなって不便を感じていた。 Thinkpad T480は家で使うにはいいものの、外へ持ち出すにはいささか重い。 そこで、軽量な端末としてLavie Direct PMを購入した。その所感を以下に述べる。
選定基準 外でPCを用いた作業を行うことが主目的 ではない 外出において持ち出せるPC、テキストタイピング、あるいはハードウェアとのインタフェースを伴わないプログラミングが実行可能なPC、という用途を想定し、以下の要件を定義した。
共通事項  1kg未満であること 物理キーボードを備えること  キーピッチが一定であること、右側キーが小型であるなどしないこと できればバックライト付きであること できればUS配列キーボードであること   IPS液晶を搭載のこと バッテリが10時間以上持続することが望ましい  PCの場合  RAM 16GB以上、できれば32GB以上であること ストレージはSSDとすること Intel CPU / Intel Graphicsを搭載のこと ディスプレイはFull HD以上の解像度を持つこと Linuxが使用できることが望ましい 重量は3lbまで妥協しうる  タブレット端末の場合  アプリ資産の都合上iOS端末が望ましい iOS端末の場合、Cellular搭載モデルであること USB-C接続であることが望ましい ペン入力デバイスを備えることが望ましい  候補 iPad Air 4  PCと比較して軽量、長時間駆動 ペン入力可能 USB-C採用 Touch IDを採用 キーボード使用可能、ただし右側のキーはサイズが小さいため、要求を満たさない  iPad Air 3と比較して、US配列でのレイアウトは悪化した    iPad Pro 2020 基本的にはiPad Airとの比較となる
 Touch IDではなく、前世代のFace IDとなる。今後のデザイン変更を考えると、将来性に乏しい SoCの世代はAirより古い。ただし性能は同程度と考えられる。 13インチを選定した場合、キーボードの問題は解決される。  Vaio SX12/SX14  1kgを切る軽量さ バックライト付きUS配列キーボード選択可能 RAM 32GB選択可能 希望の構成をとった場合高価になる  Lavie Direct PM  軽量かつ剛性の高いシャシ キーボードはバックライトなしのJIS配列であるが、打鍵感は非常に良い  2020年夏モデル改良でキーピッチおよびストロークの拡大が行われた   Windows Helloは指紋認証から顔認証へと変更されたため、外出時の使用には減点となる RAMは16GBまで 価格は、Vaioよりは安価である Linuxでの使用実績がないため運用可能性にリスクがある  選定 Lavie Direct PMを選定した。店頭での印象がよかったことが大きく貢献した。 カスタムによってi7/16GB/1TB/LTE/バッテリL/3年保証とした。</description>
    </item>
    
    <item>
      <title>仕事について</title>
      <link>https://squeuei.github.io/post/2020-11-25/%E4%BB%95%E4%BA%8B%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6/</link>
      <pubDate>Wed, 25 Nov 2020 21:00:00 +0900</pubDate>
      
      <guid>https://squeuei.github.io/post/2020-11-25/%E4%BB%95%E4%BA%8B%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6/</guid>
      <description>はじめに 仕事について考えていると憂鬱になってくる。
仕事はつまらなく、淡々と ときどき、TLで目撃するこのフレーズを「毎日が冒険、苦難と挑戦の連続！　というような仕事をすべきでない」ということだと、私は解釈している。
実現可能性の高い計画を立て、リスクを管理して、ただ手を動かすことで、要求を満足する成果物を作り上げる。これが理想だ。
開発者が「楽しんで」、管理されていないむき出しのリスクと対峙すること、プランＢのない背水の陣、連日の残業でどうにか炎上を鎮火し、リリースにこぎつける。そんなプロダクトは、ユーザにとっては何もうれしさがない。ただ、自己満足、プロジェクトマネジメントの失敗によるリスク、品質低下を背負わされているだけだ。
マスプロダクトにかかわるなら、上述の内容から逃れることはできないだろう。あえて言えば、ワンオフ、テイラーメイド、あるいはベンチャー。そういった、クライアントとリスクを共有できるような仕事は、その例外になるのかもしれない。
好きなことで生きていく？ 興味を惹かれるような業務に手を挙げるべきか。
微妙なのではないかと考える。
面白そうなことでも、それが業務になると、いろいろなしがらみ、制約が発生する。思い入れがあり、自分で思うとおりに進めたくて、かつ自分でその環境を用意できるのであれば、仕事でなく趣味として取り組む方がよいだろう。
好きなことをして働ける、なんてことには（九割の人間は）ならないと考えなければならない。凡人にとって、仕事とは苦役を売って賃金を得る契約なのだ。
好きなことで生きていくというのは、やりがい搾取のための甘言に過ぎない。覚悟のない人間、恵まれた才能をすべて能力獲得に投じ、自己資本を投じ、身を粉にして動き続けることのない人間には、それが与えられることはあり得ないのだから。
好きなことで生きていくというのは九割の人間にとって単なる空手形に過ぎない。憂鬱でなければ、仕事じゃないって言うしさ。
とまで考えたところで、これは酸っぱい葡萄に過ぎないのだろうか、という疑念が脳裏をよぎった。
無人化すべきである 問題の解決には方策があらかじめ用意されていて、たとえばフローチャート、if-thenのような形、ルールベースで、とるべき対処が計画されていることが望ましい。それがプロジェクトマネジメントだ。
管理されていない生のリスクは、面白い仕事かもしれないが、プロジェクトとしてみれば、排除するべき存在だ。その楽しみは到底割に合わない。
こうしてみると、プロジェクトの遂行に、人間が介在することは本来的に不要だし、むしろリスクでさえある。が、現時点では無人化できるだけの技術や体制が整っていないから、仕方なく人間がやっている。
先行きの見えないプロジェクト、プランＢのないプロジェクトは、マネジメントが欠如している。ロードマップを描き、リスクを管理しながら、予定通り、計画通りに、プロジェクトを終了することが、一番良いのだ。
おわりに 無人化できないがために生きて労働している人間の存在にどれだけの意味や価値や理由があるのでしょうね。</description>
    </item>
    
    <item>
      <title>買い物に関するあれこれ</title>
      <link>https://squeuei.github.io/post/2020-11-23/%E8%B2%B7%E3%81%84%E7%89%A9%E3%81%AB%E9%96%A2%E3%81%99%E3%82%8B%E3%81%82%E3%82%8C%E3%81%93%E3%82%8C/</link>
      <pubDate>Mon, 23 Nov 2020 22:09:27 +0900</pubDate>
      
      <guid>https://squeuei.github.io/post/2020-11-23/%E8%B2%B7%E3%81%84%E7%89%A9%E3%81%AB%E9%96%A2%E3%81%99%E3%82%8B%E3%81%82%E3%82%8C%E3%81%93%E3%82%8C/</guid>
      <description>相変わらず構造も何もないただの雑記。
Amazon.co.jpの使い方 まず基本的にはAmazon.co.jpが販売するものを購入する。これが基本。Amazon発送というだけでは何の保証にもならない。
それで見つからない場合は、Amazonが配送する商品から慎重に選択する。
それでもダメな場合は、ほかの通販サイトから買う。
Amazon出品の商品を検索する 製品のカテゴリを選択することで、出品者を選択できるようになる。ここでAmazon.co.jpを選択することで、これは達成できる。
Amazon出品でほしいものが見つからない場合 この場合、Amazon.co.jp発送の店から選べば、配送のトラブル だけ は回避しやすい。ただし、品質がいいとか、詐欺的商品でないという保証はどこにもないということに留意が必要だ。この場合はサクラチェッカやTwitter検索を使っての調査が必須。
また、このカテゴリには国外またはそのフロント企業の出品者が多いが、彼らは日本国内における各種法令・規制を遵守しているかについての検証を行っていない場合が多々ある。例として電気製品におけるPSEや技適マークなどが挙げられる。また、セラーの入れ替わりが激しいため、同じ商品を購入しても同一のものが入手できない、万が一事故が起こった際に連絡が取れない、などの自体が想定されうる。
値段の安さは魅力である。これは間違いない。そのために安全マージンをどこまで削れるか、人が死んだり、家が燃えたりするリスクをどこまで許容するのか、ということを意識したい。
大げさではあるが、真剣に言っている。
Amazon発送でほしいものが見つからない場合 これは、基本的にAmazonで買うべきではない。公式通販や別の通販サイトを利用することを積極的に考えよう。どうしてもという場合には、送料に注意すること。
コスパの魔力に身を委ねるな 「買う理由が値段ならやめておけ、ためらう理由が値段なら、買え」というフレーズが、ある種の格言として扱われている。
値段に対する性能の高さは重要であるが、最重要ではない。目先の安さ、相場との乖離に興奮してしまいがちであるが、それが使い物になるか、あるいは自分の用途にマッチするかについてが、一番重要なことなのだ。
安くて良い品であることは、比較的容易に検証できる。しかしながら、自分の用途に適合するものかどうかは、よくよく吟味しなければわからないし、実際に手に入れてみるまで分からない、ということもよくある。
選定する際の要件やポリシーへの適合性をよく見よ！
いますぐ手に入れたい、にどうあらがうか 今すぐは必要ないし、先送りしよう。そう決めたはずのものに、いつまでも心奪われてしまうということは、よくある。
そういった状況では、ただでさえ貴重なリソースが食いつぶされてしまう。その考えに夢中になってしまう。 これは非常によくない状態だ。なぜなら、往々にしてそれを手に入れた時の良いビジョンを過大評価してしまうからだ。実現したところで、思っていた通りの物が得られる、想定した通りに活用できるとは、限らない。
思考を打ち切り、中断するためには、メモやノートを活用することが有用だ。
仕組みは単純。メモやノートに今考えていることをとにかく書いてしまう。書いて、忘れる。そしてそのメモを定期的に見直すことを習慣づける。
書くことでいつまでも忘れたままになる心配がなくなるから、安心して意識の外へと外すことができる。
だが、夢中になってしまっている状態というのは、その仕組みがうまく働かない。そんな時にどうすればいいか。
自分が何を必要かを理解しているか、あるいは、それ以前に、なぜ必要なのかを認識できているか。これについて考えてみよう。
なぜを考えたらそもそもその理由が正しいのかを疑う。なぜが正しかったら、ほかの方法があり得ないのかを考える。
結局はリソースを食いつぶされているじゃないかというのはその通りで、同じところを堂々巡りするよりは思考や視点が広がる分だけマシという程度だ。
抗う方法は、せいぜいこれくらいしか思いつかない。</description>
    </item>
    
    <item>
      <title>情報カードについて</title>
      <link>https://squeuei.github.io/post/2020-11-06/%E6%83%85%E5%A0%B1%E3%82%AB%E3%83%BC%E3%83%89%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6/</link>
      <pubDate>Fri, 06 Nov 2020 22:30:00 +0900</pubDate>
      
      <guid>https://squeuei.github.io/post/2020-11-06/%E6%83%85%E5%A0%B1%E3%82%AB%E3%83%BC%E3%83%89%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6/</guid>
      <description>はじめに 『知的生産の技術』を読んでいる。ミーハーな私はさっそく情報カードを使うことを始めた。
その結果、古色蒼然な外見に反して、21世紀の現代においても、想像以上に良い道具ではないかという感触を得た。
当記事は運用開始一週間時点での私自身の用法について記載するものである。
情報カードとは 情報を記録・蓄積する目的で使用される、一定のサイズに裁断された厚手の紙のこと。
物理的には『耳をすませば』に出てきた図書室の貸し出しカードのサイズ違いを想像すればよい。
コレクト、ライフ、コクヨなどの文房具メーカが、複数のサイズ、罫で製品化し、製造・販売している。
最近ではダイソーでも無地の情報カードを取り扱っているようである。
サイズの選定 情報カードにはいくつかのサイズがあり、メジャーなのは小さい方から名刺サイズ、5x3、A6、6x4、B6。
特に、『知的生産の技術』で登場したB6・マージン罫入り横罫のフォーマットは、著者の所属組織から「京大式」とも呼ばれる。
今回はA6とB6サイズの横罫を購入し、それぞれに同じ内容を書いて比較し、選定を行った。
A6  小さいため持ち運びに便利 国際規格に基づいている はがきサイズの文具、ノート、手帳と組み合わせやすい 罫が細く、書ける量が多い 文字の密度が高くなり一覧性が下がる  B6  やや大きいためバッグ（・イン・バッグ）に入れて持ち歩くなどするのが基本になる ドメスティックなJIS規格に基づいている ファイルなどの選択肢が少ない 罫が太いため書ける量が少ない 文字の密度が低くなり、パッと見の印象がいい  結論 B6を選択した。選定理由は一目見たときの印象の良さ。
現状、コレクトの京大式を使用している。
運用開始初期段階での所感 良い点  ノートのように時系列を考える必要がない。  ノートは本来必ずしも順序がないものを順序付けてしまう  http://kaoriha.org/nikki/archives/000753.html 持ち運ぶための妥協として有り得るが、必須ではない     一冊の冊子としてどういう構成にするかについて考える必要がなくなる 規格化された表記によって思考がまとまる（ような気がする）  一つのトピックについてのみ注目して書く 書ける量が少ないので、重要なこと、本質が何かについて注意するようになる    悪い点  持ち運びにくい  情報カード一般の欠点として綴じられていないためばらけてしまう B6固有の欠点としてサイズが大きいため手帳のようには持ち歩けない    現在の運用  コレクトのパース、キングジムのドキュメントファイル、コクヨの測量野帳を持ち歩く 未使用のカードはコレクトのパースに入れて持ち歩く 思いついたことは極力測量野帳にメモする 測量野帳に書いた事項の中で、残しておく価値があると判断した内容をタイトルにした情報カードを作成する 書いた後のカードは一時的にパースの筆記スペースに入れておく 筆記スペースのカードはなるべく早い段階でキングジムのドキュメントファイルへ移す  最初は1番目のポケットに格納する 関連するテーマ、ジャンルのカードが集まったら2番目、3番目のポケットへ移動する 別のメディアへ転記するなど、活用が終わったカードは一番奥のポケットへ移動する   定期的にドキュメントファイルの中身を見直し、特に1番目のカードを走査する  思いついたことがあったら追記する、または新しいカードを作る   他のメディアへ転記するなど、活用が終わったカードは、コクヨの収納ボックスへ移動する  今後の展望 今後、単純にカードの蓄積を進めると、カード枚数は単調に増加していく。これは二つの意味で危機的状況をもたらす。</description>
    </item>
    
    <item>
      <title>優れた性質の源泉</title>
      <link>https://squeuei.github.io/post/2020-11-04/%E5%84%AA%E3%82%8C%E3%81%9F%E6%80%A7%E8%B3%AA%E3%81%AE%E6%BA%90%E6%B3%89/</link>
      <pubDate>Wed, 04 Nov 2020 23:30:00 +0900</pubDate>
      
      <guid>https://squeuei.github.io/post/2020-11-04/%E5%84%AA%E3%82%8C%E3%81%9F%E6%80%A7%E8%B3%AA%E3%81%AE%E6%BA%90%E6%B3%89/</guid>
      <description>世界ではじめて音速を超えて飛んだChuck Yeager准将は、飛行機のエンジンを次のように誉めていました。「単純で、部品が少なく、保守がしやすく、とても強固」と。
ジョン・ベントリー, 小林健一郎. 珠玉のプログラミング 本質を見抜いたアルゴリズムとデータ構造. ピアソンエデュケーション, 2000.
 個人的によいと感じるものの性質   Simple
構成や機能が単純であること
  Small
サイズ、規模、構成要素数が小さい、少ないこと
  Robust
外乱への頑健さ、適用範囲の広さ、壊れにくさ
  Maintainable
保守、修理のしやすさ、維持コストの低さ
  Tractable
扱いやすさ、操作のしやすさ、素直な応答、理解しやすさ
  e.g. 以下の例に上記の性質がすべて当てはまるわけでもないし、単なる妄想も多分に含んでいる。
  Douglas A-4 Skyhawk
サイズ、重量、複雑性を最小化したデザインを追求。頑丈で運動性能がよく、クラスを越えた兵装搭載量、戦闘機にも匹敵する運動性能、高い整備性を兼ね備える攻撃機に。
  Seiko 5
自動巻き専用（手巻き機構がない）やハック機構（龍頭を引くと秒針が止まる）の省略など廉価版らしい設計だが、結果的に複雑性、構造にかかる負荷を抑制している。実用性に徹した設計の腕時計。
  RICOH Ricohflex
二眼レフの中では珍しい、二つのレンズをギヤを介して連結し、ヘリコイドを用いてピント調節する単純な構造。コストダウンを追求した設計であるが、副次的に堅牢な設計になった。
  Fiat Panda 1st Gen
平面ガラスで構成されながらも簡潔で美しいデザイン。スペースユーティリティに優れる。
  LTV A-7 Corsair II
ベースとなったF-8 Crusaderの設計を単純化した攻撃機。派生機として短期間で開発された。整備性がよい。
  Daihatsu Mira TOCOT</description>
    </item>
    
    <item>
      <title>いい道具は定義できるか</title>
      <link>https://squeuei.github.io/post/2020-11-03/%E3%81%84%E3%81%84%E9%81%93%E5%85%B7%E3%81%AF%E5%AE%9A%E7%BE%A9%E3%81%A7%E3%81%8D%E3%82%8B%E3%81%8B/</link>
      <pubDate>Tue, 03 Nov 2020 22:00:00 +0900</pubDate>
      
      <guid>https://squeuei.github.io/post/2020-11-03/%E3%81%84%E3%81%84%E9%81%93%E5%85%B7%E3%81%AF%E5%AE%9A%E7%BE%A9%E3%81%A7%E3%81%8D%E3%82%8B%E3%81%8B/</guid>
      <description>TD;DR 「基本性能に絞って、プロ向け製品に求められる性能項目を高めた、低コストで運用できて、実用域で活躍するもの」
「オーソドックスな使い方をするもので、初心者が無理なく使えて、上級者でも快適に使えるもの」
と筆者は考えたのだった。
「いい道具を買おう」とみんないうけれど。 何らかの初心者へ向けられる言葉に「最初からいい道具を使うほうがいい」というものがあり、なるほど、もっともである。いい道具は初心者を助けてくれる。技量が低い人ほど、いい道具を使うべきだ。
では、いい道具とはどんなものだろうか。この定義にまで踏み込んでアドバイスしてくれるひとはあまりいない。そもそも ill-defined な問題であるとする人もいるだろう。議論を重ねたところで、せいぜい「最低価格帯の安物を回避する」くらいのことでしか合意できないのではないか。
いい道具とは何か。過剰でも不足でもない、適切なもの。でも、過剰とか不足という言葉は難しい。適切にと同じくらい難しい。何故なら、それがわかるということはつまり、既に正解を知っているということだからだ。
それでも、過剰な道具、というものは存在するはずだ。たとえば、写真の入門者にリンホフマスターテヒニカを勧めることは、まず適切ではないだろう。
以下に思いついた事項を並べてみよう。
いい道具が持っているもの   得られる性能とメンテナンス、運用にかかるコストの比が大きい
言ってしまえばコスパがいいってことだ。
  ユーザが使用する動作領域での性能がよい
車で例えるとドッカンターボよりも低回転から太いトルクがあるほうがうれしいって話。
  動作領域から外れたとしても急激には不安定にならない
少しでも限界を超えるとスピンするとか、壊れるとか、そういうのは良くないよねってこと。
  製品企画的に尖ったところがない一方で、基本性能の高さに由来する汎用性があり、ユーザの用途を制約しない。
何かに特化したデザインで、というよりは、基本性能の高さで汎用性を持たせる、という思想に基づいた道具は、応用が効く傾向があると考えている。
  耐久性が良い、または使い捨てられるくらいに安価で入手性がよい、維持管理がユーザの重荷にならない
出し惜しみをしなきゃいけないようではあまり実用的とはいえない。思いっきり使いたい。
  ユーザが使いにくいと感じない
……これはまあ個人の好みも多分に含まれてしまうのかも。
  複雑なパラメタがあるとしても、それを単純化できる手段がある
設定に初心者モードと上級者モードの二つがあって、前者だけでもぼちぼちの設定ができること。
  上級者向け機材で売りになっている性能項目が優れている
要するに基本性能が大事って話です。
  「子供向けであっても子供だましではない」
……パクりじゃん。
  「初心者が無理なく使えて、上級者も快適に使える」
基本がしっかりしていればこうなる、と思っていたいけど、机上の空論かも。
  業界や分野における標準的なやり方を学べる
メーカや採用している規格で流儀が大きく変わってしまう分野というのがあるので、なるべく標準的、身の回りで使われているようなものを選ぶと意識しておきたい。
  アップグレードパスが用意されている、他の道具と組み合わせることでより大きな力を発揮できる
ある道具で覚えた経験が次に活かせなくなる、どん詰まりになってしまうのは悲しいので、そうならないような体系ができてると嬉しい。
  おもちゃではなく、強力で柔軟で、大きなプロジェクトにも適用できる
LISPに抱いているイメージです。 toy problem的であっても、何度でもそこへ戻って遊べるようなtoyがいい
  いい道具が持たないもの   上級者しか扱えないほど設定や調整が複雑、使いにくい、使用上の落とし穴がたくさんある</description>
    </item>
    
    <item>
      <title>Samsung SSDのデータ消去</title>
      <link>https://squeuei.github.io/post/2020-10-22/samsung-ssd%E3%81%AE%E3%83%87%E3%83%BC%E3%82%BF%E6%B6%88%E5%8E%BB/</link>
      <pubDate>Thu, 22 Oct 2020 23:16:15 +0900</pubDate>
      
      <guid>https://squeuei.github.io/post/2020-10-22/samsung-ssd%E3%81%AE%E3%83%87%E3%83%BC%E3%82%BF%E6%B6%88%E5%8E%BB/</guid>
      <description>TL;DR  SSDのつながったPCをGPartedで起動して、hdparmを使ってsecurity eraseすると公式アプリのSecure Eraseと同等になる模様 USB変換を使わないこと。使ってもできるときはできるが、ペーパーウェイトになっても文句は言えない  動機 SSDを手放すのでセキュアにデータを削除したいが不自由で邪悪な公式ソフトを使いたくない！
公式サイトの記載 https://www.samsung.com/semiconductor/minisite/jp/support/faqs-03/
 OS 環境で Secure Erase を実行するにはどうすれば良いですか?
Linux : DOS モードに進むか、 以下に示す hdparm コマンドを使用します。
 デバイスを確認します。(今テストするデバイスを確認します。)
$ sudo fdisk -l デバイスのステータスを確認します。(手順 1 でテスト デバイスが /dev/sdb であると仮定します。)
=&amp;gt; &amp;ldquo;not frozen&amp;rdquo; でないと、Secure Erase を実行できません。
$ sudo hdparm –I /dev/sdb パスワードを設定します。(次に示す例では、パスワードに NULL を使用することを推奨しているため、NULL に設定されます。)
$ sudo hdparm &amp;ndash;security-set-pass NULL /dev/sdb Secure Erase を実行します。
$ sudo hdparm &amp;ndash;security-erase NULL /dev/sdb  [ 参考資料 ]</description>
    </item>
    
    <item>
      <title>☆しゅがはドライブ☆の☆円盤☆</title>
      <link>https://squeuei.github.io/post/2020-05-03/%E3%81%97%E3%82%85%E3%81%8C%E3%81%AF%E3%83%89%E3%83%A9%E3%82%A4%E3%83%96%E3%81%AE%E5%86%86%E7%9B%A4/</link>
      <pubDate>Sun, 03 May 2020 01:00:43 +0900</pubDate>
      
      <guid>https://squeuei.github.io/post/2020-05-03/%E3%81%97%E3%82%85%E3%81%8C%E3%81%AF%E3%83%89%E3%83%A9%E3%82%A4%E3%83%96%E3%81%AE%E5%86%86%E7%9B%A4/</guid>
      <description>https://27sai-club.booth.pm/items/2034466
すごくよかった。私はアイマスに全然触れてこなかった身なので、よくわかっていないネタも多いけど、楽しい。愛を感じる。
それにしても、こういう、作中世界のコンテンツ、というていで描かれた作品が大好きで、もうほんとにドツボにはまってしまう。
ちゃんと、作中の世界がそこにあるんだって、感じられる作品はとてもいとおしい。もちろん、作中の緻密な描写で描き切るのが王道だし、優れた作品だと思うけど、私は本編や設定の集積から想定される世界を緻密に描いたスピンオフ的なものにものすごく惹かれてしまう。
例を挙げるとこういうのとか。
https://www.amazon.co.jp/dp/475771663X/
https://www.amazon.co.jp/dp/4757514484/
よく考えたらガルラジもそうだ。
https://garuradi.jp/
方向性としてはこのあたりも結構近いか。
https://lavenderquartz.com/jp/
https://booth.pm/ja/items/612540
http://www.lack-girl.com/
https://www.melonbooks.co.jp/detail/detail.php?product_id=119667
https://dangerdrop.tumblr.com/djn
こういうコンテンツをもっと大量に摂取したい。こういうのもっとありませんか？　増えてほしい。
あとミラトコットもムーブキャンバスもデザインいいよね……いい……。トコットはいまだに欲しい……。</description>
    </item>
    
    <item>
      <title>「EXPASA富士川・富士川楽座・Fuji Sky View 2020大感謝祭」Supported by 富士市×ガールズラジオデイズ</title>
      <link>https://squeuei.github.io/post/2020-02-23/expasa%E5%AF%8C%E5%A3%AB%E5%B7%9D%E5%AF%8C%E5%A3%AB%E5%B7%9D%E6%A5%BD%E5%BA%A7fuji-sky-view-2020%E5%A4%A7%E6%84%9F%E8%AC%9D%E7%A5%ADsupported-by-%E5%AF%8C%E5%A3%AB%E5%B8%82%E3%82%AC%E3%83%BC%E3%83%AB%E3%82%BA%E3%83%A9%E3%82%B8%E3%82%AA%E3%83%87%E3%82%A4%E3%82%BA/</link>
      <pubDate>Sun, 23 Feb 2020 11:31:01 +0900</pubDate>
      
      <guid>https://squeuei.github.io/post/2020-02-23/expasa%E5%AF%8C%E5%A3%AB%E5%B7%9D%E5%AF%8C%E5%A3%AB%E5%B7%9D%E6%A5%BD%E5%BA%A7fuji-sky-view-2020%E5%A4%A7%E6%84%9F%E8%AC%9D%E7%A5%ADsupported-by-%E5%AF%8C%E5%A3%AB%E5%B8%82%E3%82%AC%E3%83%BC%E3%83%AB%E3%82%BA%E3%83%A9%E3%82%B8%E3%82%AA%E3%83%87%E3%82%A4%E3%82%BA/</guid>
      <description>TL;DR https://www.flickr.com/photos/squeuei/49571885436/in/album-72157713217989271/
Overview  過去記事 https://www.c-nexco.co.jp/corporate/pressroom/news_release/4721.html https://garuradi.jp/news147/  Photos https://www.flickr.com/photos/squeuei/49571374763/in/album-72157713217989271/
https://www.flickr.com/photos/squeuei/49571886631/in/album-72157713217989271/
https://www.flickr.com/photos/squeuei/49572112772/in/album-72157713217989271/
https://www.flickr.com/photos/squeuei/49571887191/in/album-72157713217989271/
https://www.flickr.com/photos/squeuei/49571376868/in/album-72157713217989271/
https://www.flickr.com/photos/squeuei/49571887606/in/album-72157713217989271/
https://www.flickr.com/photos/squeuei/49571887851/in/album-72157713217989271/
Notes 運転関連  初めての長距離ドライブだったが、無事にレンタカー店まで返却することができた。 SKYACTIV-D ディーゼルエンジンの車両に初めて乗ったが、トルクがありどこからでも加速する感覚が心地よい。ディーゼルらしさが顔をのぞかせるのは負荷がかかった時くらいで、それもややガラガラとした音がする、という程度だった。 車、やはり側方から後方の視界がもっと確保されていてほしい。すくなくとも視界がいいという 感覚 がほしい。 COVID-19禍のさなか、人々が不要不急の外出を控えたためか、三連休初日にもかかわらず恐れていた渋滞はほとんどなく、東名/新東名は終始スムーズに流れていた。 追い越し車線を高速度で疾走するアルファード/ヴェルファイアは怖くないのだろうか。 疲労を感じていたこと、夜間や雨の中不慣れな道、不慣れな運転をするリスクを考慮して、かなり早めに帰路へついた。実際、午後はかなり強い雨が降ったようであるため、悪くない判断だっただろう。  イベント関連  親の顔より聞いたBGM！ 館内放送が聞きづらくて難儀した。正直、一番聞きやすかったのはお手洗いに入った時だった。 天候の影響でFuji Sky Viewから富士山は見えませんでした。 メロンパンの青さ ひのき玉を買った。が、何に使うものなのだろう。とりあえず、手でもてあそんでいる。 時間の都合上プラネタリウムは見られなかったので機会があればリベンジしたい。 スタンプラリーも3か所しか回れなかったので機会があればリベンジしたい。  Conclusion 2020年もガルラジ！</description>
    </item>
    
    <item>
      <title>Salvaged</title>
      <link>https://squeuei.github.io/post/2020-02-10/salvaged/</link>
      <pubDate>Mon, 10 Feb 2020 23:53:22 +0900</pubDate>
      
      <guid>https://squeuei.github.io/post/2020-02-10/salvaged/</guid>
      <description>TL;DR 2年前突然死して文鎮化したNexus 5Xからデータを救出した。
Sudden Death Nexus 5Xは突然死するタイプの端末である。突然電源が切れ、起動途中でフリーズしたり再起動ループに陥ったりする症状が現れる。
これは、当該機種の電子基板へ熱サイクルが印可されることによって、SoCの接合部ではんだクラックが生じるためだと考えられている。
https://en.wikipedia.org/wiki/Nexus_5X#Problems
ブートループが発生した個体に対して、中長期的に信頼性のある修理を施すことは、少なくとも素人の手には負えない仕事であると思われる。 しかしながら、ごく短期間――たとえばバックアップを取っていなかったデータをサルベージする間――だけであれば、 相応の準備と多少の幸運によってこれを達成することができるかもしれない。
Preparation ケータイ修理キット 私はiFixit Pro Tech Toolkitを持っていたのでそれを使った。
Pro Tech Toolkit - iFixit
が、実質的にはピックと精密ドライバーくらいしか使わなかったのでもっと適当な安いやつでよろしい。 私が持っているわけではないけどこういうのとか。
https://www.amazon.co.jp/dp/B017W00U1Y/
https://www.amazon.co.jp/dp/B01FU0URFW/
Y型ドライバー ドコモ版の場合、インナフレームを取り外す際にY型ドライバが必要になる。残念ながらPro Tech Toolkitに含まれるビットでは回らなかったので、専用品を別途購入した。
https://www.amazon.co.jp/dp/B00E7NRFQI/
ヒートガン ある程度信頼できるメーカのものならなんでもいいはず。Amazon.co.jpが販売してないよくわからんメーカのやつはやめよう。
有名メーカ製で小さいという基準でSUREのプラジェットミニを購入した。
http://www.sure-ishizaki.co.jp/tool/plajet/handy/pj-m50/
ヨドバシ.com - 石崎電機製作所 SURE シュアー PJ-M50 [小型ヒートガン プラジェット・ミニ] 通販【全品無料配達】
Operation だいたいこの動画の通り。分解して、基板を取り出して、SoCのあたりをヒートガンで加熱する。 方法論としては焼きGPUに近い。
https://www.youtube.com/watch?v=6HlqfB7VD1E
裏蓋を外すのはSIMスロットを外してそこに三角形のピックをいれればやりやすい。
電池は危険なので熱や衝撃、物理的ダメージを与えないよう注意して。
SoCは基板の画面側に実装されている。
Nexus 5X Teardown - iFixit
電子基板のシールドを外したりフラックスを落としたりするのは省略してよい。
インナフレームまで組むと電源ボタンが押せるようになるのでそこまで組み立てたら充電して電源供給してみる。 運が良ければ数分間は動作してデータを吸い出すくらいのことはできるだろう。 だめなら同じことを繰り返してみる。 パワードUSBハブがあると充電しながらPC接続ができるのでやや有利。
Afterword 元よりどうせ死んでいる機体である。データを救出できれば儲け物、くらいの気持ちで挑戦してみるのが良いだろう。 あまり期待しすぎないように。失敗してとどめを刺してしまっても仕方ないと諦めるように。あと、火事や怪我をしないように。ヒートガンの熱風が向かう先に常に注意を向けること。
グッドラック。</description>
    </item>
    
    <item>
      <title>ガルラジブートキャンプ</title>
      <link>https://squeuei.github.io/post/2019-08-22/%E3%82%AC%E3%83%AB%E3%83%A9%E3%82%B8%E3%83%96%E3%83%BC%E3%83%88%E3%82%AD%E3%83%A3%E3%83%B3%E3%83%97/</link>
      <pubDate>Thu, 22 Aug 2019 23:11:28 +0900</pubDate>
      
      <guid>https://squeuei.github.io/post/2019-08-22/%E3%82%AC%E3%83%AB%E3%83%A9%E3%82%B8%E3%83%96%E3%83%BC%E3%83%88%E3%82%AD%E3%83%A3%E3%83%B3%E3%83%97/</guid>
      <description>TL;DR 君はもうガルラジことガールズ ラジオ デイズの世界を体感したか！？
https://www.nicovideo.jp/watch/so34283237
1. ガールズ ラジオ デイズ公式サイトをよく読む（2ndシーズンに関する記述は読み飛ばしてください） https://garuradi.jp/
1.1 補足説明 1.1.1 NEOPASA岡崎（新東名高速道路、愛知県岡崎市） https://www.google.com/maps/place/NEOPASA%E5%B2%A1%E5%B4%8E/@35.0338653,137.2202872,17z/data=!4m8!1m2!2m1!1zTkVPUEFTQeWyoeW0jg!3m4!1s0x6004a4705abd4f63:0x54be262047b972a0!8m2!3d35.0341476!4d137.2222824
1.1.2 EXPASA富士川（東名高速道路、静岡県富士市） https://www.google.com/maps/place/EXPASA%E5%AF%8C%E5%A3%AB%E5%B7%9D+%E4%B8%8A%E3%82%8A/@35.1600219,138.6173035,18z/data=!4m8!1m2!2m1!1z5a-M5aOr5bedU0E!3m4!1s0x601bd33fbd1d229d:0x1647d78ea44b8256!8m2!3d35.1610858!4d138.6175066
1.1.3 双葉SA（中央自動車道、山梨県甲斐市） https://www.google.com/maps/place/%E5%8F%8C%E8%91%89SA%EF%BC%88%E4%B8%8B%E3%82%8A%EF%BC%89/@35.6800336,138.508788,17z/data=!4m8!1m2!2m1!1z5Y-M6JGJU0E!3m4!1s0x601bf628f779bce5:0x7ef2a4f34df80aca!8m2!3d35.6804111!4d138.5100842
1.1.4 徳光PA（北陸自動車道、石川県白山市） https://www.google.com/maps/place/%E5%BE%B3%E5%85%89PA+(%E4%B8%8A%E3%82%8A%EF%BC%89/@36.5343609,136.5257456,17z/data=!4m8!1m2!2m1!1z5b6z5YWJUEE!3m4!1s0x5ff84ab774f78339:0xf625fa08b849a6c5!8m2!3d36.534028!4d136.5277473
1.1.5 EXPASA御在所（東名阪自動車道、三重県四日市市） https://www.google.com/maps/place/EXPASA%E5%BE%A1%E5%9C%A8%E6%89%80+%E4%B8%8A%E3%82%8A/@35.0190368,136.5885136,17z/data=!3m1!4b1!4m5!3m4!1s0x600392211d785325:0xc7ea75cf6db483a7!8m2!3d35.0190368!4d136.5907023
2. 1stシーズンを聞く 先に3.の小説を読んだ方がいい説もあります（白糸結氏驚きの過去とか、カグラヤ怪奇探偵団結成の話とかいろいろわかる）。
2.1 YouTube  https://www.youtube.com/playlist?list=PLs0EJuFpvKst3M7w3HAQDTIvfkjfkxk7G https://www.youtube.com/playlist?list=PLs0EJuFpvKsuBskr1LDzOzI8gORrblcia https://www.youtube.com/playlist?list=PLs0EJuFpvKsuBKV9tgEeTfxeEXHkCZnQ7 https://www.youtube.com/playlist?list=PLs0EJuFpvKsvP2jnTPW03ZYM8Dy2VxGKg https://www.youtube.com/playlist?list=PLs0EJuFpvKsthhugWrArzBpFoy6PrHw9F  2.2 ニコニコ（アフターレポートも読めるのでYouTubeで見た君も要チェック）  https://ch.nicovideo.jp/garuradi/blomaga/ar1768189 https://ch.nicovideo.jp/garuradi/blomaga/ar1768170 https://ch.nicovideo.jp/garuradi/blomaga/ar1768075 https://ch.nicovideo.jp/garuradi/blomaga/ar1768032 https://ch.nicovideo.jp/garuradi/blomaga/ar1768023 https://www.nicovideo.jp/watch/sm35446033  2.3 YouTube（電撃オンライン版） なぜか電撃オンラインのYouTubeアカウントでも本編動画が上がっているけどプレイリストを遡って再生するのは手間なので非推奨。
https://www.youtube.com/playlist?list=PL-4jWnLmBqlgRVwyxpAyAfJWrK34SHCeY
2.4 ニコ生特番 2.4.1 【ガルラジ】ガールズ ニコニコ デイズ ～ラジオO.A記念特番～ 公式アーカイブはなし（タイトルでググれ）
2.4.2 【ガルラジ】第2回 ガールズ ニコニコ デイズ https://www.youtube.com/watch?v=JCI5r3unm50
2.4.3 【ガルラジ】第3回 ガールズ ニコニコ デイズ2019年7月23日 https://www.</description>
    </item>
    
    <item>
      <title>make.believe</title>
      <link>https://squeuei.github.io/post/2019-08-18/make.believe/</link>
      <pubDate>Sun, 18 Aug 2019 00:01:00 +0900</pubDate>
      
      <guid>https://squeuei.github.io/post/2019-08-18/make.believe/</guid>
      <description>女の子がただ街中をほっつき歩いてる話 女の子がただ街中をほっつき歩いてる話が好きだ。
別に聖地巡礼がしたいとかそういうわけじゃなくて、広い世界の中をキャラクターが動いている、あるいはキャラクターとは独立して確固たる世界が存在する、という感覚が楽しいんですよねきっと。なので必ずしも実在の土地である必要はない。もちろん「聖地」を用意することがそれをもたらすためのハックとして使われている面はあるんだけど、あんまり私には響かなくて、むしろ明言されていない描写から「ああ、ここは行ったことがあるあの場所だ」と気づく時の方がうれしい。
アニメでいえば『じょしらく』のBパートは最高だったよね……。最近の作品で言えば『少女☆歌劇 レヴュースタァライト』の4話とか。
マンガなら『うさぎのふらふら』（残念ながら完結してしまった）とか『東京城址女子高生』（2巻が出たかつまだ続く！）とか『ぐるぐるてくてく』（2巻が出たかつまだ続く！！）とか『ぱらのま』（2巻が出たかつまだ続く！！！）とか。『少女終末旅行』もかなりちかい。『ゆるキャン△』『mono』とか『ヤマノススメ』いいんですがあれは山なので……。これもまた結構外れるけど『東京入星監理局』もいいよね……。『ぱにぽに(7)』初回限定特装版についてきた『桃月スタイル』はこの手の趣味に目覚めたきっかけの一つです。マンガじゃないけど『アナハイムジャーナル』は至高。
小説、小説なあ……。こういうジャンルってビジュアルがかなり強いので難しいんですよね小説でやるの。かく言う私もそういうのをやりたくて全く出来ていません。やっぱりマンガやアニメはつよい。
ガールズラジオデイズ ガルラジことガールズラジオデイズのファーストシーズンを聴きおわった。
これカーステレオで流しながらドライブしたい。
長期休暇の目標はこれで達成ってことでいいか？（いいよ）
さあ、次はセカンドシーズンだ……</description>
    </item>
    
    <item>
      <title>不可解なすべて</title>
      <link>https://squeuei.github.io/post/2019-08-17/%E4%B8%8D%E5%8F%AF%E8%A7%A3%E3%81%AA%E3%81%99%E3%81%B9%E3%81%A6/</link>
      <pubDate>Sat, 17 Aug 2019 00:01:00 +0900</pubDate>
      
      <guid>https://squeuei.github.io/post/2019-08-17/%E4%B8%8D%E5%8F%AF%E8%A7%A3%E3%81%AA%E3%81%99%E3%81%B9%E3%81%A6/</guid>
      <description>いわゆる百合、ガールズラブ作品が好きだ。『百合姫』も『まんがタイム』系列も定期購読してないし、百合漫画全部買うもしてない。でも好き。最近の良かったは『ガラスの靴を脱ぎ捨てて』と『ささやくように恋を唄う』で、良くなかったことは明らかに最高だった『ふりだしにおちる！』がわずか2巻にて完結してしまったことです。人はなぜ――
さて、そんな私もその手のジャンルの作品を書いてみたいなと思うこと幾星霜。問題にぶち当たったので、ここに書いて整理してみる。
Disclaimer: 以下の記述はあくまでフィクショナルな自作の人間関係描写に関する話です。現実の人間関係に適用しうるものではありません。
親密な二人の女性同士の関係を描写する際、というか具体的に言うとなろうとカクヨムに載せてる“The Pulse of Your Heart”の話だけど、この話を進めようとした時に、肉体関係のある、いわゆる同性愛の文脈に落とし込んでしまいそうになる。 いや、肉体関係のある同性愛の文脈に落とし込むことそれ自体は全く悪いことではない。あるまんがシリーズ（ネタバレのため名前を挙げません）がそうなった上で続刊が出ているのは感慨深い。しょせん私は途中から追いかけ始めた身分ですが――。
閑話休題。 つまり何がいいたいかというと、百合にカテゴライズされる話を描こうとした際、友情の領域に留めるのか、それとも肉体関係まで進めてしまうのかと悩んでしまうのは、その中間や曖昧性のある状態を許さず、人間関係をわかりやすいテンプレートに落とし込もうという作者の怠惰なのではないか、という話。 よく男女間の人間関係を描く作品であっても、「ふたりの関係に勝手に名前を付けるな、型にあてはめるな」という主張がなされることがある。 キャラクターを物語上のテンプレートに沿って動かせばいいというものではない。はい。 それはその通りで、二人（あるいはそれ以上）間の関係性は、それぞれに固有であって、なんらかのカテゴライズをするべきではない。 でも、友情にとどめれば私は同性愛に否定的なのかという気がしてくるし、セクシャルインターコースを持たせればゴシップ的というか、俗っぽいというか、まるでカミングアウトを強要しているようにも感じられてくる。 ということで、この話の続きを書くにはふたりの関係性がどのようなものであるべきなのかをしっかりと検討しなければならないし、そのためにはちゃんとキャラクターへの理解を深めるところからはじめなければならない。ということで、行き詰まっています。 私は、自作のことについて何もわかっていないし、（『天気の子』エントリで言っていたように）自分や読者を納得させられるだけの妥当性を想像/創造しなければならないんだよなあ。
あ、地図街が書き進められないのは単純に私の責任です――。</description>
    </item>
    
    <item>
      <title>Traffic Kingdom</title>
      <link>https://squeuei.github.io/post/2019-08-16/traffic-kingdom/</link>
      <pubDate>Fri, 16 Aug 2019 00:01:00 +0900</pubDate>
      
      <guid>https://squeuei.github.io/post/2019-08-16/traffic-kingdom/</guid>
      <description>Motorcycle 自動車の運転を不安がっていると、じゃあ自動二輪に乗ればよいのでは！？　というアドバイスを受けることがある。 自動二輪免許持ってない人間に勧めることじゃないでしょって思うけど、考えてみるときはある。 本質的に、二輪車とは恐ろしい乗り物である。事故を起こした時に一発で死ぬのであればまだいい気がするけど、重い後遺症を残す場合が多く、その上四輪車よりも事故を起こす率が高い。 それでも一発で棄却してしまえないほどには非ライダーの視点からであっても魅力がある。たとえば、目の前をTriumph Tiger 800が通過した際のサウンドは心を揺さぶるものだ。
さて、自分が二輪車に求める要件を定義するとしたらどのようなものになるか、ということを考える。
 メカノイズがする マフラーの音は全然興味がない フラットダートは走れるくらいのスタイルがかっこいい（走るとは言ってない） 2気筒程度の水冷エンジン 250cc〜600ccクラス？　（二輪免許もってなし） フルカウルじゃないやつ 背が高くない、足つき性がよい 高速道路含め長距離をクルーズできる性格 神経質でない操縦性  この条件で検索すると、スズキのV-Strom 250がヒットした。オフロードはあんま走れなさそうだけど、私がオフロードを走るとも思えないので、これがいいのでは？　という気がする。
繰り返しになるが、私は自動二輪免許を持っていない――
Bicycle 話をすっ飛ばして自転車の話。 私の身の回りにも自転車にはブロンプトンを勧める一派というのが存在する。 ブロンプトンというのは高級な折りたたみ自転車だ。イギリス生まれ。スポーツ指向というよりはコンフォートなイメージ。折りたたんだ際のサイズが小さい、リアキャリアにローラが付いているので折りたたみ状態でも転がして運べる、などの利点がある。
買うとしたらM3Lだけど、定価で210,000円（税別）する。高い。 個人的に気になるのは、パーツが一般的なものではないことと、ホイールがクイックリリースでないこと。 パーツは汎用的で互換性があった方がいいと思うし、ホイールがクイックリリースでないとパンク修理が難しい。
とはいえ、買った人が後悔していないところを見ると、相応の良さがあることが予想される。 実際のところどうなんでしょうね。
Risk Benefit Balance  もし悩みの種を抱えているならば、ウィリス・Ｈ・キャリアの公式を使って、三つのことをやってみるべきだ。
 「起こり得る最悪の事態とは何か」と自問すること。 やむをえない場合には、最悪の事態を受け入れる覚悟をすること。 それから落ち着いて最悪状態を好転させるよう努力すること。  デール・カーネギー. 道は開ける 新装版. 創元社, 1999.
 前提：大人は、自分の置かれている状況コストとベネフィット、そしてリスクを自覚し、ハザードの責任を負う覚悟をした上で行動する、主体的な存在でなければならない。
ベネフィットを得るためには、必ずリスクを負わなければならない。つまり、ある選択をするときに人は それがほんとうにお前の利益となる保証はあるのか ということを問われている。あるいは、問わなければならない。
自動車の運転を例に挙げよう。
交通事故って多くの場合は偶然とか、ふとした気の緩み、油断によって生じるわけで、その発生頻度を下げる方法なんてないのではないか、と思う。 であれば、リスクを低減する方法など存在せず、故にどれだけのベネフィットを運転に見いだせるのかという一点に、判断基準は帰着する。
例えば生活に必要な環境にある人間にとっては、事故のリスクを生存のベネフィットが上回るだろう。これはよい。 では、私が該当するであろう、娯楽の為だけに運転者にならんとする者はどうだろうか。自らの享楽のためだけに運転するベネフィットは、人を殺し、傷付け、自分や誰かの人生を台無しにするリスクを上回るものなのだろうか。 そうだ、と言いきれるから、世の運転者は運転することを選んでいる。
では、私はどうか。 心の底から、それだけのベネフィットがあると、ハザードの責任を負う覚悟があると、自分のスキルは十分リスクを低下させられるのか。 未だに確信を持てない。 なら諦めればいいじゃないかという話に当然なるんだけど、それを諦めることすらできない。自動車に乗ることに対する憧れを捨てることができない。要するに馬鹿なんですね私は。 要するに、やっぱり私は口先だけの人間で、したいしたいと言っていることは本当にしたいことじゃなくて、自分自身に対する認知さえ歪んでいる、何もかもが嘘っぱちのフェイク野郎なのだという結論を再確認するだけなのですが……。
人生は連続的な選択によって構成されている。私は人生を生きることができているのか。世の中の主体的に人生を生きている大人の人びとは凄いのだ。</description>
    </item>
    
    <item>
      <title>レンズ一体型ディジタルカメラ</title>
      <link>https://squeuei.github.io/post/2019-08-15/%E3%83%AC%E3%83%B3%E3%82%BA%E4%B8%80%E4%BD%93%E5%9E%8B%E3%83%87%E3%82%A3%E3%82%B8%E3%82%BF%E3%83%AB%E3%82%AB%E3%83%A1%E3%83%A9/</link>
      <pubDate>Thu, 15 Aug 2019 00:01:00 +0900</pubDate>
      
      <guid>https://squeuei.github.io/post/2019-08-15/%E3%83%AC%E3%83%B3%E3%82%BA%E4%B8%80%E4%BD%93%E5%9E%8B%E3%83%87%E3%82%A3%E3%82%B8%E3%82%BF%E3%83%AB%E3%82%AB%E3%83%A1%E3%83%A9/</guid>
      <description>私は、比較的珍しい側に分類されるであろう、富士フイルムのX70というカメラを使っている。
https://www.flickr.com/photos/squeuei/37099803562/
35mm換算28mm F2.8の単焦点レンズにAPS-Cの撮像素子を組み合わせた、端的に言えばRICOH GRみたいな市場を狙った製品、のはずである。とはいえGRとはキャラクターが明確に違っていて、操作系は独立したシャッター/絞り/露出補正ダイヤルが基本になっているし、レンズキャップは内蔵型じゃないし、薄さを犠牲にしてチルトのタッチパネルを搭載している。つまりあんまりスナップシューターじゃない。 私は、タッチパネルでフォーカス位置を設定できるのも便利に使っているし、チルト液晶があるととても嬉しいんだけど、後者がGRにつくことはまずなさそうだし、実質的なX70後継とも言えるXF10からも外されている。個人的にはレンズはもっと長いといいなと思うけど、世の中の人々はそう思ってはいないだろう。
何がいいたいかというと、私がいいと思うカメラはまず出てこないんだろうなって話。私の願望というのは、APS-C〜35mmフルサイズの撮像素子に50mm F2からF2.8くらいのAF単焦点レンズを組み合わせた、チルト液晶搭載のレンズ一体型ディジタルカメラだ。できれば手ブレ補正もほしいし、小柄なボディだとさらにありがたい。 この希望に一番近いのはおそらくシグマのdp2シリーズだろう。45mmの単焦点レンズを持つ、ほぼ唯一の存在。次は35mmクラスで、X100シリーズやRX1シリーズが該当する。中古ならライカX-Eあたりも。でもどれもいまいち私の要求にミートしない。 こういうやっかいな客はそれこそミラーレスにでも行けよ、という声がする。α6500に35mmでもつければいいんじゃね、お金持ちならライカにでも行ってください、という。はい。でもね、結局私は単焦点一本で撮りたいし、レンズ交換できないほうがセンサーダストの面で有利だって思うのだ（かつてのGRから目を逸らしながら）。
そもそも、50mmクラスの単焦点レンズを搭載したコンパクトカメラ自体、銀塩時代まで考えてもそう多くはない。恐らくはキャノネットだとか、オリンパスの35シリーズとか、ミノルタのハイマチックだとか、ヤシカエレクトロ35だとか、そういうレンジファインダー時代のものまで遡らなければならないだろう。そしてその中でも50mm焦点のものよりは広角寄りのものが多い。 その理由は理解できる。長いレンズの方がピンボケするリスクがあるし、広く写せばトリミングもできる。記念写真を撮るなら人物と風景両方写したい。そういうカメラに対するニーズを考えれば考えるほど、広角の方が望ましいのだ。プロ用サブ機として開発されたような機種でさえ、広角ばかりなのだから。50mmを欲するような撮影には一眼レフなりレンジファインダーを使ったほうがいい。ピント位置がちゃんと確認できるし、一眼レフであればボケ量まで撮影時に確認できる。
そしてなにより、今は高性能なズームレンズが溢れている。ズームレンズは便利だ。必ず写さなければならない被写体が存在するときに、これほど心強い存在はない。レンズを交換することなく、場所の移動が制約されていたとしても、きちんと成果を出すことが出来る。望み通りの構図、効果を実現できる。こんな素晴らしいものはない。
じゃあなんで私が単焦点レンズにこだわるのかというと、まあ単なる執着に近いんでしょうね。いちおう理由をならべてみると、概ねサイズが小さいし、概ね明るいし、概ね像の破綻が少ない。あとは、私は何でも撮りたいわけではなくて、手の中にあるもので撮れるものを撮りたい、というスタンスでいるからかもしれない。報道カメラマンみたいに、即応して写真を残さなければならないのだとしたら、私だってズームレンズを選ぶだろう。結局は、単なる趣味なのだ。
時代は多品種少量生産、マスカスタマイゼーションの時代だ、とは言うけれど、入念な検証プロセスを経て、ハード、ソフト共に設計、製造の品質を担保しなければならない複雑なシステムをどうこうするのはやっぱ難しいですよね、という話。
https://www.flickr.com/photos/squeuei/44342944511/</description>
    </item>
    
    <item>
      <title>乗らない飛行機の空港へ行く</title>
      <link>https://squeuei.github.io/post/2019-08-14/%E4%B9%97%E3%82%89%E3%81%AA%E3%81%84%E9%A3%9B%E8%A1%8C%E6%A9%9F%E3%81%AE%E7%A9%BA%E6%B8%AF%E3%81%B8%E8%A1%8C%E3%81%8F/</link>
      <pubDate>Wed, 14 Aug 2019 00:01:00 +0900</pubDate>
      
      <guid>https://squeuei.github.io/post/2019-08-14/%E4%B9%97%E3%82%89%E3%81%AA%E3%81%84%E9%A3%9B%E8%A1%8C%E6%A9%9F%E3%81%AE%E7%A9%BA%E6%B8%AF%E3%81%B8%E8%A1%8C%E3%81%8F/</guid>
      <description>夕方、私は羽田空港にいた。とはいっても、別にフライトのチケットを持っていたわけではないし、その場で買うつもりもなかった（どのみち今日のチケットは当日に手に入れられなかっただろうけど）。
用もなく空港へ行くことが好きだ。荷物がないなら、羽田へはモノレールで行くのが良い。長い高架の間、風景はめまぐるしく変わる。ビルの間をすり抜け、運河の脇を行き、整備場を横手に眺めながら、国際線ターミナルビルに滑り込む。このダイナミックさと比べてしまうと、京急線はどれだけ利便性が高かろうともほとんどずっと地下区間で味気ない。
空港へ着いたら、展望デッキに出て、飛び交う飛行機を眺める。私はヌルオタなのでエアバスとボーイングの区別もできないし、787（エンジンがシェブロンになってる）、777（ランディングギアが3つ）、767の中のどの機種なのかなんて、わかるはずもない。ただ、あのシンガポールエアラインのA350XWB後ろから見るとめっちゃ主翼付け根後側のラインがかっこいいな、とか、あの飛行機はターミナルへタクシーするのに滑走路を横切らないといけないのか、とか、そんなことを考えるだけ。第一ターミナルであれば、国際ターミナルの向こう、対岸の工場地帯が上げる炎も見物だし、第二ターミナルでは巨大な貨物船が頻繁に通過するのを見ていられる。
https://www.flickr.com/photos/squeuei/48528003822/in/datetaken/
飛行機を見るのに飽きたら中に戻ればいい。時間を潰す方法には事欠かない。なにせ飲食店はたくさんある。だいたいのジャンルは一通り網羅されていると考えて差し支えない。今日の私はブルーシールアイスを食べた。こんなものあったのか、と驚いたが、実は8年も前からやっていたらしい。私の目は節穴だ。
建物で言うと、比較的新しい国際線ターミナルが好きだ。和風を演出したモールは好みが分かれるだろうけど、ずらっと並ぶチェックインカウンターとか、モノレールが走ってくるのが見えるガラス張りの外観だとか、統一感のあるサインシステムとか、いかにも現代の公共施設デザインといった感じで好ましい。ターミナル間はバスが走っている。もし移動するのが国内線ターミナル間なら地下一階の連絡通路を歩いてもいい。でも、こういう施設内を行き来するための自動車道って、どうしてこんなに魅力的なんだろう。
https://www.flickr.com/photos/squeuei/48528009447/in/datetaken/
さて、そろそろ日も暮れたので帰ることにする。レンタカーで帰るという手もあった。ネット予約を確かめてみても、車種次第ではまだ空きがあった。レンタカーのチェーンが許せば、家の近くの店へ乗り捨てることもできる。でも、今日はやめた。さすがに夏休みのど真ん中に、初めての首都高で運転をする勇気はなかった。大人しくモノレールに乗る。品川の駅ナカで回らない立ち食い寿司を食べて帰る。
https://www.flickr.com/photos/squeuei/48528021032/in/datetaken/</description>
    </item>
    
    <item>
      <title>欲望の同次変換行列</title>
      <link>https://squeuei.github.io/post/2019-08-13/%E6%AC%B2%E6%9C%9B%E3%81%AE%E5%90%8C%E6%AC%A1%E5%A4%89%E6%8F%9B%E8%A1%8C%E5%88%97/</link>
      <pubDate>Tue, 13 Aug 2019 05:00:00 +0900</pubDate>
      
      <guid>https://squeuei.github.io/post/2019-08-13/%E6%AC%B2%E6%9C%9B%E3%81%AE%E5%90%8C%E6%AC%A1%E5%A4%89%E6%8F%9B%E8%A1%8C%E5%88%97/</guid>
      <description>求めるべきでないものを求めてしまう人々というのがいる。 私で言えば創作活動がしたいだとか、あるいは自動車の運転がしたいとか、電子工作やプログラミングができるようになりたいだとか。 世間一般で言えば、（その能力が無いにもかかわらず）いい大学や企業に所属したい、パートナーと出会いたい、恋愛や結婚がしたい、などだろう。 あるいは空想上ではない未成年に対する性的欲望もここに含まれるのかもしれない（disclaimer: 私は直前まで『allo, toi, toi』を読みかえしていました）。 そういう、その当人が抱くには正しくない、適切でない、間違った欲望というものが存在する、らしい。
機会の平等が極端に冒されているということはない、とここでは仮定する。この仮定が現実に即していないというのは承知の上でだ。 つまり私のような人間が二人いて（たいした災厄である）、その片方のみがある欲望が叶えられないのは、当人の努力や資質が不足しているか、あるいは元より充足しようのない、充足されてはならない類のものであるからだと考えるのが妥当だろう。 ともあれ、みんなのあらゆる願いが同時に叶うことは有り得ないという事実だけは動かしようのないものだろう。 仮に、神様のような計算機があって、常に最適な結果をもたらすオラクルを教えてくれるのだとしても、それが人と人との問題であり、かつ人が取り得る全ての在り方を網羅していない以上は、どうしても充足できない組み合わせというものが存在しうるだろう。
さて、叶わないとわかっている欲望を持ってしまった時、人はどう振る舞うべきなのだろうか。 賢い人はこういうだろう。
「諦めたほうがいいよ」
「当たり前だと思ってるのかもしれないけど、それ全然当たり前じゃないから」
「身分不相応の物をタダで手に入れようとしている」
「ただの甘え」
「自分で自分の思想に自縄自縛されているだけ」
まあたぶん妥当なんでしょう。 そこで、考えを変えなきゃいけないわけだけれども、これって難しくないですか？　自分の内に、間違っている思考があったとして、それを修正することは、それが正しいことだとしても、難しい。 だってそれって自分のよくわからないところから湧いてくる思考を湧き出さないようにしたり思いついても無視したりするように習慣付けるってことでしょ？　確実に苦しい。 アルコールや違法薬物に対する依存症から脱出するグループワークみたいなのが参考になるんですかね。
なんで叶わない側の人間ばかりが苦しまなければならないのか（自分の欲する所を叶える能力も、叶えられない欲望を諦める能力もないからです）。 もっとこう、自分の満たされ方をコントロールできるようなマシーンやメディシンがほしい。 技術や工学の進展がこれらの問題を解決してくれる（かもしれない）。イーガン的世界観だ。 そうすれば私達は楽になれる。余計なことに目を向けないで済む。えっちな服を着た女性や魅力的な女性とすれ違っても糸くずや瓶のふたのようにしか映らない（彼女達はようやく望むがままの格好で外を出歩けるようになる！）。他者を蹂躙するようなあってはならない性的嗜好に悩まされることもない。 理想的な世界！ 問題は、そういう世界に我々が到達するまではまだ時間がかかるということで、苦しみながら生きるくらいなら死んでしまいたいよね、という話でした。生きていたくないよねえ。</description>
    </item>
    
    <item>
      <title>自覚と責任と自動車（と趣味一般）のはなし</title>
      <link>https://squeuei.github.io/post/2019-08-13/%E8%87%AA%E8%A6%9A%E3%81%A8%E8%B2%AC%E4%BB%BB%E3%81%A8%E8%87%AA%E5%8B%95%E8%BB%8A%E3%81%A8%E8%B6%A3%E5%91%B3%E4%B8%80%E8%88%AC%E3%81%AE%E3%81%AF%E3%81%AA%E3%81%97/</link>
      <pubDate>Tue, 13 Aug 2019 00:05:00 +0900</pubDate>
      
      <guid>https://squeuei.github.io/post/2019-08-13/%E8%87%AA%E8%A6%9A%E3%81%A8%E8%B2%AC%E4%BB%BB%E3%81%A8%E8%87%AA%E5%8B%95%E8%BB%8A%E3%81%A8%E8%B6%A3%E5%91%B3%E4%B8%80%E8%88%AC%E3%81%AE%E3%81%AF%E3%81%AA%E3%81%97/</guid>
      <description>ここ最近自動車が欲しいという気持ちを抱いている。 もちろん自動車の所有にはコストがかかる。車両を購入するイニシャルコスト。車検ガソリン保険駐車場などのランコスト。せいぜい月々の電気代程度で済むPCや、数年毎のオーバホールで済む腕時計とは大違い。すぐに手放せない以上、所有することに相応の覚悟が必要な資産である。
ここで、自動車を獲得することによるベネフィットとはなんだろうか。一番大きいものとして、自分が望んだ時間に、自由に移動するための手段を確保できる、というものがあるのだと思う。たとえば、レンタカーやカーシェアリング、またはタクシーでは、自分が望んだ時間に満車で使えないかもしれないし、そもそも近くにそういったサービスの提供がされていない場合もある。このような状況かつ特に公共交通機関網が貧弱で、通勤通学や普段の生活に支障を来すのであれば、自動車のベネフィットは大きくなるだろう。 また、移動手段以上のものとしての見方としては、それ自体を娯楽の道具として見る、ということが挙げられるだろう。自動車の運転それ自体に楽しみを見出し、エンタテイメント端末やスポーツ器具と同じように、自動車をみなす、ということだ。その楽しみ方はまったくもって正当なものであって、そのために自動車を持つことは馬鹿げている、と一律に否定してしまうのは、あまり筋が良くない主張と言えるのではないだろうか。
さて、ここまではベネフィットの事について書いた。しかしながら、自動車の運転には当然リスクが存在する。 最も明らかな例は交通事故を起こすことだろう。事故を起こした場合、3つの責任が問われることになる。刑事上の責任、行政上の責任、民事上の責任である。刑務所にて服役しなければならないし、免許は取り消されるし、損害賠償をしなければならない。あるいは、現代においてはそれ以上の「責任」が発生するかもしれない。加害者になれば、家族からの糾弾、怨恨、非難は避けられない。かつては親しげだった周囲からの目線も厳しいものへと一点するだろう。仕事をクビになるかもしれない。場合によっては離婚、家族離散ということもあるだろう。 加えて、自分の身体に後遺症を残すこともある（他人の身体を傷つけることは上に含めてしまおう）。即死する事故であればまだ救いがある――やり残したことはるかもしれないが――。重度の昏睡状態におちいったりすれば、身の回りの誰かしらがそれを支えなければならない。身体や認知能力に関する後遺症が残れば、その後の生活は、周囲の人間を巻き込んで、つらく厳しいものへと変わるだろう。 当然、交通事故は社会問題の一つであるから、事故を防く方策は常に進歩しつつある。特に、近年の安全装備高度化にはめざましいものがあると言えよう。しかしながら、それでも事故を撲滅するには至らず、最終的には運転手の技量と判断力に、交通の安全性はゆだねられている（余談：私は「運転に慣れれば事故が減る」という見解に対して懐疑的だ。であるならば、何故「過剰な慣れが事故を誘発する」などという矛盾した主張が同時になされるのか）。
このように、自動車の運転にはコスト、ベネフィット、リスクが存在する。 私が言いたいのは、世の中の運転者はこれらのことを全て自覚した上で、コストもリスクも全て引き受けて、主体的な選択に基づいて、自らの責任で運転を行っている、ということの偉大さだ。 社会においては責任転嫁は許されないことであるという価値観が共有されている。実際、現実的に交通事故の責任から逃れることはできないだろう。 故に、あらゆる自動車の運転はコストとリスクを上回るだけのベネフィットが運転にあるという判断に基づいて行われている。その判断力、運転技量の高さ、そして覚悟に、私は感銘を受ける。 こういった人びとは、たとえ何かが決定的に失われることがあったとしても責任転嫁することなく、全ての帰結をただ静かに受け入れ、責任を果たしていくのだろう。
私はそうではない。運転をしたいと思いつつも、日常生活に自動車は必要ないので、楽しみとしての運転にベネフィットがあると確信できない。私は口先だけの人間だ。事故が怖くて運転することを避けてしまう。運転の技量もない。運転に対する習熟が事故のリスクを減らすとも考えられない。私は、事故を起こしたあとで「運転なんてしなければよかった」と思わないでいられる自信がない。責任から逃げないでいられる確信を持てない。 こういうことを言っていると「自分のしたいこともできないなんて主体性がない、覚悟が足りない。本当は運転したくないのを隠したくてうじうじしてるだけ」と言われてしまうのだろう。そして客観的に見てそれは正しいことなのだろう。 結局は、すべてを自覚した上で、今まさにやっている人間だけが本物で、それ以外は全部フェイクということなんだろう。フェイク野郎に相応しい人生、というわけ。
こういったことが、自動車の運転に限らず、ありとあらゆる欲望に関して、私へ適用される気がする。自覚と責任を持てない、主体性のない、人間未満だ。 社会を生きる大人たちは、自覚と責任を持って生きている。私は少なくとも精神的には大人には程遠い。 大人になる方法も、幸せになる方法も、私にはわからない。生きている間にわかる時が来るとも思えない。 私は弱虫だ。</description>
    </item>
    
    <item>
      <title>I just don&#39;t know anymore</title>
      <link>https://squeuei.github.io/post/2019-08-12/i-just-dont-know-anymore/</link>
      <pubDate>Mon, 12 Aug 2019 01:00:00 +0900</pubDate>
      
      <guid>https://squeuei.github.io/post/2019-08-12/i-just-dont-know-anymore/</guid>
      <description>かつてブログやテキストサイトをやっていた人々のことを尊敬する。全く読まれないし反応もないものね。まだなろうやカクヨムで底辺小説やってる方が気分が楽。
 がんばってる奴と
がんばりたい奴と
がんばれない奴
3番目の
クソ野郎はせめて
はじめの2つを
助けてやらねぇと
って思った
いるんだよ
夜凪
世の中には
もう
どうしようもなく
がんばれねぇ
クソ野郎が
『アクタージュ act-age (7)』
 私の短くない人生の中で何回も何回も繰り返した失敗なのでこれは確実な真実なのだが、私は出来る人、生産的な人、創造的な人間ではない上に、それらに該当する人の邪魔をすることしかできない。彼らの時間を無限に消費して、有意義な活動をする余地を奪う。 邪魔をするだけなら近づかず、支援するにしても直接の接触をせずに資金面などでサポートするのみにとどめればいいのだが、当の本人はそういった人々に惹かれて近づいていってしまうのでよりいっそうたちが悪い。 組織論で言うと、この問題に対する答えは明確に出ている。そもそも最初からそういう人物をチームに入れないことだ。間違って負の能力を持った人間をチームに組み込んでしまうことは、何よりあってはならない失敗である。故にあらゆる組織はその採用に細心の注意を払う。 そして、そういったtraitを持った人物のことをわざわざ欲する組織が存在するとは考えられない。 似たような言及をされる存在にいわゆる「メンヘラ」がある。インターネットをしていれば「メンヘラに出会ったら逃げろ。関わるな。奴らは関わった人間を全員不幸にする。自分を守れ」あたりの言葉を聞いたことくらいあるだろう。 私は心理学や精神医学について何もしらないけど、多分こういった症状って何らかのつながりがあるんじゃないかって想像している。勝手に思ってるだけで間違ってるかもしれないけど別に本論にはあんまり影響はない。 まあ、なんにせよ、自分が好ましく思っている相手から疎まれることが続く人生というのはつらい。
さて、そういった人々が「適切」に扱われたとして、彼らの苦しみとは、妥当で、仕方のない、自業自得的なものなのだろうか。まあそうかもしれない。 でも、それで彼ら自身でさえも苦しんでいるのであれば、彼ら自身が生きていることは、悲劇そのものだ。他人を不幸にし、自らをも不幸にし、何も生み出さず、誰も幸せになれない。 彼らが生きていたいと願っているならば、多数派の言う事で一人の命を左右してしまうことになるので、これはよくない。 でも、当人ですら生きていたくないのであれば、彼らに安らかな眠りを与える、というオプションを提供するべきなのでないか。
たしかに、福祉が整った社会が出来上がれば、仮に雇われず、誰とも交流せずとも、生存を続けることができるのかもしれない。 でも、そんな「二級市民」の暮らししかできない状況で、みんなが幸福でいられるだなんて、本気で信じられるだろうか。 他人に迷惑をかけてもいいのかもしれない。でも、誰かに嫌な顔をされたままで生きているほどの執着もない。どのみち何もできない人生なのだ（高齢になってから何かを始め、成し遂げられる人は本当にすごいが、なぜそんな凄い人物だと自分自身をとらえられるのだろうか。また、たとえすごいことがなされなくても、いつか誰かが同じことをしてくれるだろう。人間の発想力は有限なのだから）。 向いてない幸せなら諦めればいい。自分を不幸にする思想であれば構わず投げ捨ててしまえばいい、大学進学や就職や結婚だけが幸せじゃない。要するにそれは「お前には向いてないから諦めろ」という宣言に他ならない。たとえそれがどんなに妥当で正しい助言だったとしても、それに従った方が幸せになれるとわかっていたとしても、そんな風に諦めがよく、叶わない欲望を抱かず、抱いてもすぐに投げ捨てられるような賢い人々であったなら、こんなに苦しんだりはしないだろう。 そもそも、人は「再分配」できないって、みんなが言っていることじゃないか。
現状では、苦痛と恐怖と失敗したときの後遺症リスクと周囲への被害リスクを負担して自殺するか、あるいはそれができない有害な弱虫として他人に迷惑をかけ足を引っ張り疎まれ非難され嘲笑され苦しみながら生きる（もちろんそんな中で生きることを選ぶことも可能だ。たとえモンスターと言われようとも、生き残ることは生物として正しい（自然に訴える論証））かの二つに一つだ。直接的に非難されるかどうかはともかく、どちらを選んでも苦しい生活が待っている。 でも、この苦しさまで自業自得なのか？　せめて、そこから抜け出すための手段くらい、整備してほしい、許されていてほしい。大したコストはかからないだろう（少なくとも私たちが生き延びてしまった時よりは）。有害な人物が自ら望んで居なくなれば、本人は苦痛から解放され、周囲はその人物からもたらされる被害から抜け出すことができる。まさに願ったりかなったりだ。
人は変わらない、学ばない。であるならば、安らかにそれを終える選択肢くらい、許してくれたっていいだろう。
楽になりたい。</description>
    </item>
    
    <item>
      <title>都市と場所</title>
      <link>https://squeuei.github.io/post/2019-08-11/%E9%83%BD%E5%B8%82%E3%81%A8%E5%A0%B4%E6%89%80/</link>
      <pubDate>Sun, 11 Aug 2019 00:25:54 +0900</pubDate>
      
      <guid>https://squeuei.github.io/post/2019-08-11/%E9%83%BD%E5%B8%82%E3%81%A8%E5%A0%B4%E6%89%80/</guid>
      <description>誰にも届かない壁打ちしてる。
Imagination on cities 過去記事で上手く言及できなかったこと。
都市に対する想像という観点で言うと、『天気の子』って結構不満があって、そもそも人口が保たれてるというとか経済が保たれてるというのからしてどうという話はあるんだけど、これを言ってしまうとエピローグができないからそこはさておく。
さて、3年後の東京は仮に█████していたとしてもああはならないでしょうという気持ちがあるんですよね。つまり、大型船が入港する外港をわざわざ同じ場所か、陸地と一緒にさらに内陸へ移動するなんてことはしないだろうし、水上交通といえば水上バスや！　って思ったのかもしれないけど、それで行く先はどこ？　って想像してしまう。沈んだ街へアクセスする理由はないはずだし、沈んだ反対側へ通勤するのにあの人の量を道路や鉄道なしでやれるとは考えにくい。そもそもその両端で街ができるくらい物資が届く様になっていないといけないわけだから、少なくとも東北側や東海側からは陸路でアクセスできるようになってる？　ならば陸路でアクセスできる範囲に引っ越したりしない？　まあしないのかも。どちらにせよ、もっと高速で安定した移動手段でないと、都市として保たない気がする。輸送力が違いすぎるし、人しか運べない。あ、もしかしてドローン輸送へ舵を切ったりするのかもしれないな。水と空の話なのだけど、あんまり空側のものって出てこないんですねこの作品。
海に沈んだ街というのはエモなんだけど、海水にさらされることが考えられていない建造物がどれだけ形を保っていられるかというのは、わからないなと思う。まあ3年で崩れることはないのかもしれない。ただ、すでに沈んだ部分にしろ、これから沈む部分にしろ、海底はかなり危険なことになってるんだろうなと思う。それこそ、航行をためらうレベルに。そういう観点で言うと、もっとメガフロート（これももう古い想像力でしかないだろうか）的な建造物が多用されていてもいいのかもしれないし、進学先だって海洋工学や土木工学の方面へ進むという選択肢でもありだったはずだ。はいふりじゃん。そういえばはいふりって分岐した歴史とか案外設定が凝ってて設定集とか読むと面白いんですよね。水上で暮らすことが当たり前になった人びとの生活を描いた、という観点で言うとコミカライズ、ノベライズ含めて追いかけると結構面白いです。いや、あれだけ船舶工学が発達してるのに空気を同じ流体力学の対象として扱えずに固定翼回転翼航空機が発達していないというのは結構無理がある設定だとは思いますが……。
防波堤？　大堤防？　についても。うろおぼえなんだけど、川に対する大堤防を整備していたような気がするんだけど、大堤防って基本的には増水した川に対するものか、あるいは外洋から襲ってくる地震による津波から守るために作る、という印象がある（調べていない）。もう東京は海に沈んでるんだからいまさら大堤防を作ってもという気がするし（いや、仮の堤防があって、本当の万全に身を守るための堤防を建てているんだ、という解釈はありだろう）、そこらへんが専門家にどう映ったのかは気になる。逆に、外洋からの津波に対する備えがどうなっているのかも気になる。既存の堤防設備は海に沈んでいるんだろうし、すごく頑張っていない限り、津波に対して物凄く脆弱になっている気がする。3年で大堤防の整備、国家的一大プロジェクトになりうる。
そういえば新幹線も羽田も沈んでるんですね。まあ新幹線は始発が熱海くらいになってるのかもしれない。マジかよ激アツじゃん。羽田が使えなくなった以上は成田の強化が成されているか、調布の強化がされているか、横田や厚木という大アクロバットがあるのかもしれない。どちらにせよ滑走路は足りないので、周囲の土地買収を含めた一大プロジェクトが――いや待てよ。レインボーブリッジって橋の下は50m以上あるそうだから、下手したらいま挙げたのだいたい沈んでる恐れが……。そういえば出身地の設定に飛行機で到達できない場所、という縛りがあったのかもしれませんね。最後に空港が使えなくなるリスクがあるので。京浜工業地帯、京葉工業地域が沈んでるとなると、もちろん経済に対する影響はひどいことになってるんだろうけど、鉄鋼とか石油とかの供給能力も気になりますね。東京だけではない全世界的な経済的打撃がありそう（でもまあみんな転注したり国産化したりできるでしょう）。
ここらへんの想像力にもっと説得力を感じられたなら、もっと素直にこの作品のことを見られたのかもしれないと思った。
追記（2019-08-14） 『天気の子』の結末における（そして都市に関する）「大丈夫」への苛立ちがなんなのかについて、ずっと（断続的に）考えていたんだけど、これって要するに、
その「大丈夫」とは、東京に住み、東京のオフィス・店舗で働く人々の方だけを見た「大丈夫」でしかないし、なんならそれ以外の存在はたとえ東京都内に所在しても東京じゃないと思われている
ってところにあるのではないか、という仮説を思いついた。感情を説明するための後付けの論理でしかないけれども。
Anywheres and Somewheres 全然違う話。David Goodhart氏が提唱する概念に“Anywheres”と“Somewheres”というものがある。
https://www.bbc.com/news/video_and_audio/headlines/39293519/david-goodhart-anywheres-versus-somewheres
https://www.theguardian.com/books/2017/mar/22/the-road-to-somewhere-david-goodhart-populist-revolt-future-politics
https://www.wsj.com/articles/trump-and-the-revolt-of-the-somewheres-11551483212
ざっくり言えば、どこでも生きられる人と、そうでもない人の話。
この概念を知った瞬間、かつての私はAnywheresになりたかったのだな、と思った。
まあ、もはや叶わぬ話なのですが。
私は馬鹿で愚かで無能で敗残兵で落伍者なので。</description>
    </item>
    
    <item>
      <title>インターネット</title>
      <link>https://squeuei.github.io/post/2019-08-10/%E3%82%A4%E3%83%B3%E3%82%BF%E3%83%BC%E3%83%8D%E3%83%83%E3%83%88/</link>
      <pubDate>Sat, 10 Aug 2019 21:31:19 +0900</pubDate>
      
      <guid>https://squeuei.github.io/post/2019-08-10/%E3%82%A4%E3%83%B3%E3%82%BF%E3%83%BC%E3%83%8D%E3%83%83%E3%83%88/</guid>
      <description>インターネットなしのインターネッター  「逃亡しろと。どこへ？」
「そうだねえ、電線もなくて、衛星がカバーしてないエリア」
「この地球に、そんなところあるはずねえだろ！」
「逃げるんだとしたら、そういうところを探すしかない」
『serial experiments lain』
 Twitterを使わないようにすると、何をすればいいのかわからない。外出や行動の過程や感想をどう扱っていいか分からないし、時間があいても、新刊が出たばかりの『ふらいんぐうぃっち』を最初から読みかえしたり、Google Newsを何度も更新したり、はてなブックマークを開いては体調を悪くしたりとかしてしまう。悪いインターネットをやめたところで、使う人間がアレだったならば、基底現実の世界でだって当人はアレなままなのだ。
なので最近はインターネットのことを考えている。いや都市に対する想像力についても考えたりしてるけど（ヌルい設定厨志望なので）。あるいはこんな内容のないつまらない価値のないブログ記事を書くことしかできない。
創作物について かつてのインターネットにおいて好まれていた存在の少なくない割合は、剽窃や無断使用、海賊行為によって成り立っていたことは否定しようのない事実だろう。MAD、Flash、コラ画像、ニコニコ動画やYouTubeへアップロードされた動画の数々、画像リプライを通したコミュニケーション、Tumblrのダッシュボード、あるいはWinMXやShareやWinnyやBitTorrent（の非合法使用）も含まれるのかもしれない。要するに程度の差はあれ、本質的に違法なのだ。
自由な改変が許される文化として、オープンソースソフトウェアという良い例があるじゃないかと、かつては思っていた。しかし、ソフトウェアと著作物ではやはり目指すところが違うのだと、最近は考えている。 オープンソースソフトウェア――とくに自由ソフトウェア――は、ライセンスすることで他の開発者による改善を受け取れる可能性があるからこそ、そのようなライセンスにて公開されているのだと考える。逆に言えば、利益が生じないような、修正や改善を受けることをそもそも嬉しいと思わない著作物――世間一般的に言われる類の創作物――に関して言えば、（両方の意味で）フリーなライセンスで公開するインセンティブは薄い。 新しい創作物が作り上げられるプロセスは、既存の作品の具体的な実装をベースとして行われているかというと、少なくとも技術や論文ほどにはそうではない。個人の思い入れが強い以上は、創作物の望まれない使い方への忌避感というのは避けようがなく強いものになるだろうと予想がつく。 そもそも、GPLやGFDLの背景にある思想は、何かをするための道具や手段ではない、存在それ自体が目的の、属人性が強い、個人や手段の表現としての創作物というのを積極的には対象としていない。
 芸術あるいは娯楽作品が自由でなければならない、という立場をわたしたちはとりません。しかし、あなたがそうしたい場合、わたしたちは、自由アート・ライセンスを推奨します。
https://www.gnu.org/licenses/licenses.ja.html#OtherWorks
 インターネットにアップロードされ得るようなコンテンツが商売として成り立つようになったことは、違法行為に対する適切な――ときには過剰な：私たちは既にBlu-rayの映像を引用することができない世界を生きている――取り締まりを行うための手段を整備させた。たとえばDRM。 そう思うと、現状で世界は健全で適切な方向に進んでいる。著作権とその執行手段の強化が進行していくのは、もちろん著作権者の人々にとってはマネタイズの機会が増えることになるわけで、喜ばしいことではないか。 RMSだって、DRMに対しては強い反対をしているけれど、このあたりの記事を見ると、コピーと再配布は大賛成、作品の修正や改変には消極的に賛成、くらいのニュアンスを感じはする。
https://japan.zdnet.com/article/35012519/
実のところ、誰もが無償で自由に自分の成果物を公開する――剽窃や改変を許すかどうかはともかく――ユートピア的な発想は、なにもゼロ年代インターネッター固有のものではない。 私が思い付く例はアーサー・C・クラークの『都市と星』だ。SFを千冊読んだことはないので、より良い例をSF者なら思い浮かべられるだろう。 しかし、そのような未来には決して私たちは辿り着き得ないのではないか。なにせ、みんな、自分の創作物が大好きで、それを誰かの手によって――少なくとも自分が望まない形で――改変されたくなんてないのだ。
コミュニケーションについて mixiやそれ以前のインターネットで人と人がつながっただなんて喜んでいたのは、所詮ナローバンドの帯域不足で十分な情報が伝わってなかっただけなのではないか、ということを考えている。 帯域の拡大は、全人的なコンテンツ化を可能とした。YouTuber/VTuberはその典型だ。そこまで至らずとも、みんなそれぞれの日常をTwitterに垂れ流している。長く、太くつながれば、他者は無限に馬脚を現し続ける。つまり、本質的にインターネットは人々を分断することに長けた装置なのではないか。
でも、ある意味では分断が進むことは望ましいことなのかもしれない。争点が可視化され、自分の立場について否が応でも考える機会、決断する機会を設けざるを得なくなる（というのはツイッターのフォロイーからの受け売りです）。 自覚と責任。自分が置かれている状態や立場から目をそらさずに自覚的であること。自分の選択――「選択しない」という選択を含む――の結果生じた不利益の責任を取ること。これらは社会における「大人」の条件として捉えることができるだろう。具体的な例を言えば選挙。 現実逃避と馴れ合いを止め、現実と立ち向かい闘争を始めることが、幼年期を終らせるための苦い苦い特効薬になるのかもしれない。
さて、そのような社会が実現された場合、分断が可視化されないことで基底現実における利益を生み出してきたアライアンス、あるいは知人、友人、家族の関係が瓦解し、もはや基底現実はビジネスライクな関係に終始することになるのかもしれない。つまり、物理的な生命のみをつなぐための感情を極力表出しない――さもなくば生存すら危うくなってしまう――社会。 幸い、私達にはインターネットがある。地理的に近い人々が決して相容れない思想の持ち主ばかりであっても、世界のどこかには許容可能な誰かがいるかもしれない。 そうなると、これからの私達は、精神的には、遠隔地にいる同志との小規模なコミュニティに籠もって生きていくことになるのかもしれない。 基底現実では誰ともわかりあえないけど、インターネットでなら遠くに居ても、同志を見つけられる。なんなら大企業によるスコアリングとマッチングが、それを促進するかもしれない。 さて、このような状況においてインターネットは間違いなく希望だ。でもこれって、ある意味では、現在においても主に非都市部で発生しがちな状況が、あらゆる場所、あらゆる人間関係にまで拡張されるだけ、とも言える。
ここで一つ、気を重くする話を持ち出すと、上記の希望でさえも、更なる争点、分断の可視化が進めば、かつて許せると思った相手でも、結局は他者であり、分断を免れえないので、最終的に付き合えるのは自分自身のみ、といった状況に陥るのかもしれない。 その時には、自分自身とだけ仲良くできるコミュニケーションのソリューション――脳内彼女または脳内彼氏――をインターネット大企業が提供してくれるようになるのを待ちましょう。
いったいどうしてこんなことになってしまったんですかね。ツイッターが悪いのか。いや、ツイッターはあくまで単なるメディアに過ぎない。モノカルチャーで議論がヘタクソな日本人だからか？　昔ならそれで説明できたかもしれない。だが、いまのアメリカを見ていると……なんて『虐殺器官』にでも出てきそうな人物のセリフが出てきてしまいますね。虐殺の言語はどこにもないのに――
むすび マネタイズ可能性と帯域の拡大。
ゼロ年代に（私だけ！？）抱かされてしまったインターネットに対する幻想がことごとく打倒されていってしまっているのは、でも逆に考えればいいことだ。だって巨視的に見れば常に世界は正しい方向へと向かい続けているのだから。つまり否定されるべきなのは私（たち）であって――
かつて、インターネットは別の世界だったのだと思う。 ちょっと前にインターネットは二番目の社会になった。 これから先は現実を生きるための一手段でしかなくなるのだろう。
このよくわからない文章のまとめを考えるとしたら、たぶん、こんな感じ。
まあなんにせよ、インターネットは道具にすぎない。インターネットに楽園が現れない、地獄が顕現するのは、インターネットを使う人間が悪いのだ。インターネットが、それをより明示的な形で露わにしただけ。人間が使うならインターネットは悪くなるし、インターネットから離れようとも、悪い人間は悪いままなのだ。逃げ道はない。
 Rebuilding America isn&amp;rsquo;t gonna get rid of the BTs. Long as they&amp;rsquo;re still around, there&amp;rsquo;s no escaping.</description>
    </item>
    
    <item>
      <title>近況</title>
      <link>https://squeuei.github.io/post/2019-08-09/%E8%BF%91%E6%B3%81/</link>
      <pubDate>Fri, 09 Aug 2019 20:48:01 +0900</pubDate>
      
      <guid>https://squeuei.github.io/post/2019-08-09/%E8%BF%91%E6%B3%81/</guid>
      <description>インターネット（インターネットではない）やめろ ひとに（明示的に）迷惑をかけてしまったのでツイッターとかディスコードから離れている。
自分がいなくても回る世界を感じられるのは随分心地がよく。
とはいえ、しょせんは私、なにか創造的、生産的なことができるはずもなく――
小説 更新の予定、なし――（運転再開の目処は立っていません）
ガルラジ ガルラジことガールズラジオデイズを聞いている。まだ一期目。
てぇ……富士川から岡崎へドライブしてえ……
夢 電車の中で占い好きの女性と意気投合し、電車を降りる際に自分のLINE IDを一方的に叫ぶ。
その後、カメラを持って神社へ行く。中望遠と中望遠マクロの二本を持っていて、チョイスが謎だった。
LINEにメッセージが来たけど、当人からのメッセージか疑っている（不特定多数に聞かれていたため）。
どういうことだフロイト（現実になることなし）（人格が破綻しているので）（かなしいけど、でも他人に迷惑をかけることがないという観点では望ましいことだ）
PC HP Elitedesk 800 G4 DM メインのデスクトップ、HP Z240SFF Workstationを代替するタイミングで欲しい。システムに500GB NVMe SSD、ストレージは1TB SATA SSDを流用。メモリはできれば32GB。Wi-FiとHDMI仕様に3年オンサイト保証を付けて。
ASUS Chromebook C214MA ASUS Chromebook C100PAの代替で欲しい。必要ではない。米ゾンから通販するのがキーボード配列の観点からよさそう。国際保証あり。デュアルコアのGemini Lakeだから結構パワーがありそう。C100PAほど軽くはないが、Chromebookとしては十分快適ではないだろうかと想像する。ソフトウェアまで含めて雑に使えるのがよい。
GPD microPC 持ち歩く用に欲しい。文字をタイプするときにはきっと外付けキーボードが欲しくなると思うので、軽さのアドバンテージが活かせないリスクがある。
Microsoft Surface Pro 6 / Vaio SX12 たしかに欲しいが、品質、信頼性、メモリ16GBの価格などで微妙さを感じている。
Synology DiskStation DS718+ / DS918+ NAS。ほしいけど、常時回してるとうるさいか。2ベイ OR 4ベイ。WD Redあたり。RAID-1？
車 車が欲しい。スイフトがいいか、NAの軽がいいか。しかしそんな資金の余裕も駐車場も運転技術もあるはずがなく――
本 あーとかうーしか言えない(2) あー
ダンベル何キロ持てる？ (1-2) おもしろい
ふらいんぐうぃっち(8) よい
春のムショク(4) いいはなしだった
ななかさんの印税生活(3) 創作者はすごい
東京入星管理局(1) おもしろい</description>
    </item>
    
    <item>
      <title>Weathering with You</title>
      <link>https://squeuei.github.io/post/2019-07-28/weathering-with-you/</link>
      <pubDate>Sun, 28 Jul 2019 07:24:20 +0900</pubDate>
      
      <guid>https://squeuei.github.io/post/2019-07-28/weathering-with-you/</guid>
      <description>映画『天気の子』を見てきました。
　『天気の子』、私には乗り切れなかった話という感覚がめっちゃ強い。話の筋自体には大して文句がないんだけど、逆に大して思い入れもなく、故に本筋とは全く関係のない不満ばかり考えてしまう。
ストーリーに関しては無限に話されていると思うので、あまり言及しません。なので妙な方向からの視点で話をします。それって、ただのいいがかりでは？　でもボーイミーツガールに関して私が言えることは何一つないので……
　以下ネタバレ感想です。
　シビルエンジニアリングとか都市工学の人が見たら渋い顔するんじゃないかな、というのが、まず思ったことです。描きたいことのスコープの外だというのは理解するけど、それでも私は水害の話としては水害に対する認識が甘すぎると思ってしまう。
現実に引き寄せて考えるのも大概にせえよという話なんだけど、ここ数年だって鹿児島なり広島なり岡山なり日本中至るところで水害が発生していて、しかも都市部の治水なんてまさにこれから考えていかなきゃまずいイシューな訳でして。そういう中でこういうフィクションが出てくることは、たとえ言いがかりだと言われても、あまり好ましいことと思いたくはないのです。
前作『君の名は』での災害は隕石でした。隕石が落ちてくることによる影響を私達はよく知らないし、落ちてくる軌道のおかしさはあるにせよ、その結果、隕石が落ちた被害の描写がおかしいものには、少なくとも素人が見て強い違和感を覚えるほどのものにはならなかった。
　水害という意味では、長い間連続で雨が降り続いている時点で、かなり危険な状況にあるはずです。その状態から、歴史に残る大雨が降ったならば、翌日晴れたからといって、都市がある程度機能できる、なんて状態にはならないでしょう。
たとえば。
半地下の事務所は窓を開けるまでもなく水没して住人は溺れている。
街中あちこち水浸しで、おそらくは電気水道ガス電話インターネットもダメージを受けているであろう状況に、警察が手配中の少年一人のことなんて気にしている余裕があるのか。
浸水したあとの衛生確保や伝染病のことを考えるとつらい。
三年後のことについてもそう。
海水と水流にさらされた鉄筋コンクリート建築がどれだけ原型をとどめていられるのか。
水没した街の上を水路にするのは水深上難しいのではないか。
水上バスを走らせて行く場所はあるのか。 物語の終盤、おばあちゃんの家に行くシーンについても、自治体のハザードマップを調べると適切なチョイスでないように感じてしまう。些細なことといえばその通りなんだけど、「二百年前は〜」という会話をしているその場所ってまさに水田地帯、過去荒川が荒ぶっていた場所じゃないの？　言ってることと描写がちぐはぐではないか？
　そもそも私は、水浸しの街をモチーフにした作品を、数年前からあまり素直に見られないところがある。なぜなら、実際に起こりうるのは、リゾートのビーチのような澄んだ水ではなく、茶色い濁流だって、もうみんな知っているわけじゃないですか。
　この作品は、任意の悪いことがあっても大丈夫だよという、底抜けの希望の話だと思っています。その一方で、使ったモチーフが大雨や浸水などの水害というなまじ現実的なものだったために、肝心の希望の方に説得力を感じなくなってしまう。物語の想定における現実離れした楽観性、都合のいい恣意的な希望の描写から、これは空手形だと、感じてしまう。
　ポリティカルコレクトネスにはいろいろな形があると思うけど、私にとって『天気の子』においてあるべきだった正しさとは「描くことを選んだならば、現実に即した水害の被害を描写する」ことだと思いました。もちろん描かないことでPTSDを回避するという選択肢もあるだろうけど、基底現実の被害者の方々が見て、現実離れした形になっていない描写をすることが、彼等にとって腑に落ちる作品になるのではと……いや、被害者の声を想像で勝手に代弁するのはよくないですね。このくだりは無しにします。
　あるいは。この作品の天秤で、陽菜さんの反対側に載せられたのが「セカイ」じゃないよねという不満なのかもしれない。ひとりの少女のために「セカイ」をトレードオフしたにもかかわらず、後味のいい話になっている。それは何故かというと、物事がただしくトレードオフになっていないから。フロンティアが拡大していたら、そりゃあWin-Winにもなるだろう。天秤でただしくはかられていない。あれでは全然なにも失われていない。失われるべきであろうものを正しく評価できていない。もちろんこの作品は「セカイ系」なんかじゃないから、トレードオフはそもそも成立しない、という答えもあるけど。
　なんか乱雑に書いてしまった。この記事の内容は、「これはそういう作品じゃないし、そういう観点でコアバリューにケチがつく作品でもない」という主張は大いにありだと思います。が、少なくとも私にとっては「あまり評価できない」の範疇にまで至ってしまっている。こういう自分の中で折り合いをつけるのが難しい作品って、なかなかしんどいです。特に、周囲の評価が好意的なときには。
　最後に。この作品って『君の名は』と明確につながっていて、かつ、東京が晴れることはもうないので、その結末を壊すものになっていると思うんですが、大オチをつけるような第三作が現れたりするのでしょうか。</description>
    </item>
    
    <item>
      <title>Fedoraとのつきあいかた</title>
      <link>https://squeuei.github.io/post/2019-06-26/fedora%E3%81%A8%E3%81%AE%E3%81%A4%E3%81%8D%E3%81%82%E3%81%84%E3%81%8B%E3%81%9F/</link>
      <pubDate>Wed, 26 Jun 2019 23:11:11 +0900</pubDate>
      
      <guid>https://squeuei.github.io/post/2019-06-26/fedora%E3%81%A8%E3%81%AE%E3%81%A4%E3%81%8D%E3%81%82%E3%81%84%E3%81%8B%E3%81%9F/</guid>
      <description>ふと思い立ってOpenBSDを使ってみようとして、案外すんなり動作することに驚きつつも、ドライバーがなかったり、サスペンドから復帰できなかったりと、いまいちうまく行かないなあなんて思っているうちに、デュアルブートにしていたThinkpadのWindows領域をddで吹っ飛ばしたりしましたが元気です。データ上書きされたのは最初の500MB位だったのでtestdiskを使ってNTFSのパーティションを復旧してデータ救出するところまではできました。
OpenBSDは設定ファイルが明快だったり、manの品質が高かったりして、結構好印象でした。なのでまた何らかしらのマシンでチャレンジしたいですね。HP Elitebook 820 G1でOpenBSDをブートする時画面が乱れる問題の対策としてはmachine gopオプションを変えるとうまくいきます。
そんなこんなでE7270にFedora 30をインストールします。なんで！？ インストールはめちゃくちゃ簡単だし、debianと違ってfirmwareはバイナリブロブであってもゆるすポリシーなので最初からWi-Fiが使えます。
問題があるとすると、日本語入力でしょうか。FedoraのIMEはibus-kkcが標準です。libkkc、比較的新しくていいんですが、既にメンテナンスが放置モードっぽいのがちょっと不安。kkcのつらいところに、スペースを打っても全角スペース（U+3000 Ideographic Space）にならないところと、ltuで「っ」が入力できないことの二つが挙げられます。この問題に対する解決方法としては、些か乱暴ですが/usr/share/libkkc/rules/default/rom-kana/default.jsonを編集してしまうというものがあります。具体的には
... &amp;quot;z_&amp;quot;: [&amp;quot;&amp;quot;, &amp;quot;　&amp;quot;], &amp;quot;ltu&amp;quot;:[&amp;quot;&amp;quot;, &amp;quot;っ&amp;quot;], &amp;quot;vyu&amp;quot;:[&amp;quot;&amp;quot;, &amp;quot;う゛ゅ&amp;quot;] ...  などとします。Lを打つと全角スペースが出て来るのは変な感じですが、少なくとも「くうはく」と打って変換するよりは気が楽かなと。 ただし、Firefox上でDiscordやTweetdeckを使うと入力モード切り替え直後の一文字が直接入力になってしまうという症状に悩まされたのでさっさとfcitx-kkcにしてしまいした。DEがXfceだからできる技、というわけでもないか。辞書はibus-kkcじゃないと編集できない気がするので、~/.config/fcitx/kkc/dictionary/のファイルを直接いじってしまうのが手っ取り早いかも。 mozc、ibus-mozcはモード切り替え直後が直接入力だったり、fcitx-mozcやmozc自体のパッケージが用意されてないディストリビューションやアーキテクチャがあったりと、なんだかんだで万能ではないので、更新終了して久しいanthyに代わってどうにか使えるようになっていってほしいところです。
あとは何かあったっけ。ああ、環境変数は~/.bash_profileに書くっぽいですね。rcloneを使うと不自由で邪悪なバイナリブロブを使わずにdropboxのファイル同期ができるので自由ソフトウェアの革命闘士ごっこが捗りますが、そもそもファームウェアが入ってしまっている以上は微妙ですね。RPMfusionからffmpegとかいれたりもしますし。
とりあえずそんな感じで使っていってみようと思いますはい。
2019-08-27更新 DEをGNOMEに変えました。Fedoraの開発は今後WaylandやPipewireなどでますますGNOMEと深く結びついていくっぽいです。なので、Fedoraを使うならGNOMEが一級市民かな、という気持ちになっています。他のDE使いたいならUbuntu系列やDebianやArchに行くのがいいのではないか。</description>
    </item>
    
    <item>
      <title>Thinkpad T480</title>
      <link>https://squeuei.github.io/post/2019-06-08/thinkpad-t480/</link>
      <pubDate>Sat, 08 Jun 2019 22:04:26 +0900</pubDate>
      
      <guid>https://squeuei.github.io/post/2019-06-08/thinkpad-t480/</guid>
      <description>購入した動機は、当時の私がThinkpadらしい機体はそろそろ打ち止めになるのかなという予想をしていて、4コア化による性能向上と、古き良きThinkpadの伝統的なスタイルとの折衷が実現されていると思ったからだ。実際、次世代のT490ではよりT480sやX1 Carbonに近づいたように思えるので、判断としては間違っていなかったはずである。
 Intel Core i5 8350U DDR4 SDRAM 32GB (16GB x 2) 128GB PCIe SSD 500GB HDD Geforce MX150 WQHD LCD w/ IR Cam Backlit Keyboard (US Layout) Fingerprint reader / NFC / Smartcard Reader Front 3 cell / Rear 6 cell battery (removable) 3 year send back / accidental damage protection  この構成+αでタイムセール割引適用後で200k JPYしなかったはずである。安い。ともあれLenovoはセール価格詐欺をやめるべきである。
128GBのSSDは2242のM.2スロットに搭載されていて、16GBのOptane MemoryやWWANと排他になる。それならば128GBなんて中途半端な容量のSSDはつけずに、M.2 2242 SSDを買って換装すれば良い、と考えてしまうが、そうは問屋が卸さない。このM.2スロットにはSATAのラインが来ていない。よって、このスロットにSSDを搭載するためにはM.2 2242サイズのNVMe SSDを探さなければならないのである。私には無理そうだったので諦めてSSDを搭載した。WWANにする手もあったけど、WindowsでWWAN使うのってあんまりうまく行かない印象があるのでやめた。
主ストレージにSSDを選択すると、キャディを使ってM.2 2282 NVMeを2.5インチベイに搭載する形になる。私としては、SSDではあってほしかったけど、NVMeの速度は必須じゃなかったので、2.5インチのSSDを買い足して自分で換装することに決めた。実際に、到着後すぐHDDをSamsung 860 EVO 1TBへ換装。128GB SSDにdebian stable、1TB SSDにWindows 10をインストールして運用中。基本的には開発用（何の？）として買ったので、手元にあるボードの開発ツールをWindows側にインストールしてある。能力が低いとはいえ、NVIDIAのGPUが搭載されているのでwaifu2x-caffeを高速に実行することも可能。</description>
    </item>
    
    <item>
      <title>1st of June</title>
      <link>https://squeuei.github.io/post/2019-06-01/1st-of-june/</link>
      <pubDate>Sat, 01 Jun 2019 20:10:29 +0900</pubDate>
      
      <guid>https://squeuei.github.io/post/2019-06-01/1st-of-june/</guid>
      <description>こうやって自意識を切り売りすることでしかブログを更新することができない
いったい何を書けばいいのかが分からない。どう書けばいいのかもわからない。傑作じゃなくても書くんだよというのはまことその通りであるが、しかし文章としてのていを成さないのであればそれはたんなるランダムな文字の羅列としてしかとらえられない。そのブートストラップを行うにはどうすればいいのかというと、他人の行っていることを知り、学び、模倣することにあるんだろう。最近の私は全くと言ってもいいほど文章を読んでいないのでその意味でうまくいくはずがないということもわかってはいる。いや、本当にわかっているのか？　こうして自動筆記的に文章を打ってみると、そりゃ文字カウントとしては進むわけだけれども、それに何か意味があるというわけではないのだ。意味をなす事はとても難しい。評価されるものであればもっとだ。今のところ話のネタはいくつかある。あるはずだった。まず続けるべきは地図のない街だし、The Pulse of Your HeartやScene Through the Triplet、わたしたちの町でを続けるのも良い。Various Methods of Escape（家出で北海道へ行く話）を書いてもいいし、あるいはsleepland（夢の話）でもいい。書くべきものはたくさんあるはずなのだ。それを現実の世界に引き摺り下ろすことができないのは、偏に私の能力がないからだ。A Million Miles Away（幼馴染と宇宙船で漂流する話）でもいいし、The Girl with the Sun in Her Head（頭の中に住む女の子の話）でもいい。それを見ると、TLの人びとはすごいなと思う。ほぼ週刊でなろう連載したり、物理や電子で同人誌を発行したりしている。自分にはそういうことができない。できていない。本気でやっていないからだというのはその通りで、でも本気でやること自体が私にとって難しい。思えば何かに熱中するということができないまますごしてきた人生だった。知識や成績や優秀さというのは私にとっては全てがフェイクであると感じる。私の方が積極的に騙しにかかっているのだからみんながそれに気づけないのは、それはもう当たり前のことだ。しかしフェイクだからと言って投げ出すことは許されていない。そう思われている以上は、ちゃんとそれ相応の働きをしなければならないのだ。その役割を果たさなければならないのだ。なのに私ときたら何に対しても不真面目で不誠実で、しょっちゅうそこらで遊び呆けている。これは許されないことだ。そりゃ、今いるところにだって不満はあるし、その表明はしてきたつもりだ。しかし、かといって、ここより素晴らしい場所があるとは――すくなくとも私がそこへアクセスできるとは――到底思えない。今時はやりのGAFAに行けばそういうことも有り得るのかもしれないが、残念ながらスキルレベルも技術分野も全然マッチしていない。どこへ行こうと私は私だし、無能は無能だし、The Best and the Brightestは最良の最も聡明な人々なのだ。そういえばこういうStructureのないだらだらとした文章って特に日本語圏外では受け入れられない印象があるんだけど、どうなんでしょう。いや、日本語で書いてもこんなの読む奴いないだろというのはその通りなんですが（読んでくださってる方はありがとうございます）。そういえば先日は東京都内に泊まったのだけれども、やっぱりすごいなと思った。何がすごいのかをうまく言語化しなければならないのだけれども、やっぱり人が集積していることがすごいのだなと思った。人がたくさんいる事それ自体は大して嬉しくないんだけれども、人がたくさんいることによって成立する店やサービスというのが結構あって、それはまさに人口密集地でしかありえないことなのだ。人がたくさんいて、お金もたくさんあるから街はどんどん新しくなる（ところで最近は新宿にあまり元気がない気がする。ミライナタワー周りがひと段落してしまったからだろうか。次は西口、いまスバルビルをスクラップにしていたり、ヨドバシが買い集めている辺りの土地なのだろうか。あるいは駅の内側か。私自身としては東西通路はだいたいメトロプロムナードか甲州街道かJR東日本の本社ビル前の橋を渡るかするものだと思ってしまっているのであまり不便はないのだけれど、やっぱり道は多い方がいいというのも事実なのでしょうね）。でもたぶん大きな資本で大きなビルばかり立ってしまうというのはそれはそれであまりよろしくなくて、もちろん地主がやってた小さな店舗が今も残っててリニューアルなどの施策に対して禍根を遺したりみたいな状況は全然よろしくないのだけれども、しかしそういう小規模店舗が生きられるような環境がないとあまりに画一的すぎて飽和してしまうような気がしている。地図街ではそういう意味も含めてやや治安が悪いエリアがあり、しかしそのエリアは地価が安いので新しいことをやろうとする人々がそこにオフィスや店舗を構えたりするある意味で若い街へと再生しようとしているみたいな話を書こうとした。書けたかどうかはわからない。少なくとも私の頭の中にはそういう像があった。でも結局それってジェントリフィケーションでしかなくて、あたらしいスラムがどこかに産まれるだけなのではって最近は思っている。まあそれでいいのかもしれない。人が集まっている限り、街の内側でホットな場所とクールな場所とが遷移していく。進行波炉みたいに。まああれは使い終わったところではもう反応しないんだろうからメタファーにしても不適切なんだけれども。閑話休題。とにかく、都市の中での多様性というのは誰かが何らかの方策でコントロールしてできるようなものではおそらくなくて、ただただ圧倒的な人口密度だけがそれを実現しうるのではないかと、そんなことを考えたりしましたとさ。しかしその人口密度が普段の生活を文化的なものから遠ざけてしまうというのはなんとも皮肉なもので、じゃあいったいどうしたらいいんでしょうね。人口密度の高さと人権をどうやって両立させるのか。一部の人はMaaSがその問題を解決すると考えているのだろう。実際、地図街でも、ミニトと呼ばれる自動運転タクシーが走り回っているし、外へは一般の交通網が走り、高速道路は自動で隊列走行するトレーラーが物流を支えているという設定になっている。しかし、これには問題がある。まず鉄道網は誰が保線をするのかということになる。いくら路線が減っているとは言え、幹線クラスは維持されているだろうし、それらの保線はどうなっているのか。もちろん省力化軌道を用いるというのはあるだろうけど、しかしそれだけでうまくいくとも思えない。高速道路も同じだ。道路を保守するのは結局はヒトであるはずだ。ロボット化、自動化がどこまで行えるのかと言われると、かなり疑問がある。まあそういうこともあって自分の考えに疑問が出てきてしまったのも地図街の進捗が止まっている理由でもあります。ほんとすみませんまじで。</description>
    </item>
    
    <item>
      <title>TeXLive 2018とWindows 10 2018 October Update</title>
      <link>https://squeuei.github.io/post/2019-04-28/texlive-2018%E3%81%A8windows-10-2018-october-update/</link>
      <pubDate>Sun, 28 Apr 2019 23:26:05 +0900</pubDate>
      
      <guid>https://squeuei.github.io/post/2019-04-28/texlive-2018%E3%81%A8windows-10-2018-october-update/</guid>
      <description>Problem and Solution Windows 10 2018 October Update (1809)から、フォントのインストール先が%USERPROFILE%/AppData/Local/Microsoft/Windows/Fonts/に変更された。より正確に言えば、フォントインストールのデフォルトがシステムワイドからユーザ固有のものへと変更された。たとえエクスプローラ上からC:/Windows/Fonts/にフォントファイルをコピーしたとしても、ユーザフォルダにコピーされる。各フォントファイルがどのフォルダに格納されているかはC:/Windows/Fonts/にある各ファイルのプロパティから確認できる。
その影響を受け、TeXLiveがユーザフォントを見つけられない事態が生じる。このfont not found問題を解決するためには、フォントをインストールする際に右クリックメニューからすべてのユーザに対してインストールを選択する。この操作によって、フォントは従来どおりC:/Windows/Fonts/へインストールされる。あるいはTeXの設定を変更し、ユーザフォントフォルダを検索対象とすることも可能であろうが、私はTeX素人なのでそのやり方がわからない。謝辞のtweetのやり方の意味がわかる人にはできると思われる。
Acknowledgements and References https://twitter.com/nullrefex/status/1087733639213924353
https://gist.github.com/squeuei/ac8d9b5178e49469003e74539e7c5fb4</description>
    </item>
    
    <item>
      <title>サーバ導入以前にまつわるあれこれ</title>
      <link>https://squeuei.github.io/post/2019-04-22/%E3%82%B5%E3%83%BC%E3%83%90%E5%B0%8E%E5%85%A5%E4%BB%A5%E5%89%8D%E3%81%AB%E3%81%BE%E3%81%A4%E3%82%8F%E3%82%8B%E3%81%82%E3%82%8C%E3%81%93%E3%82%8C/</link>
      <pubDate>Mon, 22 Apr 2019 21:35:49 +0900</pubDate>
      
      <guid>https://squeuei.github.io/post/2019-04-22/%E3%82%B5%E3%83%BC%E3%83%90%E5%B0%8E%E5%85%A5%E4%BB%A5%E5%89%8D%E3%81%AB%E3%81%BE%E3%81%A4%E3%82%8F%E3%82%8B%E3%81%82%E3%82%8C%E3%81%93%E3%82%8C/</guid>
      <description>自宅サーバ、それは永遠の憧れ。
今までのあらすじ 既報の通り、Dropboxの無料プランは同期する端末を3台までに制限した。これは大きな問題である。我が家にはPCが複数台存在し、さらにタブレットとスマートフォンを加えればあっという間に3台など超過してしまう。急いでストレージ方策を検討しなければ！
――と思っていたところ、ソースネクストがDropbox Plus 3年版の販売を再開した。これは、Dropbox公式から契約するよりも安価に契約することが可能なバウチャーである。ここ数ヶ月はずっと売り切れで、購入する機会を逃した私が悔しく思っていたものだ。マネタイズが苦しいということは3年持たないのでは？　というリスクが脳裏をよぎりつつも、これを逃す手はない！　と私は即座に購入。ストレージ問題はこれにて解決した。
のであるが。
問題は自宅にも何らかのサーバが欲しくなってしまったという点にある。
もともとの計画では、SynologyのIntel CPU搭載NASを購入する計画であった。この製品は高機能なため、単体で仮想マシンを動作させることが可能なのだ！　仮想マシンで何をするって？　わからん！　でもなんかかっこいいじゃん！！
じゃあサーバ何買うのよ HP Enterprise ProLiant Microserver Gen 10 世間一般的にも、TLでも評価の高いサーバ。昔流行ったキューブ型PCにも似たスタイルにHDDが4本搭載可能。コストはそこそこかかるけど、ECCメモリのちゃんとしたサーバが手に入ると考えれば悪くない。問題は、HPEのポリシー上、保守契約を結ばなければドライバ等のアップデートができないことにある。さすがにこれはきつい。そこまでして動かすようなマシンではないはずなのだ。
FUJITSU PRIMERGY T1310 M3 各種通販サイトにてかつてのNEC Express5800サーバの位置にあるサーバ。安い。とにかく安い。なんてったってNASを買うより安い。CPU次第だけど一番安いモデルでは2万円を切るのだ。騒音もそんなに大きくないらしい。けど、デスクトップ然としたケースは私の用途に対して大きくて大げさな気がしてくる。
とまで考えたところでそもそもの話として 自宅でサーバを立てていったい何をするんですか、ということを考えなければならない。
私はラップトップにLinuxを入れて日常的に使っているので、その点で目新しさはない。もちろんサーバとしての運用はしていないわけだから、その点で学びはあるだろう。というか公開サーバを作るのが怖い。 ストレージサーバも、ストレージ自体はすでにDropboxで実現できてる。オンプレミスでNextcloudを立てればプライバシー万全ですよという話くらいで、セキュリティに関しては自分で管理しなければならない分逆に不安。
そもそも現状部屋の配置から言ってサーバは枕元に設置しなければならず、この距離だとハードディスクが回っているだけでも真夜中には気になってしまう。
まずはRPi2Bで様子を見つつ、最大でもNUCあたりを導入する、という方針で行こうかねという結論に至った次第。</description>
    </item>
    
    <item>
      <title>Got Me Lost / Driving In L.A. </title>
      <link>https://squeuei.github.io/post/2019-04-07/got-me-lost-/-driving-in-l.a./</link>
      <pubDate>Sun, 07 Apr 2019 23:10:31 +0900</pubDate>
      
      <guid>https://squeuei.github.io/post/2019-04-07/got-me-lost-/-driving-in-l.a./</guid>
      <description>https://www.youtube.com/watch?v=w-J6DRsZE70
tl;dr たまにはエモいことが書きたいときもあるんですよ。
はじめに 新たに労働市場へ投げ込まれたみなさんへ。なるべく高速道路や抜け道を作ったり覚えておいたりするので、どうかみなさまは私と同じ過ちを繰り返すことのないよう、この知識でみなさまの物事がうまく運びますよう、祈っております。
いきなり何 最近は、社内で海賊――とまではいかないか、密漁者くらい？――になるべく、配布する武器を考えている。ここで言う海賊というのは「海軍に入るより海賊であれ」という言葉を意識していて、Steve Jobs のことはよくわからないけどこの言葉はけっこう意識してる。“It&amp;rsquo;s more fun to be a pirate than to join the Navy.”
別にこれはヘイシャのウリアゲにコウケン！！　みたいな話ではあまりなくて、どちらかといえば__非効率な機械は嫌いだという理由で博物館のSLを爆破した__（らしい）深井零少尉の気持ちに近い。まあ今どきの若者の皆様方はとても優秀なので英語も数学も物理も化学もバッチリで、機械電気情報制御計測 Matlab/Simulink LabVIEW Python C C++ マルチメータ オシロスコープなんでも使えるくらいの認識でいます。なので、そういう彼らの能力をスポイルしてフリーホイールしてしまうようなことだけはどうしても避けたいなと思う所存。馬鹿げた制約のせいでスローダウンするの本当に馬鹿げてる。
The End Where We Start https://www.youtube.com/watch?v=L7gqlB0FW8k
今の私がいる場所は、個々人の能力や人間性が劣悪というわけではない、と思う。しかしながら、少なくとも組織としてうまく回っているとは到底言い難い。
マネジメントが現実を見ていないという人もいるけれど、それ以上にしくみが破綻していると感じている。種を蒔き、育った果実を刈り取るというモデルであればそもそも種蒔きをしていないのに果実が実るはずがない。ベンチャー的に既存技術を組み合わせたワンアイディアで勝負するならば、深い洞察と徹底したマーケティングなしにそんなことができるはずがない。
固有技術と呼べるようなものも新しい飯の種になるような技術の研究や開発もなく（でもマネジメントはそれがあると――少なくともあるかのように――振る舞っている！）、明確なマーケティング、ターゲティング、要件定義、仕様策定、ドキュメンテーションもなしに、誰にでもできるありものの組み合わせとそして何より__過去の経緯を踏襲__の御旗のもとで走り出して、何度もつまずきながら、出来上がるのは歪な形。それでも__過去の経緯と遺産__のおかげで生きながらえている。
そんなのは　いやだ！
突然の自分語り とはいえ私に何かができるというものでもなくて、むしろ自分の手を汚していないから具体的なことを何も言えない。抽象的な批判ばかりが得意だ。だから上の文章も偉そうなことを言っておきながらお前が言うかという話でしかない。
口先から生まれた口先だけ太郎らしくこいつはできるヤツだというふんいきを偽装できるらしいことがわかってきたけど、その実概論しか知らない必要で実用的で具体的な知識経験が全然なくてまったくもって使えない具体性ゼロ人間なので人を欺いていることに申し訳なさがあるし失望されるのが怖い。私はニセモノ。
有能でも優秀でも実用的でもないし少なくとも実態ベースでは意識高くも勤勉でもないんだけど、有能で優秀で実用的なわかってる人々のことをすごいなあと思うし彼らに失望されたくないしそれ故に彼らの意識高い発言を肯定しがちという機構がある。もっとも、実態は伴わないし言葉は右から左へと流れていくのだけど。つまりただの反動。
おわりに ままならねーっす！
P.S. 大学生だか働き出した後だかに、並行して高校に通っていて、みんなが真面目に受験（何の？　博士課程？）の勉強してるのに私は講義に出席しないレベルでサボっててたしかに今働いてるんだからそれでいいじゃんと思いながらも自分はだめなやつだ、自分の今の身分がわからなくなってしまう、と思う夢をよく見る。現実世界で何者でもないという事実の表れなんでしょうね。</description>
    </item>
    
    <item>
      <title>ヘッドフォンアンプつくった</title>
      <link>https://squeuei.github.io/post/2019-03-24/%E3%83%98%E3%83%83%E3%83%89%E3%83%95%E3%82%A9%E3%83%B3%E3%82%A2%E3%83%B3%E3%83%97%E3%81%A4%E3%81%8F%E3%81%A3%E3%81%9F/</link>
      <pubDate>Sun, 24 Mar 2019 22:07:23 +0900</pubDate>
      
      <guid>https://squeuei.github.io/post/2019-03-24/%E3%83%98%E3%83%83%E3%83%89%E3%83%95%E3%82%A9%E3%83%B3%E3%82%A2%E3%83%B3%E3%83%97%E3%81%A4%E3%81%8F%E3%81%A3%E3%81%9F/</guid>
      <description>我が家には電子工作グッズが多少あるのですが、全然活用できていません。 これではいかんと、まずは手慣らしに秋月のヘッドフォンアンプキットを組んでみました。
http://akizukidenshi.com/catalog/g/gK-12309/
回路図を見ればすぐ理解できる程度の、オペアンプをつかった単電源の交流結合非反転増幅回路です。教科書通りといった感じ。 十年くらい前にChu Moyアンプが流行りましたが、あちらとは仮想GNDの使い方が違います。だから向こうは直流結合ですね。
というわけでサッと組み立て。白光 FX-600のちからがあればなんのその。一時間くらいで終わったはず。スルーホール実装の基板なんて全然簡単ですね。私の仕上がりはひどいものでしたが……。
https://www.amazon.co.jp/dp/B006MQD7M4/
さて、せっかく測定器がありますので特性を測ってみましょう。
Analog Discovery 2 のネットワークアナライザ機能をつかって周波数特性を見ます。
http://akizukidenshi.com/catalog/g/gM-10135/
筆記用具もMS Excelもなし、完全な手放しでこれができるのはとても便利ですね。
増幅回路のゲインは(1+47k/10k)=5.7、20 log (5.7)はだいたい 15.1 [dB]なので、まさしく教科書通りの結果が得られているということになりますね。いわゆるオーディオ帯域ではゲインも位相もフラットという、まあそりゃそうでしょうという結果。
さて、アンプとしてはというと、ちゃんと音がでます。それ以上の感想がない……。いや、音量はでてるなーと思いますが、普段がUSBオーディオインタフェース経由で聞いてるのであんまり差を実感できないという。実用上は可変抵抗が左右独立なのが扱いづらいですね。ポータブルするなら9V電池を使うのが楽そうですが、ケーシングはどうするのがいいんでしょうね。
はい、というわけで、一応は動作するものは出来上がりましたが、これでも技術的な事柄でお金を頂いている身の上ですので、この出来は流石にまずい。もっと手を動かして学びを得なければならないと痛感した次第です。</description>
    </item>
    
    <item>
      <title>オープンソースハードウェアの持続可能性について</title>
      <link>https://squeuei.github.io/post/2019-03-08/%E3%82%AA%E3%83%BC%E3%83%97%E3%83%B3%E3%82%BD%E3%83%BC%E3%82%B9%E3%83%8F%E3%83%BC%E3%83%89%E3%82%A6%E3%82%A7%E3%82%A2%E3%81%AE%E6%8C%81%E7%B6%9A%E5%8F%AF%E8%83%BD%E6%80%A7%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6/</link>
      <pubDate>Fri, 08 Mar 2019 20:30:37 +0900</pubDate>
      
      <guid>https://squeuei.github.io/post/2019-03-08/%E3%82%AA%E3%83%BC%E3%83%97%E3%83%B3%E3%82%BD%E3%83%BC%E3%82%B9%E3%83%8F%E3%83%BC%E3%83%89%E3%82%A6%E3%82%A7%E3%82%A2%E3%81%AE%E6%8C%81%E7%B6%9A%E5%8F%AF%E8%83%BD%E6%80%A7%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6/</guid>
      <description>tl;dr ルールとライセンスとモラルとお気持ち忖度を守ってみんなでなかよくオープンソースハードウェアしましょう。
Disclaimer 私は法律の専門家ではなく、本稿は法的助言ではない。求む、リーガルアドバイス！！！
Preface オープンソースのハードウェアというものが存在する。その名が示す通り、設計ファイルがオープンなライセンスで公開されているハードウェアだ。有名な例としてはArduinoやBeaglebone Blackなどが挙げられる。
今挙げた二つの製品は、共にCC BY-SA（クリエイティブコモンズ 表示 - 継承）の下で公開されている。しかしながら、オープンソースハードウェアに対してCC BY-SAを適用するのは不適切、具体的に言うと派生物に加えられた変更が広く共有されない恐れがあるのではないか、という疑問がある。本稿ではその疑問点について述べる。
Arduino まず、ArduinoのFAQにある文言を取り上げる。
 What do you mean by open-source hardware?
Open-source hardware shares much of the principles and approach of free and open-source software. In particular, we believe that people should be able to study our hardware to understand how it works, make changes to it, and share those changes. To facilitate this, we release all of the original design files (Eagle CAD) for the Arduino hardware.</description>
    </item>
    
    <item>
      <title>個人的欧文フォント選好</title>
      <link>https://squeuei.github.io/post/2019-02-24/%E5%80%8B%E4%BA%BA%E7%9A%84%E6%AC%A7%E6%96%87%E3%83%95%E3%82%A9%E3%83%B3%E3%83%88%E9%81%B8%E5%A5%BD/</link>
      <pubDate>Sun, 24 Feb 2019 21:58:32 +0900</pubDate>
      
      <guid>https://squeuei.github.io/post/2019-02-24/%E5%80%8B%E4%BA%BA%E7%9A%84%E6%AC%A7%E6%96%87%E3%83%95%E3%82%A9%E3%83%B3%E3%83%88%E9%81%B8%E5%A5%BD/</guid>
      <description>年初から始めた隔週刊ブログ、早くも書くネタが尽きてきました。
本来的にはふだんからネタを作るような生活をしよう、というモティベーションの下に始めたプロジェクトだったはずなのに……。
欧文フォント選び 同人活動をする予定はないのだけれど、もし自分がするなら、という前提で欧文フォントを選んでみる。
無料/自由/オープンソース 基本はURW++ Core 35かその派生のTeX Gyre、あるいはLibertinus/Linux Libertineで選ぶ。
URW++ Core 35はファウンダリが作った有名フォントだし、そもそもがPostScriptフォント向けなので定番はカバーできそう。
Libertineと同じプロジェクトがやっているSansのBiolinumはACMの論文なんかで採用されてる。 LibertineからforkしたLibertinusは今もアクティブに開発されているようなのでこっちを使うのもアリ。
具体的な選択としては、SerifはNimbus Roman(Times)、P052(Palatino)や、TeX Gyre Termes(Times) / Pagella(Palatino)、あるいはLinux Libertine / Libertinus Serif。 SansはNimbus Sans(Helvetica)、URW Gothic(Avant Garde Gothic)、TeX Gyre Heros(Helvetica) / Adventor(Avant Garde Gothic)、Linux Biolinum / Libertinus Sans (Optimaに雰囲気が似ている）。
SansにバリエーションがほしければFiraGoやOverpassなんかを織り交ぜると良さそう。 ほんとうはFrutigerやFuturaっぽいのがあるといいんだけど。
不自由で邪悪なプロプライエタリ 以前記事を書いたとおり、大手フォント配信サイトのライセンスは商用目的PDF埋め込みがカバーされていないので注意が必要。使うならラスタ化しないとだめ。つまり表紙デザインなどで使うのであれば問題は少ない。
本文で使いたい場合は以下の通り。
時々Designcutsがフォントのバンドルセールをやっているのでそれを狙う。ライセンス的に自由度が高いことを売りにしてるので心強い。ただしいいフォントがあるかどうかには疑問符。
最初から高品質なものが欲しい場合にはAdobe Fontsに課金するのが良いと思う。 Garamond、Caslon、Minion、Myriadあたりが狙い目か。AcuminやTRAJANも。 URW++のフォントもBodoniやBaskerville、Copperplateなど、さらに広い範囲でカバーされている。 ある程度揃えてしまうのであればAdobe Font Folioに手を出すというのもいいのかもしれない。
サブスクリプションが嫌という人にはFontspringでAdobeのフォントを買うという手もある。ここはWorry-free!と銘打って電子書籍でも使えるライセンスを打ち出してる。AdobeはWorry-freeで売ってるので問題なく使える。
References  https://github.com/URWTypeFoundry/Core_35 http://www.gust.org.pl/projects/e-foundry/tex-gyre http://libertine-fonts.org/ https://www.acm.org/publications/proceedings-template https://github.com/libertinus-fonts/libertinus https://bboxtype.com/typefaces/FiraGO https://overpassfont.org/ https://www.designcuts.com/ https://fonts.adobe.com/ https://www.fontspring.com/  </description>
    </item>
    
    <item>
      <title>Linux環境整備備忘録</title>
      <link>https://squeuei.github.io/post/2019-02-10/linux%E7%92%B0%E5%A2%83%E6%95%B4%E5%82%99%E5%82%99%E5%BF%98%E9%8C%B2/</link>
      <pubDate>Sun, 10 Feb 2019 21:00:00 +0900</pubDate>
      
      <guid>https://squeuei.github.io/post/2019-02-10/linux%E7%92%B0%E5%A2%83%E6%95%B4%E5%82%99%E5%82%99%E5%BF%98%E9%8C%B2/</guid>
      <description>Latitude E7270にDebianをインストールしたのでそのログ。
このPCにLinuxをインストールするのは二回目で、今回はLXQtを入れてみた。
インストール いつもどおりにUSBスティックにインストールメディアを用意して、今回はDesktop環境なしでインストール。
初期設定 sudo 最初のログイン後、端末で
$ su # apt install sudo vim # gpasswd -a hogefuga sudo  してsudoできるようにしておく。
一度ログアウトしてから作業スタート。
インフラ系 なにはともあれaptのソースを編集。
$ sudo apt vim /etc/apt/sources.list  私は邪道なので%s/main/main non-free contrib/gしてしまいます。stretch-backportsも入れる。stable-backportsみたいな指定ができたら良かったのにね。
$ sudo apt install network-manager network-manager-gnome task-lxqt-desktop tlp-rdw xsensors  このPCにはIntelのWi-Fiが入っているのでドライバをインストール。上でmainだけにしたときはこの手は使えないので自由人のためのWi-Fiドングルを使うかおとなしく有線接続してください。あとmicrocodeも。
$ sudo apt insatll firmware-iwlwifi intel-microcode  素のままだとトラックパッドのタップクリックが効かないし、LXQt上からは設定できないのでファイルを編集。
$ sudo mkdir /etc/X11/xorg.conf.d/ $ sudo vim /etc/X11/xorg.conf.d/30-touchpad.conf  30-touchpad.confの中身はこんな感じ。というかArchwikiのほぼまんまですねこれ。
Section &amp;quot;InputClass&amp;quot; Identifier &amp;quot;touchpad&amp;quot; Driver &amp;quot;libinput&amp;quot; MatchIsTouchpad &amp;quot;on&amp;quot; Option &amp;quot;Tapping&amp;quot; &amp;quot;on&amp;quot; Option &amp;quot;TappingButtonMap&amp;quot; &amp;quot;lrm&amp;quot; Option &amp;quot;NaturalScrolling&amp;quot; &amp;quot;true&amp;quot; Option &amp;quot;ClickMethod&amp;quot; &amp;quot;clickfinger&amp;quot; EndSection  NTPとかssh鍵とかもやっておく。NTP鯖はNICTに。</description>
    </item>
    
    <item>
      <title>businesslike</title>
      <link>https://squeuei.github.io/post/2019-01-26/businesslike/</link>
      <pubDate>Sat, 26 Jan 2019 20:00:00 +0900</pubDate>
      
      <guid>https://squeuei.github.io/post/2019-01-26/businesslike/</guid>
      <description>コンピュータと言われて、どんな機種を連想するだろうか。家電量販店の棚を埋める国産メーカー機、ラグジュアリーなMac、華の自作PC。私は、どうしてもビジネス向け上記機種に目がいってしまう。たとえば、DellのOptiPlex/Latitudeの7000シリーズ、HPのElitedesk/Elitebook、LenovoのThinkCentre/ThinkPad。Precision/Z Workstation/Thinkstationなどのワークステーションを含めることもあるだろう。これらの機種には
 オンサイト保守（設置場所までサービスマンが修理に来てくれる）を含めた充実した保証 RAMやストレージなど多くの主要パーツが交換可能な保守性 高い（ように見える）品質 キーボードでUS配列を選べる（こともある） バックライトキーボードを採用している機種も少なくない 特に国外のユーザによる情報が多い  といった魅力がある。
特に保守性はとても魅力的だ。オンサイト保守をつけられるということは、その場で修理ができるくらいに保守性がいいってこと。ラップトップでも、普通のドライバーセットさえあれば、少なくともSSD、もしかしたらRAMも簡単に交換できるものが多い。デスクトップなら超小型のものであっても下手をすればツールレスで内部にアクセスできる。ここらへんはほんと気持ちいい。
逆に、気をつけるべき点もいくつかあって、
 モニタがとんでもなくひどいものが結構ある。低解像度かつTNの狭視野角とか目も当てられない。フルHDのIPS以上のものしか選ばないようにしよう。 スピーカーは基本的に期待してはだめ。 軽い機種はあんまりないかも。X280とX1 Carbonくらい？ 12インチクラスだとキーボードの右側でキートップのサイズが不均等になっていることが多い。気になるならサイズを上げるかUS配列を検討しよう。 Thinkpad以外はスティックポインタがあったりなかったりするので好きな人はよく確かめて。 HPのノートPCはやや足が短めである気がする。持ち歩く人はACアダプター込みの重さで考えるべきかも。 HPの13インチ以上のノートPCはEnterの右に一列キーが並んでいる。気にするひとは注意（私は気にする）。  など。
購入経路は、メーカーの直販が一番素直。時々NTT-Xみたいな代理店系の通販サイトや、IOSYSみたいな店で新品未開封のアウトレットが出回るので、カスタマイズにこだわらないのであればこちらもおすすめ。
良質な計算機というと、MacbookやXPSシリーズが話題になりがちだけど、こういう選択肢もいかがでしょうか、という話でしたとさ。</description>
    </item>
    
    <item>
      <title>メモランダムにまつわるメモランダム</title>
      <link>https://squeuei.github.io/post/2019-01-12/%E3%83%A1%E3%83%A2%E3%83%A9%E3%83%B3%E3%83%80%E3%83%A0%E3%81%AB%E3%81%BE%E3%81%A4%E3%82%8F%E3%82%8B%E3%83%A1%E3%83%A2%E3%83%A9%E3%83%B3%E3%83%80%E3%83%A0/</link>
      <pubDate>Sat, 12 Jan 2019 22:26:24 +0900</pubDate>
      
      <guid>https://squeuei.github.io/post/2019-01-12/%E3%83%A1%E3%83%A2%E3%83%A9%E3%83%B3%E3%83%80%E3%83%A0%E3%81%AB%E3%81%BE%E3%81%A4%E3%82%8F%E3%82%8B%E3%83%A1%E3%83%A2%E3%83%A9%E3%83%B3%E3%83%80%E3%83%A0/</guid>
      <description>TL;DR  必要がなくてもどんな手帳でも使っていいんだよ…… いつでもどんな形態でも入力できて検索性も爆アゲな情報システムができてすべてを薙ぎ払ってほしい  （本記事ではマンスリー、ウィークリー、デイリーなどのスケジュール欄を持つノートのことを手帳として扱います）
あなたに必要なものは手帳ですか？ 書店や文房具店の手帳コーナーに群がる人々というのは毎年九月以降の風物詩となりつつあるが、実は手帳を必要とする人はそれほど多くないのではという気がしている。
手帳の特徴であるスケジュール欄は、__この日、この時、この場所で、これをする__という記載がしやすいことに利点がある。
一日の中で複数の打ち合わせをする、不定期で時間の決まったタスクのある人は、おそらくもっとも手帳を必要とする人で、移動や準備の時間まで含めてバーティカルで管理するのが似合いそう。
https://www.amazon.co.jp/dp/4800536707/
https://www.amazon.co.jp/dp/B07FSGFZCQ/
一日にするべきタスク、イベントが少ない人というのは、実はマンスリー手帳で十分なのでは？　https://www.amazon.co.jp/dp/480053447X/
その日にしたこと、いつかやらなきゃいけないこと、ならば普通のノートに
 2019-01-11 新しくできた食堂の日替わりランチがうまい。今日はムニエル。
2019-01-12 メモ：牛乳を買う
 のような形式で書くだけでも十分。
持ち歩きを重視するならダイヤメモのようなリング式のメモ、筆記面積を稼ぎたいなら測量野帳やA6ノートを使うのが便利であると私は考えている。もちろん組み合わせてもOK。
https://www.amazon.co.jp/dp/B019ICKTH4/
https://www.amazon.co.jp/dp/B00F27U1EQ/
ダイゴーのすぐメモ、ジェットエースシリーズであれば鉛筆までついてきてこれだけですぐメモが取れる。
https://www.amazon.co.jp/dp/B00777SB3W/
マンスリー手帳とノートを一緒に持ち歩きたくなければこういうのもあるけど、ノートを使い切ってしまったときにどうするかというリスクもあるので一長一短。
https://www.amazon.co.jp/dp/4800534607/
一つのノートに複数のテーマを書く時 これはBulletjournalのマネです。
ノートの全ページにページ番号を振って、一番最初のもくじページと、各本文ページのなかでの双方向リンクトリストを組み合わせる。
たとえばこんな感じ。
もくじページ
 もくじ 01 引き継ぎメモ
02 セミナー 受講ノート
（中略）
08 TODOリスト(1)
（中略）
16 TODOリスト(2)
（中略）
19 TODOリスト(3)
 本文ページ
 TODOリスト(2) p. 08 &amp;lt;- -&amp;gt; p. 19
 牛乳を買う 炭酸水を買う 郵便を投函  （中略）
p. 16
 これが私の中での現時点におけるベストプラクティスだけど、あまり筋が良いとは言えない。</description>
    </item>
    
    <item>
      <title>Best Buy 2018</title>
      <link>https://squeuei.github.io/post/2018-12-29/best-buy-2018/</link>
      <pubDate>Sat, 29 Dec 2018 23:01:11 +0900</pubDate>
      
      <guid>https://squeuei.github.io/post/2018-12-29/best-buy-2018/</guid>
      <description>Panasonic ER-GK60-W
http://kakaku.com/item/K0000953959/
TLで見てつられて購入。体毛がないのってなんかいいですね。
  ルミナス レギュラー スチールラック
https://www.luminous-club.com/products/detail/product_3268/
知人からの推薦。頑丈そうでよいけど、その分重すぎる気もする。
  Amazon Kindle Oasis
https://www.amazon.co.jp/dp/B06XDFJJRS
Kindle Paperwhiteの画面に傷がついてしまったので購入。
SoCがデュアルコアになったので動作は機敏だし、ページめくりボタンがあることも便利だけど、値段分の効用があるとは、積極的には言えない。ただバックライト付きE-Ink Kindle端末全般はおすすめ。
  PFU Happy Hacking Keyboard Professional2 Type-S
http://kakaku.com/item/K0001051191/
身体に触れるものへの投資(1)。キーボード何台買うんですか！
アクサングラーヴが右上に来るのが気に入らなくて手を出しあぐねていたのだけど、SUNのキーボードに由来するレイアウトだということを知り、その歴史に納得して購入。権威や伝統に対してよわよわなので……。
小さいフットプリントは魅力的だけど、日本語入力切り替えとカーソルキーは未だに慣れない。
  Kokuyo Delphi 2 SD-DJ127S81M10
https://www.kagg.jp/office-desks/kokuyo/212253/759202
身体に触れるものへの投資(2)。奥行700mm以上ある机が欲しくて購入。引っ越しも考慮して平机は回避したけど、結局引っ越しのときにバラせるのかどうかは不明。
安机みたいにぐらつくこともないし、快適。部屋に余裕さえあれば幅を1400mmにしてもよかったのかもしれない。奥行きがある机は本当に快適なのでおすすめ。
  Nikon AF-S Nikkor 35mm f/1.8G ED
http://kakaku.com/item/K0000610338/
DXフォーマットのカメラでは約50mmになる単焦点レンズ。
買ったばっかりなので正直言ってまだ付き合い方がよくわかってない。
  Yamaha RTX830
http://kakaku.com/item/K0001010343/
自宅の環境をIPv6 IPoE化するために購入。嘘をつきました。こんな高級なルータを買わずともIPv6 IPoEは使えます。
とはいえ、かつて中古購入したRTX1200と同様、安定感があり、良い。
  Okamura Sylphy C685XZ-FMP
https://www.kagg.jp/office-chairs/okamura/11564/67497</description>
    </item>
    
    <item>
      <title>自由人のためのWi-Fiドングル</title>
      <link>https://squeuei.github.io/post/2018-10-20/%E8%87%AA%E7%94%B1%E4%BA%BA%E3%81%AE%E3%81%9F%E3%82%81%E3%81%AEwi-fi%E3%83%89%E3%83%B3%E3%82%B0%E3%83%AB/</link>
      <pubDate>Sat, 20 Oct 2018 20:36:13 +0900</pubDate>
      
      <guid>https://squeuei.github.io/post/2018-10-20/%E8%87%AA%E7%94%B1%E4%BA%BA%E3%81%AE%E3%81%9F%E3%82%81%E3%81%AEwi-fi%E3%83%89%E3%83%B3%E3%82%B0%E3%83%AB/</guid>
      <description>はじめに Atheros AR9271を用いたUSB Wi-Fiドングルは自由なドライバで動作させることができる。 自由とプライバシーを尊重する人々にとって有用だと信じて、以下のリストを公開する。 同時に、LEGO Mindstorm EV3をワイヤレスネットワークへと接続する場合にも役立てられるかもしれない。
Atheros AR9271を用いたWi-FIドングル（の一部） 標準サイズドングル  TP-Link TL-WN722N Netgear WNA1100 Tehnoetic TET-N150HGA （FSF-approved!）  日本国内で使用可能な標準サイズドングル  Roland / Netgear WNA1100-RL (楽器用、生産終了)  ミニサイズドングル  ThinkPenguin TPE-N150USB （FSF-approved!） Tehnoetic TET-N150 （FSF-approved!）  日本国内で使用可能なミニサイズドングル  Onkyo UWF-1 （ネットワークオーディオ用） Sony IFU-WLM3 （データプロジェクター用）  備考  Roland WNA1100-RLのハードウェアは北米/カナダ市場で販売されているNetgear WNA1100と同一だと思われるが、WNA1100-RLには技適マークが掲げられた日本向け仕様のラベルが貼られている。 TPE-N150USBはUWF-1やIFU-WLM3と同じメーカ製で、名称も類似している。  余談 技適を取得したデバイスでWNA1100という名前のものが見当たらない。 このビデオから204-280001がWNA1100-RLの技適番号であるように見えるが、204-2から始まるNetgearまたはRolandの登録は存在しない……。 謎。
参考文献 Atheros AR9271 - WikiDevi</description>
    </item>
    
    <item>
      <title>あるいは武器でいっぱいの箱</title>
      <link>https://squeuei.github.io/post/2018-05-18/%E3%81%82%E3%82%8B%E3%81%84%E3%81%AF%E6%AD%A6%E5%99%A8%E3%81%A7%E3%81%84%E3%81%A3%E3%81%B1%E3%81%84%E3%81%AE%E7%AE%B1/</link>
      <pubDate>Fri, 18 May 2018 19:00:00 +0900</pubDate>
      
      <guid>https://squeuei.github.io/post/2018-05-18/%E3%81%82%E3%82%8B%E3%81%84%E3%81%AF%E6%AD%A6%E5%99%A8%E3%81%A7%E3%81%84%E3%81%A3%E3%81%B1%E3%81%84%E3%81%AE%E7%AE%B1/</guid>
      <description>(Update 2020-07-08)
はじめに 工具はMakerの武器。
こんにちは、ぬるくてにわかな電子工作エアプガチ勢です。今日は私の妄想ツールボックスを紹介します。妄想なので全部持ってるわけじゃないです。
あくまで私が持っている/手に入れたい工具の紹介なので、プロの選択みたいなの読みたい人は専門の方の記事を参照のほど。
一般論 アマゾンで買い物をするとき、基本的にはAmazon.co.jpが販売している商品の中から選ぶこと 。失敗するリスクが下がる。工具や測定器は信頼できるものをそろえた方がいいので特に。
ただし、この記事で言えば、USBasp、部品マルチテスタ、安ロジアナなんかは、中国製のコピー製品、_ジェネリック_製品が便利に使える。Pro MicroやBlue Pill (STM32F103C8T6搭載のマイコンボード)なども似た状況だ。
https://ht-deko.com/arduino/promicro.html
https://www.aitendo.com/product/12196
https://ht-deko.com/arduino/stm32f103c8t6.html
https://www.aitendo.com/product/13348
サクラチェッカーを片手に立ち向かうのもいいだろう。 ただし、Arduinoの基板などは、USB-シリアル変換ICなどが公式から変更されていて、そのせいでうまく動かないなどあるので、基本的には公式か、SainSmartあたりから買うのがよさそう。
どちらにせよ、安さには理由があり、基本的には純正品が確保している何らかのマージンを削っている、みんながみんなブランドで殿様商売できるほどうまい世の中じゃない、ということを意識したい。 その上で、自分の技量に基づいて、どこまで自分で問題に対応できるか、リスクを許容できるか、マージンを削って安価に仕上げるか、という戦いに挑んでいこう。 我々はアマチュアなので。
工具 雑に使う安物が別にあるとよいが、やはりそれなりの品質があるものを揃えると作業が気持ちいい、ような気がする。
スクリュードライバはPB SWISS TOOLSだ、いやWERAだ。ニッパはフジ矢がいい、いやケイバだ、とか、諸説ある。とりあえずホーザンというのもアリだと思う。
https://www.amazon.co.jp/dp/B002TKATOQ
個人的にはスクリュードライバはベッセル、はんだ関連は白光。ピンセットはガチ勢がたくさんいて怖いので言及しません。
ドライバ関連   https://www.amazon.co.jp/dp/B003BIAOKO
これでもいいんだけど、グリップが滑って空回りするので。
  https://www.amazon.co.jp/dp/B000TG8OTY
基本このメガドラシリーズで揃えている。検索性が悪い名前。
  https://www.amazon.co.jp/dp/B000CED25O
マイナスドライバをタガネ代わりにしてはダメなので、タガネ用に作られたドライバ（？？？）を使おう。
  他にも、時々ヘックスローブが必要になったりするので、スマートフォン修理用の特殊精密工具セットなどを持っておくと意外なほど役に立つ。
 https://www.amazon.co.jp/dp/B017W00U1Y  iFixit製品は高価だけどその分品質は良い、のだろうか。詳しくは知らない。少なくとも日本価格は割高。
はんだ関連   https://www.amazon.co.jp/dp/B006MQD7M4
  https://www.amazon.co.jp/dp/B000TGNWCS
  https://www.amazon.co.jp/dp/B000AQOEVU
  https://www.amazon.co.jp/dp/B004OCUO3I
健康のためにも。
  https://www.amazon.co.jp/dp/B07ZGLWRMX
ジェネリックてだすけ君。なんで今まで出てこなかったのか、知財的に大丈夫なのかとかいろいろ疑問はあるけど、まあgootだし大丈夫なのでしょう。ありがたみ。
  他にははんだ、フラックス、フラックスクリーナ、吸い取り線（ウィック）、吸取器、用途別のこて先などを適宜揃えていきましょう。</description>
    </item>
    
    <item>
      <title>Crypkoのいる生活</title>
      <link>https://squeuei.github.io/post/2018-05-04/crypko%E3%81%AE%E3%81%84%E3%82%8B%E7%94%9F%E6%B4%BB/</link>
      <pubDate>Fri, 04 May 2018 19:00:00 +0900</pubDate>
      
      <guid>https://squeuei.github.io/post/2018-05-04/crypko%E3%81%AE%E3%81%84%E3%82%8B%E7%94%9F%E6%B4%BB/</guid>
      <description>はじめに Crypkoを始めるにあたり、まあチュートリアルとFAQを読めば十分な情報が得られるんだけど、躓きそうなところは幾つかあるので補足説明を入れつつ紹介する感じの記事です。
https://crypko.ai/#/tutorial
https://crypko.ai/#/faqs
なにこれ？ （とても雑な要約） http://make.girls.moe/ とEthereum（暗号通貨）を合体してできたトレーディングカードみたいなもので、各Crypkoは一枚しか存在せず、それぞれが遺伝子のようなものを持ち、二枚のCrypkoを融合して元Crypkoの特徴をある程度引き継いだ新しいCrypkoを作れるやつ。
こういうのが生成されます。
https://s.crypko.ai/c/28281
現時点（2018-05-24）ではベータ版であり、Rinkebyテストネットイーサを利用している。つまり無料で入手でき、かつ無価値なトークンで遊べる。基本無料！
ちなみにホワイトペーパーいわくCrypkoのkoは子らしいです。
はじめかた 基本的には公式チュートリアルに従うのだけど、やや分かりづらいので解説を入れる。
1-2はこの動画を参考に。
https://www.youtube.com/watch?v=KKOz6D_kko8
5-8はこの動画を参考に。
https://www.youtube.com/watch?v=QB7w5cL4F8c
前提：PCからじゃないと無理です
 https://metamask.io/ からブラウザの拡張をインストールする ブラウザのmetamask拡張のアイコンをクリックして、規約合意とアカウント作成を行う 再びmetamask拡張のアイコンをクリックして、先程作ったアカウントでログインする metamask拡張メニュー左上のMain Networkと書かれた部分をクリックして、出てきたメニューからRinkeby Test Netを選択する metamask拡張メニュー右上の…をクリックして、copy address to clipboardを選択する TwitterかGoogle+かfacebookの公開アカウントにそのアドレスを投稿する その記事のURLをコピーする https://www.rinkeby.io/#faucet を開き、コピーしたURLを貼り付け、Give me Etherボタンを押し、3つの選択肢から選んでクリックする  下の選択肢を選べばもらえる金額が増えるが、その代わり次の受け取りまでの間隔が長くなる   https://crypko.ai/#/sign-up:embed でサインアップする metamaskのホップアップでsignを押す  あそびかた マーケットでCrypkoを買ったり、融合（fuse）させたりして遊びます。
マーケットは、その名に反して、売り出されていないものも含め、すべてのCrypkoが羅列されている。左上の販売リンクをクリックすることで、購入可能なCrypkoだけを表示できる。
Crypkoを選ぶ時に重要なのは、もちろん顔の良さと、それからもう一つ。右下に書かれているNやUR、SRなどのレアリティ。
冒頭で書いた通り、二枚のCrypkoを融合させて新しいCrypkoを作ることができる。 とはいえ、無制限に融合ができるわけではない。 主な制約に、類似度が高いCrypko同士は融合できないこと、融合の後にCooldownと呼ばれる融合ができない時間が存在する。
ここで、似たCrypkoが沢山存在するほど、つまりオリジンズ（親）やデリバティブス（子）が沢山いればいるほど、Cooldownは長くなる。 Cooldownの長さは、FAQで下記の通り書かれている。
  Ultra Rapid ( UR ): from 7 seconds to 15 seconds Specially Super Rapid ( SSR ): from 30 seconds to 1 minute Super Rapid ( SR ): from 2 minutes to 8 minutes Rapid ( R ): from 15 minutes to 1 hour Normal ( N ): from 2 hours to 1 day   ということで、レアリティの高いCrypkoを選ぶとより短い間隔で融合して遊べる。</description>
    </item>
    
    <item>
      <title>メロンブックスのDL配信同人誌を買う前に知っておきたかったこと</title>
      <link>https://squeuei.github.io/post/2018-04-19/%E3%83%A1%E3%83%AD%E3%83%B3%E3%83%96%E3%83%83%E3%82%AF%E3%82%B9%E3%81%AEdl%E9%85%8D%E4%BF%A1%E5%90%8C%E4%BA%BA%E8%AA%8C%E3%82%92%E8%B2%B7%E3%81%86%E5%89%8D%E3%81%AB%E7%9F%A5%E3%81%A3%E3%81%A6%E3%81%8A%E3%81%8D%E3%81%9F%E3%81%8B%E3%81%A3%E3%81%9F%E3%81%93%E3%81%A8/</link>
      <pubDate>Thu, 19 Apr 2018 19:00:00 +0900</pubDate>
      
      <guid>https://squeuei.github.io/post/2018-04-19/%E3%83%A1%E3%83%AD%E3%83%B3%E3%83%96%E3%83%83%E3%82%AF%E3%82%B9%E3%81%AEdl%E9%85%8D%E4%BF%A1%E5%90%8C%E4%BA%BA%E8%AA%8C%E3%82%92%E8%B2%B7%E3%81%86%E5%89%8D%E3%81%AB%E7%9F%A5%E3%81%A3%E3%81%A6%E3%81%8A%E3%81%8D%E3%81%9F%E3%81%8B%E3%81%A3%E3%81%9F%E3%81%93%E3%81%A8/</guid>
      <description>TL;DR メロンブックスにおける同人誌のDL配信には2つのストアと2つのワークフローが存在し、DRMの有無や画質の面で差異が存在する。
物理書籍からメロンブックスが代行登録した書籍はスキャンの画質に疑問があるが、購入前にそれに該当するか否かを判断する方法はない。
はじめに 昨今、同人誌の世界においても、ゆるやかにDL配信が普及しつつある。
本記事は、メロンブックスにおける同人誌のDL配信について、買い手の側から見た基礎的な情報を提供するものである。
客観的事実 2つのストア  メロンブックスDL  先にサービス開始 主にPDF、JPEGなどの形式で配信 DRMはサークルによる任意設定 書籍に限らず、ゲームや動画などのデータも販売   メロンブックス電子書籍  後発サービス 専用アプリでの閲覧 DRM必須（ただし専用アプリでDRMを解除した後はファイル形式関連付けのアプリで開く） 物理書籍ページからリンクあり     メロンブックスにおける書籍の配信では2つのストアが存在する 各ストアは独立しており、購入した書籍、ポイントの移行はできない 片方のストアのみに出品されている作品も存在する 双方とも購入後のキャンセルは不可  2つの入稿形態  サークルによる入稿  サークルが印刷用などのデータで入稿   メロンブックスによる代行登録  メロンブックスが物理同人誌を裁断、スキャンして登録を行う     販売ページからはサークルによる入稿と代行登録を判断できない  個人的なユーザ体験  代行登録されたと思われる書籍の品質が低い場合がある  TwitterやPixivにおける告知画像の方が好ましい場合さえある  天地や左右が切れている場合がある 裁断跡、ダスト、裏写り、モアレなどが存在する場合がある     解像度としては1500x2000程度が確保されており、電子化の形式として問題は少ないと考えられる  そもそも提供される商品の品質に関する仕様はファイル形式のみであり、書面上は何の問題もない   メロンブックスにおけるDL配信同人誌が全て低品質ということではない  同一サークルでもある作品はディジタル入稿であり、別の作品は代行登録という事例が存在する しかしながら、買い手側からそれらを判断する明示的な手段は存在しない   代行登録された書籍は決してマイノリティではない  メロンブックスDLにおける購入済み書籍は6サークル21冊 そのうち20冊はおそらく代行登録、スキャンされた書籍と推測される 誤判定やサンプリングの偏りはありうるのでご参考程度    憶測の域  メロンブックスはDLではなく電子書籍に誘導したい？  メロンブックスの物理書籍販売ページからメロンブックスDLへ直接の動線なし   ストアの継続性から見たDRMへの不安  リメンバー・とらのあなダウンロードストア（ http://www.</description>
    </item>
    
    <item>
      <title>Best Buy 2017</title>
      <link>https://squeuei.github.io/post/2017-12-30/best-buy-2017/</link>
      <pubDate>Sat, 30 Dec 2017 23:30:00 +0900</pubDate>
      
      <guid>https://squeuei.github.io/post/2017-12-30/best-buy-2017/</guid>
      <description>Microsoft Sculpt Ergonomic Keyboard
買ったのはUS配列。ちゃんと技適ついてるよ！
  Topre Realforce 104UB
こっちも買ってしまったので実はSculpt Ergonomicの出番がない。
  NEC EA275UHD
安く買える機会を狙って27インチUHDのディスプレイを導入。細かくて無理と思っていたドットバイドット表示にもいつの間にか慣れてしまった。このモデルに限らず4Kディスプレイはおすすめ。
  RME Babyface Pro
DTMもしないのにお高いオーディオインタフェースを買う奴。
音質は当然良い、と思いますが、はたして本当にそうと言えるのか、単なる味付けの差なのではないかという疑念は拭えないでいる。
  Apple iPad Pro 10.5 256GB Cellular + Apple Pencil + Smart Keyboard
Chromebookと覇権を争う軽量コンピューティング端末。みんなのための計算機。ふつうの人々に、フルスペックのOSなんていらなかったんや！
Chromebookと比較したときの利点は、筆圧や傾き検知のある高性能なスタイラスなどのプロ性じゃないかなと思う。本当にそうか？
  Dell Latitude E7270
ふつうに高性能なビジネス向けハイエンドラップトップ。Elitebook、Thinkpadと並べていちばんすき。
  HP Z240SFF Workstation
案外ふつうのデスクトップPCですね。それでも安定感作業性の良さはさすが。PCIe SSDはめっちゃ速いけど容量足りない気味。
  JBL FLIP4
風呂場で音楽を聞くのに購入。ふつうに良いですね。スピーカーのある生活。
  Sennheiser HD598Cs
長年使ってきたDJ1Proが壊れたので。普通の密閉型。
  Massdrop x AKG K7XX</description>
    </item>
    
    <item>
      <title>ことのはアムリラート</title>
      <link>https://squeuei.github.io/post/2017-12-26/%E3%81%93%E3%81%A8%E3%81%AE%E3%81%AF%E3%82%A2%E3%83%A0%E3%83%AA%E3%83%A9%E3%83%BC%E3%83%88/</link>
      <pubDate>Tue, 26 Dec 2017 21:30:00 +0900</pubDate>
      
      <guid>https://squeuei.github.io/post/2017-12-26/%E3%81%93%E3%81%A8%E3%81%AE%E3%81%AF%E3%82%A2%E3%83%A0%E3%83%AA%E3%83%A9%E3%83%BC%E3%83%88/</guid>
      <description>注意：PC版でプレイしたい人は2018-02-23発売の『ことのはアムリラート コンプリートブック』を待とう！
はじめに 華やかなクリスマスシーズン！
ということでPC版/Android版/iOS版で配信が開始されたばかりのゲーム『ことのはアムリラート』をプレイしました。
http://sukerasparo.com/
部屋で。
ひとりで。
十二月の末も末に。
はい。
どんなゲーム？ 端的に言えば全年齢向け百合ギャルゲーです。
このゲームを特徴づける要素として、会話の少なくない割合がユリアーモと呼ばれる言語によって交わされる、ということにあります。
以下公式サイトから引用。
 女子高生の“凜(リン)”は、
地元の商店街で買い食いをした直後、
周囲の空気が一変したことに驚く。
よく知るはずの場所なのに、
看板の文字は読めず、
人々が話す言葉も意味不明な空間へ様変わり。
状況が飲み込めない凜(リン)は、
途方に暮れて座り込んでしまう。
……と、そこへアイドル並に
カワイイ女の子――“ルカ”が現れ、
救いの手を差し伸べてくれたのだった。
自称ポジティブさが売りの女子高生“リン”と、
カタコトの日本語でサポートしてくれる“ルカ”。
これは、そんなふたりが
手探りの意思疎通(ことのは)で織りなす、
もどかしくも純粋な……女の子同士の物語。
 プレイ中の感想（体験版+公式サイト）  舞台が新杉田界隈だ  ストリートビューを見ると、実際の駅舎は結構見た目が違うけれど、商店街とかはかなり似てそう。   ものすごいフリフリの服を着た女の子が出てきたぞ。  こういう物語の登場人物にまでデフコンを上げる必要はない。   ユリアーモを聞いているとどうしてもスペイン語と認識してしまう。  エスペラント語の語彙はロマンス語由来が7割、ゲルマン語由来が2割程度なのだそう。なのでそれはもっともな話。 何もかも忘れてしまったはずなのに、未だ私のことを呪縛するのか第二外国語。 女性名詞男性名詞がない分単純だけど、各変化は同じくらいかそれ以上に複雑。規則性があるだけマシか……？ なーにが世界言語じゃヨーロッパだけが世界じゃないんだぞ。 脱線するけど、マイヤヒで有名なO-ZONEの曲に“Fiesta de la Noche”って曲があって、「響きからしてスペイン語っぽいけど何語なんだろ」と思い調べたところ、なんとルーマニア語！　あんなに東寄りなのにロマンス語なんですねえ。歴史的経緯だ。   辞書をくれ、辞書を。 日本語が存在する世界なのか。イージーモードでは？  自分が突然放り出されたらどういう場所が困るかを想像する。  英語、スペイン語と、あとたぶん中国語は、書かれてさえいればなんとなく誤読できるくらいではあるだろう。 ローマンアルファベットとして読めない言語、例えばロシア語とか、ギリシャ語とか、アラビア語、タイ語、韓国語あたりだと相当厳しいであろうことが予想される。     われわれは読者なので、物語を読み進める際に、文脈から何を言っているか類推できてしまうのですねえ。  逆に、そのリテラシーに未知の言語に対する障壁を下げる効果があるのも事実。   リン氏に対するルカ氏の感情～  道端でうずくまる見知らぬ女性を拾う 初対面の相手を家に上げる 会ってから一日経ってない相手と一緒に風呂に入る   目と目があった瞬間から相思相愛かよ。 ルカ氏、スペリングがLucaではないんだな。Lucaは男性名だけど。 はあ……長妻樹里さんの声……いい……。 公式ページにあるルカ氏の紹介、一つわからない単語がある。調べてもわからない。  まとめ 短めではありますが面白い作品になっていると思います。</description>
    </item>
    
    <item>
      <title>規約と活字</title>
      <link>https://squeuei.github.io/post/2017-11-16/%E8%A6%8F%E7%B4%84%E3%81%A8%E6%B4%BB%E5%AD%97/</link>
      <pubDate>Thu, 16 Nov 2017 19:30:09 +0900</pubDate>
      
      <guid>https://squeuei.github.io/post/2017-11-16/%E8%A6%8F%E7%B4%84%E3%81%A8%E6%B4%BB%E5%AD%97/</guid>
      <description>告知事項 私は法律家ではない/これは法的な助言ではない
tl;dr  myFontsやfonts.comで買ったり月額課金したりした欧文書体の大半は、フォントを埋め込んだPDFを商用利用することができない。 OSやOffice添付のフォントは個別フォントのEULAが公開されておらず曖昧にぼかされているけど、厳密に言えばおそらく駄目 TypeKitや一太郎プレミアム、Designcuts、TrueTypeフォントパーフェクトコレクション で買ったフォントはライセンス上安全。 SIL OFLでライセンスされたフォントもたぶん安全。 LaTeXのライセンスもきっとだいじょうぶ。  はじめに 過去に、入手しやすいフォントについての記事を書きましたが、フォントのライセンスに関する理解と記述が不足していたため、この記事を書きました。
が、告知事項の通り、私は知財法令どころか法律の素養もないため、この内容は無保証です。
ちゃんと調査するための足がかり程度にとらえていただければ幸いです。
問題に近づかない 問題の多くは
a. 商用利用 b. PDFへのフォントファイル埋め込み
によって生じます。ですので多くの場合は
a. 無償で配布する b. フォントファイルを埋め込まないラスタ化したデータを使用する、あるいはPDFで配布せず紙書籍のみで使用する
とすることによって、これらの問題は解決されます。具体的な例としては以下が挙げられます。
 PDFを無料配布する 表紙やロゴのみで使用する フォント埋め込みを用いないマンガで使用する 小説本を全てラスタライズした後で販売する 紙書籍だけで使う  つまりこの問題は小説等の文字を主とする書籍のPDFを対価を取って配布する場合に生じることが多い、ということです。
EULA比較     商用フォント 無償配布、ラスタ化 無償配布、PDF埋め込み 無償配布、ePub 有償配布、ラスタ化 有償配布、PDF埋め込み 有償配布、ePub      SIL OFL NO ○ ○ △ ○ ○ △ △：ライセンスの写しを添付すれば可   GPLフォント例外 NO ○ ○ ○ ○ ○ ○    Latex Project Pulic License NO ○？ ○？ ○？ ○？ ○？ ○？ 大丈夫という認識だが確証なし   GUST License NO ○？ ○？ ○？ ○？ ○？ ○？ 大丈夫という認識だが確証なし   Bitstream Vera Fonts License NO ○？ ○？ ○？ ○？ ○？ ○？ 大丈夫という認識だが確証なし、ライセンスの写し添付が必要？   IPAフォント NO ○ ○ △ ○ ○ △ △：ライセンスの写しを添付すれば可   GPL NO ○ △ △ ○ △ △ △：書籍をGPLでライセンスすれば可   一太郎 YES ○ ○ ○ ○ ○ ○ FAQで言及   TypeKit YES ○ ○ ○ ○ ○ ○ FAQで言及   TrueTypeフォントパーフェクトコレクション YES ○ ○ × ○ ○ × FAQで言及   Monotype(Desktop License) YES ○ ○ × ○ × × EULAで言及   OS標準搭載 YES ×？ ×？ ×？ ×？ ×？ ×？ ダメという認識だが確証なし    以下雑感</description>
    </item>
    
    <item>
      <title>Chromebook flip C100PAでArch Linux ARM (mainline kernel編)</title>
      <link>https://squeuei.github.io/post/2017-06-06/chromebook-flip-c100pa%E3%81%A7arch-linux-arm-mainline-kernel%E7%B7%A8/</link>
      <pubDate>Tue, 06 Jun 2017 17:40:48 +0900</pubDate>
      
      <guid>https://squeuei.github.io/post/2017-06-06/chromebook-flip-c100pa%E3%81%A7arch-linux-arm-mainline-kernel%E7%B7%A8/</guid>
      <description>目的 　約300ドル+税+送料で買える1 kgを切ったラップトップASUS Chromebook flip C100PAは、プレインストールされたChrome OSに加えcroutonやArch Linux ARMによってLinux環境を利用することができる。
　中でもArch Linux ARMは、Chrome OS上からchrootを用いるcroutonとは異なり、Chrome OSから完全に独立したLinux環境を構築できる利点を有している。しかしながら、かつてはメインラインカーネルにおけるハードウェアのサポートが不足しており、結局はChrome OSにて用いられているカーネルを利用する必要があった。
　そして現在、無数のコントリビューターの貢献によってメインラインカーネルでのサポートは充実したものとなり、Chrome OS のカーネルを使わずとも実用的になってきたと思われる。以上の経緯から、パワーアップしたCPUやUSB-C給電などを特徴とするASUS Chromebook flip C101がComputexにて展示された今、あえて一年前の記事をアップデートするものである。
インストール 　相変わらず親切な公式ガイドの通りにインストールすれば特に詰まるところはない。
　ちなみに、Wi-Fiにさえ接続してしまえば、Ctrl-Alt-→(=Ctrl-Alt-F2）で入れるコンソールからrootユーザでログインすることで、Googleアカウントを用意せずともGoogleの利用規約に同意することなくArch Linux ARMのダウンロードおよびインストールをすることができる。USBスティックなどで別途アーカイブを用意すればWi-Fiへの接続も不要である。
初期設定 　インストール後、新しいユーザを作る前に、rootでいる間にやったこと。
locale vi /etc/locale.gen # Uncomment: # en_US.UTF-8 # ja_JP.UTF-8 # locale-gen echo LANG=en_US.UTF-8 &amp;gt; /etc/locale.conf export LANG=en_US.UTF-8  hostname vi /etc/hostname  時刻 timedatectl set-timezone Asia/Tokyo  pacman初期化 https://archlinuxarm.org/forum/viewtopic.php?f=3&amp;amp;t=12797
pacman-key --init &amp;amp;&amp;amp; pacman-key --populate archlinuxarm pacman -Syu  ユーザ追加 # Root Password passwd # New User useradd -m -G wheel username passwd username pacman -S sudo visudo # Uncomment: # Defaults env_keep += &amp;quot;HOME&amp;quot; # %wheel ALL=(ALL) ALL #  　一般ユーザalarmは好みで消してよさそう。</description>
    </item>
    
    <item>
      <title>欧文フォントインパーフェクトコレクション</title>
      <link>https://squeuei.github.io/post/2017-05-17/%E6%AC%A7%E6%96%87%E3%83%95%E3%82%A9%E3%83%B3%E3%83%88%E3%82%A4%E3%83%B3%E3%83%91%E3%83%BC%E3%83%95%E3%82%A7%E3%82%AF%E3%83%88%E3%82%B3%E3%83%AC%E3%82%AF%E3%82%B7%E3%83%A7%E3%83%B3/</link>
      <pubDate>Wed, 17 May 2017 20:57:31 +0900</pubDate>
      
      <guid>https://squeuei.github.io/post/2017-05-17/%E6%AC%A7%E6%96%87%E3%83%95%E3%82%A9%E3%83%B3%E3%83%88%E3%82%A4%E3%83%B3%E3%83%91%E3%83%BC%E3%83%95%E3%82%A7%E3%82%AF%E3%83%88%E3%82%B3%E3%83%AC%E3%82%AF%E3%82%B7%E3%83%A7%E3%83%B3/</guid>
      <description>更新（2018-09-15） だいたいこれで用が足りるんじゃないかと思う。
https://gist.github.com/squeuei/e64cdcd2f17f659e3508bb0c20907b46
要するにTypeKitに入って『TrueTypeフォントパーフェクトコレクション』をどうにか手に入れれば商用PDFへの埋め込みだろうと大丈夫という話です。あとは足りないものがあったらFrutiger-&amp;gt;MyriadやFF Meta-&amp;gt;Fira Sansで雰囲気だけ真似したり。
macを買うこともかなりの問題を解決するけど、PDF埋め込みに関しては微妙な問題が残りそう。
この記事を参照のこと。
続きに元記事も残しておきます。
はじめに 　あればあったで嬉しいけれど、しかしプロでもない身分で、業務に使うわけでもない、1ファミリー揃えれば計算機が買えてしまうような値段の製品を購入する、その支出を正当化できるほどの用途があるわけでもないフォントたち。
　本稿は、欧文フォントに関し、それっぽい見た目のものを合法的、かつフリーまたは格安で入手する方法について述べるものです。必ずしもメトリック互換や同一の書体ではない旨、予めご承知おきください。
調査対象 PostScript 　PostScriptにはコアフォントが定義されており、PostScript Level 2では35フォント、PostScript 3では136フォントが挙げられています。
https://en.wikipedia.org/wiki/PostScript_fonts#Core_Font_Set
『少女と活字 プラチナ・コレクション』 　私がフォントに興味を持つきっかけになった素敵な同人誌です。
 16の有名な欧文書体たちを、女の子のイメージに投影しつつ解説した本。
 http://heikinritsu.com/portfolio/tad_pc/
https://www.youtube.com/watch?v=_MU9P5kab04
入手元 　元ネタはこれです。
https://wiki.archlinux.org/index.php/Metric-compatible_fonts
TrueTypeフォントパーフェクトコレクション [asin:4844333615:detail]
　買いましょう。わずか3000円強で問題の大部分は解決する……と思っていたら！！
@kei_monokoto こんにちは、「TTフォント〜」は、フォントの版権をもっていたBitstream社がMonotype社へ買収されたため、改訂版を出すことができなくなりました。在庫限りで絶版となりますので、よろしくお願いします。どうもありがとうございました。
&amp;mdash; 深沢英次 (@pictex) 2017年2月23日  　ｳﾜｰｯ!
　マジでか……超ショックだ……。
　既に丸善ジュンク堂では店頭在庫もないので、見つけたら極力確保しましょう。
TeX Gyre  TeX Gyre フォントは，Times や Helvetica などの Adobe 基本 35 書体に対応する，高品質でオープンなフォントです．PostScript Type 1 形式と OpenType 形式で配布されています．</description>
    </item>
    
    <item>
      <title>TeX Live 2016とLuaTeX-jaに関する備忘録</title>
      <link>https://squeuei.github.io/post/2017-04-20/tex-live-2016%E3%81%A8luatex-ja%E3%81%AB%E9%96%A2%E3%81%99%E3%82%8B%E5%82%99%E5%BF%98%E9%8C%B2/</link>
      <pubDate>Thu, 20 Apr 2017 18:26:00 +0900</pubDate>
      
      <guid>https://squeuei.github.io/post/2017-04-20/tex-live-2016%E3%81%A8luatex-ja%E3%81%AB%E9%96%A2%E3%81%99%E3%82%8B%E5%82%99%E5%BF%98%E9%8C%B2/</guid>
      <description>久しぶりにTeXの環境構築を行ったのでそのメモ。
W32TeXからTex Live 2016への移行 　前回はTeXインストーラ3で環境構築を行ったが、今回はTeX Live 2016を用いることにする。
　なお、Tex Live 2017が2017-05-01にリリース予定であり、そちらではLuaTeXが1.0になるようなので、急ぎでないならそちらを待ってからインストールするのがいいかもしれない。
　ここ からinstall-tl-windows.exeをダウンロードしてインストール。時間はかかるけど詰まるところはない。
LuaTeXでの日本語環境 　pTeXと同等（互換ではない）の環境を目指して、LuaTeX-ja環境が整備されつつある。
\usepackage{luatexja}  https://ja.osdn.net/projects/luatex-ja/wiki/LuaTeX-ja%E3%81%AE%E4%BD%BF%E3%81%84%E6%96%B9
　LuaTeXではjsclasses文書クラスは利用できないので、代替としてltjsclassesが利用できる。
　また、確認していないがBXjscls（https://texwiki.texjp.org/?BXjscls）も利用できるようだ。
　フォントについてはluatexja-fontspecを利用して、英文、和文のそれぞれについて指定できる。
\usepackage{luatexja-fontspec} \setmainfont[Ligatures=TeX]{TeXGyreTermes} \setsansfont[Ligatures=TeX]{TeXGyreHeros} \setmainjfont[BoldFont=IPAexGothic]{IPAexMincho} \setsansjfont{IPAexGothic}  　プリセットも用意されていて、latexja-presetから利用できる。
\usepackage[ipa]{luatexja-preset}  　ルビ、傍点はluatexja-rubyパッケージ。
\usepackage{luatexja-ruby}  LuaTeX-ja環境での縦書き 　縦書きの文書クラスとして、ltjtarticle.cls、ltjtreport.cls、ltjtbook.clsが利用できる。
http://fugenji.org/~thomas/diary/index.php?no=r1238
　ところでluatexja-presetでexpertオプションを設定してもダブルクオーテーションはダブルミニュートにならないのだけど、これはどうすればいいのだろうか。
PDF出力時の見開き方向 　Acrobat Readerで見開き表示をするときの綴じ方向を指定するためにはhyperrefパッケージを使う。
\usepackage[pdfdirection=R2L]{hyperref}  個人的な規約 　バックノウハウ感しかない。
------ %ダーシ \vspace{1em} %空行 % 上下余白調整 \usepackage[top=20truemm,bottom=10truemm]{geometry} % openright時用の綴じ側余白調整 \setlength{\oddsidemargin}{-1in} % set real left margin 0pt \setlength{\evensidemargin}{-1in} % do \addtolength{\oddsidemargin}{15mm} % odd page 25mm left margin \addtolength{\evensidemargin}{25mm}% even page 15mm left margin \noindent「行頭の括弧はnoindentで対処する」  『TrueTypeフォントパーフェクトコレクション』 https://www.</description>
    </item>
    
    <item>
      <title>Make: AVR Programming pt.04</title>
      <link>https://squeuei.github.io/post/2016-08-19/make-avr-programming-pt.04/</link>
      <pubDate>Fri, 19 Aug 2016 15:31:30 +0900</pubDate>
      
      <guid>https://squeuei.github.io/post/2016-08-19/make-avr-programming-pt.04/</guid>
      <description>前回
Chapter 10 タイマを使うときのチェックリスト  どのタイマを使うか決める。8bitでよければTimer 0か2、16bitが必要ならTimer 1。 どのモードが必要なのかを決める。TCCRnAのWGMn0とWGMn1、TCCRnBのWGMn2をセットする。 a. 数えたかったりタイミングを作りたいのならNormalモード（設定の必要なし） b. 時間の基準や周波数を作りたいのならCTCモードを使う。WGMn1をセットする。 c. PWMを使いたいならfast PWMモード。WGMn0とWGMn1をセットする。PWM周波数を変えなくてもいいならWGMn2もセットする。 直接出力するならTCCRnAのCOMxAとCOMxBをセットする。 分周を決めたらTCCRnBのCSnxビットをセットする。 比較する数値を使うならOCRnAやOCRnBにデフォルトの値を設定する。PWMを使うならDDRの出力設定も忘れないこと。 タイマで割り込みを使う？ a. Normalモードならカウンタオーバフロー割り込みを有効にするため、TIMSKnのTOIEnをセットする。 b. PWMやCTCモードなら比較での割り込みを有効にするため、TIMSKnのOCIEnAとOCIEnBをセットする。 c. sei()するのを忘れないように。  Chapter 11 　サーボのようなデバイスとAVRの電源はなるべく分けた方がいい。AVRの動作が不安定になる恐れがあるから。
Chapter 12 　高い電圧を高分解能で取得したいときは、分圧とオーバーサンプリングを使う。 また、AVRの場合はADC以外のクロックを停止することでノイズを低減するADCノイズリダクションスリープモードがあるので、活用すると良い。
オーバーサンプリング 　オーバーサンプリングは中心極限定理に基づいていて、たとえば10ビットADCで16個のサンプルを取得した後、4で割る（=2ビットシフトする）ことで12ビットの結果が得られる。 nビット余計に欲しいときは、$2^{2^n}$回のサンプリングと$2^n$回の割り算（=n回のビットシフト）が必要。
　オーバーサンプリングは、サンプリング周波数よりもゆっくり変化する信号に対して適用する。 速度、精度、コストはトリレンマだ。 16回のオーバーサンプリングは16倍遅くなるけど2ビット分の精度をただで手に入れられる。 高速で正確なADCが欲しいなら良いADCを買えばいいけど、それにはお金がかかるのだ。
0～5V以外の信号を計りたいときは  1V以下のものを計りたいときはAREFを内蔵の1.1Vリファレンス電源にすればよい。 1V～5Vのものを計りたいときはAREFを内蔵の1.1Vリファレンス電源にして、その上で信号を分圧すればよい。 5V以上のものを計りたいときは信号を分圧すればよい。  スリープ 　avr/sleep.hをインクルードして、set_sleep_mode(SLEED_MODE_ADC);（実はSMCR |= (1 &amp;lt;&amp;lt; SM0);するのと同じ）と、ADCSRA |= (1 &amp;lt;&amp;lt; ADIE);（ADC割り込み有効化）、sei()をすればよい。ただし、sleepが終わるときにISRが呼ばれるので、EMPTY_INTERRUPT(ADC_vect);なりしておく必要がある。
EWMA(Exponentially Weighted Moving Averages) 　ふつうの移動平均では移動平均する数だけメモリを消費する。 また、C言語の除算では切り捨ての問題があるから、なるべく除算の階数を減らしたい。 EWMAなら2つの変数、現在の値$x_t$と過去の平均値$y_{t-1}$だけでいい。</description>
    </item>
    
    <item>
      <title>Make: AVR Programming pt.03</title>
      <link>https://squeuei.github.io/post/2016-08-18/make-avr-programming-pt.03/</link>
      <pubDate>Thu, 18 Aug 2016 15:25:09 +0900</pubDate>
      
      <guid>https://squeuei.github.io/post/2016-08-18/make-avr-programming-pt.03/</guid>
      <description>前回
Chapter 8 　割り込みを扱うときはISR()を使う。厳密に言うところは関数じゃなくてマクロ。 引数として割り込みベクタを与える。割り込みベクタの定義はio.hに書いてある。
外部割り込み 　外部割り込みを有効化するときは、2段階ある事を忘れないようにする。
 使いたい割り込みベクタを有効化する 割り込みシステム全体をsei()で有効化する。  　普通は割り込みに入るときにglobal interrupt enableがオフになるので、割り込み中に更なる割り込みが発生することは無い。それを許可したい場合は、ISRのなかでsei()を呼ぶか、ISR_NOBLOCKでISRを定義するかのどっちかにする。
　割り込みを生じさせたくない場合はcli()を使ってglobal interrupt enableをオフにする。再開したいときはsei()を。
ピン変化割り込み 　Pin-Change InterruptではPxyPCINTxが対応する。ただしxはアルファベットと数字で対応してるのでややこしい。PByはPCINT0,PCyはPCINT1、PDyはPCINT2みたいに。 割り込みベクタは全部のピンで共通なので、ISRの中でどのピンからの割り込みなのかを判定して処理しないといけない。
 制御レジスタ(PCICR)で使いたい割り込みを有効化する。 使いたいピンをピンマスクレジスタで設定する。 global interrupt enableをsei()で有効化する。  　割り込みを受けるときは
 同じバンクの複数のピンからトリガを受ける場合にはbit_is_clear(BUTTON_IN, BUTTON)のようにどのピンからの割り込みなのかを調べる。 同じバンクに一つしかトリガを受けない場合には、立ち上がりと立ち下がりの両方に反応することに注意。どちらなのかを確認する必要がある。  ISRで変数を操作したいとき 　ISRは引数を取れないので、mainからもISRからもアクセスできるグローバル変数を宣言する。 ただし、その変数はvolataileを付けること。つけないと、一度もmain内で変更されない変数とみなされて、コンパイラが定数に変更してしまうことがある。 空のforループを回すときにも同じ事をする。
Chapter 9 タイマ 　タイマにはノーマルモードとCTCモードがある。 ノーマルモードではカウンタがオーバフローするまで動作する。タイマの種類にもよるが255あるいは65535。 CTCモードではOCRnAレジスタで指定した値までカウントする。 ATMega168の場合はTimer1が16bit、そのほかは8bit。現在のタイマーの値はTCNTxに格納されている。
　CTCモードの場合はTCCRxAレジスタでWGM01を設定する。また、outputモードにする場合はTCCRxAレジスタでCOMxA0を設定する。また、outputモードにする場合は Output Compare Resister OCRxAビットに
　どのモードにせよ、プリスケーラを設定しなければ、タイマは動作しない。CSx2、CSx1、CSx0の値を、データシートの表にしたがって設定する。
CPUスピード 　CPUスピードを変える方法には“ヒューズ”を書き換える方法と、ソースコードの中で設定する方法の2つがある。
　この本のサンプルコードに付属するMakefileではmake set_fast_fuseすることで8MHz動作に変更される。戻すときはmake set_default_fuses。
　そのほかにもAVRDUDEで設定変更ができるけど、例えばSPIEN-enable fuse bitを変更してしまうとSPIでのプログラミングができなくなったり（設定を戻すこともSPIではできない！）、CPUクロックソースを外部クロックに設定してしまったり（こっちはクロックや他のマイコンから1MHzの信号を印可してやればよいので、まだ対処しやすい）するので、注意が必要。</description>
    </item>
    
    <item>
      <title>Make: AVR Programming pt.02</title>
      <link>https://squeuei.github.io/post/2016-08-16/make-avr-programming-pt.02/</link>
      <pubDate>Tue, 16 Aug 2016 20:16:54 +0900</pubDate>
      
      <guid>https://squeuei.github.io/post/2016-08-16/make-avr-programming-pt.02/</guid>
      <description>　まだまだ続く。けど夏休み中に終わらせるのは無理っぽい。
前回
Chapter 6 　ボタンスイッチをマイコンのデジタルIOに接続する時は、プルアップ抵抗を使うこと。プルアップ抵抗はボタンがオープンの時にレベルを確実にハイにするために必要な抵抗。ただし、AVRの場合は全てのピンにプルアップ抵抗が組み込まれていて、設定で有効化できる。
　Chapter 2で言及したように、DDRxが0（入力）のとき、PORTxはプルアップの設定になる。
プッシュボタンを使うときのチェックリスト  DDRxレジスタを入力にする。 プルアップのために抵抗素子を使わない時は、PORTxで内蔵のプルアップを有効にする。 コードの中でボタンの電圧を読む。 ボタンが押されてる間に何かをしたいのか、ボタンが押されたときに何かをしたいのかをヨーク考える。 ボタンが押された時に何かをしたいのなら、デバウンシングすることを考える。たとえば一度押されたことを確認して、さらに一定時間後にも押されてたら、そのとき初めて何かを実行する、のような。  Chapter 7 LDRについて 　LDRを使う際、組み合わせる抵抗は
[tex:{\displaystyle \mathrm{R} =\sqrt{ \mathrm{R}_{\mathrm{LDR}\mathrm{bright}}\cdot\mathrm{R}_{\mathrm{LDR}\mathrm{dark}} } }]
で決定するのがよい。
ADCを使う時の注意 　アナログ回路設計のグッドプラクティスとしては、高速なスイッチングがあり、スパイクが乗るチップと、性格で安定した値が要求されるADCとで、独立した電源を供給するのが望ましい。特に、小信号や高周波信号を扱う時には重要となる。
 AVCCに給電した？　システムのVccからの差は0.3 V以内でなきゃダメ。 ADMUXのREFSxを設定した？　デフォルトではAREFの外部電圧を基準とする。AVCCを基準にしたいのならREFS0をセットしないといけない。 ADCのプレスケーラを設定した？　ADCにはクロック源が必要。 ADENを設定してADCを有効化した？ マルチプレクサで正しいchを選択した？　設定はbitじゃなくてbinaryだよ？ 最後に、ADCの値を別々に読むときはADCL（下位ビット）から読み込んでる？　10bit読むときはADCLを読み込んでからじゃないとADCH（上位ビット）は更新されないよ？  　上記の設定をしてから、ADCSRAのADSCを設定することで、ADCは変換を開始する。
　ADCSRAのADATEを有効にしてフリーランニングを使う時も、最初の一回はプログラマがADSCを設定しなきゃいけない。
　ADLAR=0のときはADCHの下位2ビットとADCLの8ビットがADCの出力となる。
　ADLAR=1のときはADCHの8ビットとADCLの上位2ビットがADCの出力となる。
　ADMUXでマルチプレクサを設定するときは、上位4ビットの値を保ったまま、下位4ビットを設定しなきゃいけない。 よくやるのはこんな感じ。
ADMUX = (0xf0 &amp;amp; ADMUX) | channel;  </description>
    </item>
    
    <item>
      <title>Make: AVR Programming pt.01</title>
      <link>https://squeuei.github.io/post/2016-08-15/make-avr-programming-pt.01/</link>
      <pubDate>Mon, 15 Aug 2016 00:18:34 +0900</pubDate>
      
      <guid>https://squeuei.github.io/post/2016-08-15/make-avr-programming-pt.01/</guid>
      <description>買ってから優に一年間放置していた“Make: AVR Programming”を夏休みに読んでしまおう計画。
前回
Chapter 1 　AVRISPmk2を入手しておいたのだけど、こいつは自分で+5Vを供給してくれないので、ACアダプタでブレッドボードに5Vを給電するとかしないといけない。かつ、私の環境ではavrdudeでうまくmake flashしてくれないので、Arduino ISPを活用することにする。ISP買った意味がない。
　システムやユーザの環境変数を通すのが嫌だったので、PATHを通すバッチファイルを書いて、そこから操作することにする。
PATH=%PATH%;foo\bar\avr8-gnu-toolchain\bin;hoge\fuga\avrdude_utilities; cd mado\homu\AVR-Programming  といった内容の.batファイル（ここでは安易にavr.batとした）を作成した後、エクスプローラから
C:\Windows\System32\cmd.exe /k &amp;quot;yui\azu\avr&amp;quot;  というショートカットを作る。フォルダやファイルの場所は各自修正のこと。ショートカットがリンクする先の最後にあるavrは.batファイルのファイル名にする。拡張子を付けないのが個人的にポイントだった。
　このショートカットを開けば、コンパイラとユーティリティへのPATHが通ったコマンドプロンプトが開く。
　サンプルコードを書き込む際には、Makefileで
PROGRAMMER_TYPE = avrisp PROGRAMMER_ARGS = -b 19200 -P com3  などとして、PATHが通ったコマンドプロンプトからmake flashする。
Chapter 2 　RAMに変数をつくることと、ピンへの書き込みやピンの入出力設定は同じインタフェース（代入）で行われるけど、これは実際に同じ事をレジスタに対して行っているから。そのレジスタの情報はio.hに格納されてる。
重要なハードウェアレジスタ   DDRx : data-direction registers port x
インプットかアウトプットかを決める。
  PORTx port x data registers
 アウトプットに設定したとき：high or lowを設定 インプットに設定したとき：pull-upするかどうか(chapter 6参照)を設定    PINx port x input pins address</description>
    </item>
    
    <item>
      <title>2016年度版、これが私の手帳の書き方</title>
      <link>https://squeuei.github.io/post/2016-06-11/2016%E5%B9%B4%E5%BA%A6%E7%89%88%E3%81%93%E3%82%8C%E3%81%8C%E7%A7%81%E3%81%AE%E6%89%8B%E5%B8%B3%E3%81%AE%E6%9B%B8%E3%81%8D%E6%96%B9/</link>
      <pubDate>Sat, 11 Jun 2016 15:32:00 +0900</pubDate>
      
      <guid>https://squeuei.github.io/post/2016-06-11/2016%E5%B9%B4%E5%BA%A6%E7%89%88%E3%81%93%E3%82%8C%E3%81%8C%E7%A7%81%E3%81%AE%E6%89%8B%E5%B8%B3%E3%81%AE%E6%9B%B8%E3%81%8D%E6%96%B9/</guid>
      <description>それは、考えなしになるための方法論。
イントロダクション 　手帳の使い方についていろいろ考えたのでまとめる。
覚えておくために書く 　まず何でもいいから、その日あったこと、考えたことを書く。何でも書く。ニュースに頼ってもいいから書く。
　放っておいたら何もかもを忘れてしまう。確かにあったはずのことなのに、思い出せないなんてことが許せると思える？　私には無理です。
　書くことは最もプリミティブな記録のひとつです。どんな悪文でどんなクソみたいな内容が書かれていても、それがいつかきっとあなたの財産になる（その価値はあなたの頭の中だけにしかないとしても）。 たとえば、レフト式の手帳を使うなら、左ページの余ったスペースにN行日記を書く、というのはいかがでしょう。
　本当は電子化したほうが、検索性の上で便利ですが、そこのところは私もどうしたらいいのかはかりかねているところです。
忘れるために書く 　覚えておきたいことを書いておくことは、思い出そうと思った時に思い出せる、ということに他ならなりません（実際にはどうインデックスを作っておくかが問題になるのですが）。
　逆に言えば、いつでも思い出せるなら、忘れてしまってもかまわない、ということでもあります。ある事項について、それを忘れてしまえば、そのことについて考えずにすみます。思考のリソースは有限なのです。
　六月最終週に新クールの録画予約するということを書いておき、定期的にその記述を確認しておけば、その日まで毎日覚え続けておく必要はないし、それまでに忘れてしまう確率も下がることでしょう。
　**思いついたやるべきことはすぐに書く。書いたものは定期的に見直す。**この合わせ技で、何かをし忘れるということはそれなりに減ります。サボりとかを除けば。
　どこでも最低限のメモを残せるように、小さなメモ帳を常に持ち歩くというのもよいでしょう。ダイヤメモとか、すぐメモとか、あるいは野帳とか。これらは、手帳がポケットに入らないくらい大きい、上着の中ポケットに手帳を入れると膨らんでかっこ悪い、などの場合に有利です。
考えなしになるために書く 　これは、やることを覚えておかなくてもいいようにしたら、次は「これから何をするべきか」を考えることすらしないようになりたい、という怠惰な発想に基づいた行動スキームです。
　まず、やるべきことのリストを整理します。これはwikipediaのGTD項を参考にしました。
foreach やるべきことのリスト: if 行動すべき？: if 所要時間 &amp;lt;= 2分: いますぐやる else if 達成にいくつもステップが必要？: “プロジェクト”リストへ追加 else if 自分がする必要がある？: 誰かに依頼する 依頼した内容を“連絡待ち”リストへ追加 else if やる日程が決まってる？: 日時を指定して手帳やカレンダーに追加 else: “次のアクション”リストへ追加 else: if いつかはやりたい？: “いつかする”リストへ追加 else if 記録しておく価値がある？: “資料”リストへ追加 else: 忘れる  　重要なのは、具体的で実行可能なステップに分解することです。
「これをするためにはどうすればいいんだろう？」と考えるようではダメです。何も考えること無く書いてあることに従えるようにするのが肝要です。</description>
    </item>
    
    <item>
      <title>chromebook flip C100PA でlinux環境づくり</title>
      <link>https://squeuei.github.io/post/2016-05-26/chromebook-flip-c100pa-%E3%81%A7linux%E7%92%B0%E5%A2%83%E3%81%A5%E3%81%8F%E3%82%8A/</link>
      <pubDate>Thu, 26 May 2016 19:40:28 +0900</pubDate>
      
      <guid>https://squeuei.github.io/post/2016-05-26/chromebook-flip-c100pa-%E3%81%A7linux%E7%92%B0%E5%A2%83%E3%81%A5%E3%81%8F%E3%82%8A/</guid>
      <description>amazon.comからchromebook flip C100PAのメモリ4GBモデルを購入したので、小型軽量ファンレスlinuxマシンとして使わんとする人々に有用と思われるTipsを以下に示す。
UPDATE 2017-06-06
mainline kernelを用いたArch Linux ARMの環境構築についてはこの記事を参照のこと。
各種テスト このあたり参考に。
 Ctrl-Alt-t でcroshを起動 memory_test、battery_testなどがある。  shortcut keys  Reset : Reflesh + 電源ボタン PgUp : Alt-up PgDn : Alt-down Home : Ctrl-Alt-up End : Ctrl-Alt-down Delete : Alt-backspace IME on/off : C-space （US配列）  Developer Modeに入る  電源OFFの状態でEsc + Reflesh + 電源ボタン 白い画面でCtrl-dを押す スペースキーを押さずに待っているとデータの消去が始まる。 再起動したらCtrl-dを押すか、30秒待つことでChrome OSが起動する。  USBメモリへcroutonをインストール（sid編） 下記エントリを参考にインストール。-mオプションで国内ミラーを選んでおく。
http://chrome.hatenablog.jp/entry/2015/05/03/020205
 Ctrl-Alt-tでshellを起動 sudo umount /media/removable/hogefuga sudo cfdiskでLinuxのパーテションを作る sudo mkfs.ext4 -L chromebook /dev/sda1 USB stickを抜き差しする GitHubからcroutonをダウンロードする。 sudo mkdir /media/removable/chromebook/crouton sudo sh ~/Downloads/crouton -r sid -t xfce -p /media/removable/chromebook/crouton -m http://ftp.</description>
    </item>
    
    <item>
      <title>Make: AVR Programming pt.00</title>
      <link>https://squeuei.github.io/post/2015-08-11/make-avr-programming-pt.00/</link>
      <pubDate>Tue, 11 Aug 2015 21:20:00 +0900</pubDate>
      
      <guid>https://squeuei.github.io/post/2015-08-11/make-avr-programming-pt.00/</guid>
      <description>Make: AVR Programmingのために。
 必要なもの 今後AVRライフを送る上で必要不可欠なもの  ブレッドボード ジャンパワイヤ 電気抵抗  LED用 200-500 Ω 1 kΩを幾つか 最低でも5つの10k Ω   ISPプログラマ か Arduino Atmel ATmega168/168A/168P/168PA DIPパッケージ USB-シリアル変換器（FTDIのがおすすめ） 色を問わずLED10個と、適切な大きさ（200-500 Ω）の抵抗（抵抗に多すぎるということはない） もしあれば5 Vの直流電源  初級編  8 Ωのいわゆるふつうのスピーカと10-100uFのキャパシタ 2個以上のNormally Openなプッシュボタン（安いタクトスイッチでOK） 最低5個の2N7000 MOSFET 2つのLDR(photoresitor, CDS) 2つのポテンショメーター(可変抵抗、10 kΩが理想だけど1 kΩ以上なら大丈夫）  中級編  ピエゾディスク（圧電素子？） サーボモータ 分解していいレーザポインタ I2Cデバイス（本書内ではLM75温度センサを使っている） SPIデバイス（本書内では25LC256 32Kbit SPI EEPROMを使っている）  モータとHブリッジ  DCモータ(3-12 Vがいい） Hブリッジを構成するためのMOSFET（本書内ではIRF9530を2つ、IRF530sを2つ使用） モータドライバ SN754410 か L293D ステッピングモータと電源 スイッチのようにはたらくデバイス たとえば  リレー SSR(Solid State Relay) ダーリントントランジスタ (e.</description>
    </item>
    
  </channel>
</rss>
